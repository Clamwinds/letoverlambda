{"version":3,"sources":["mongoasynces5.js"],"names":[],"mappings":"AAAA,YAAY;;;;;;AAAC;AAMb,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACrC,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;AAC5B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC;AACjD,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;AAC3C,IAAI,GAAG,GAAG,gCAAgC,CAAC;AAC3C,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAE1B,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACzC,SAAS,UAAU,GAAG;AAClB,QAAI,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,CAAC;AAC/C,WAAO,kBAAkB,CAAC,KAAK,CAAC,SAAS,WAAW,CAAC,QAAQ,EAAE;AAC3D,eAAO,CAAC;AAAE,oBAAQ,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI;AAC3C,qBAAK,CAAC;;;AAGF,gCAAY,GAAG,KAAK,CAAC,MAAM,CAAC;AACxB,kCAAU,EAAE,UAAU;;AAEtB,kCAAU,EAAE,SAAS,UAAU,GAAG;AAC9B,mCAAO,UAAU,CAAC;yBACrB;qBACJ,CAAC,CAAC;AACH,gCAAY,GAAG,IAAI,YAAY,CAAC;AAC5B,+BAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;qBACnJ,CAAC,CAAC;AACH,4BAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;AAClB,2BAAO,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;;AAAA,AAEzE,qBAAK,CAAC;AACF,4BAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;AAClB,2BAAO,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;;AAAA,AAEzF,qBAAK,CAAC;AACF,0BAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;AACvB,4BAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;AAClB,2BAAO,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;;AAAA,AAE5D,qBAAK,CAAC;AACF,4BAAQ,CAAC,IAAI,GAAG,EAAE,CAAC;AACnB,2BAAO,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;;AAAA,AAE7D,qBAAK,EAAE;AACH,0BAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;;AAAA,AAE3B,qBAAK,EAAE,CAAC;AACR,qBAAK,KAAK;AACN,2BAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;AAAA,aAC9B;SAAA;KACJ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CAClB;;AAED,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC","file":"mongoasynces5-compiled.js","sourcesContent":["'use strict';\n\n/*** Created by calmwinds on 1/4/16.*/\n\n// Using this to explore async/await with mongodb\n// there's an issue w/ my stuff or theres.\nvar Mongo = require('mongodb');\nvar Mongorito = require('mongorito');\nvar Model = Mongorito.Model;\nvar co = require('co');\nvar MongoClient = require('mongodb').MongoClient;\nvar assert = require('assert');\nvar ObjectId = require('mongodb').ObjectID;\nvar url = 'mongodb://localhost:27017/test';\nrequire(\"babel-polyfill\");\n\nvar regenerator = require('regenerator');\nfunction myFunction() {\n    var zipcodeClass, zipcodeclass, posts1, result;\n    return regeneratorRuntime.async(function myFunction$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n            case 0:\n                // let result = await somethingThatReturnsAPromise();\n\n                zipcodeClass = Model.extend({\n                    collection: 'zipcodes',\n\n                    collection: function collection() {\n                        return 'zipcodes';\n                    }\n                });\n                zipcodeclass = new zipcodeClass({\n                    zipcode: [\"94025\", \"94027\", \"94301\", \"94305\", \"94303\", \"94306\", \"94306\", \"94085\", \"94043\", \"94035\", \"94041\", \"94040\", \"94022\", \"94049\", \"94086\"]\n                });\n                _context.next = 4;\n                return regeneratorRuntime.awrap(Mongorito.connect('localhost/test'));\n\n            case 4:\n                _context.next = 6;\n                return regeneratorRuntime.awrap(zipcodeClass.where('zipcode').in([\"94022\"]).count());\n\n            case 6:\n                posts1 = _context.sent;\n                _context.next = 9;\n                return regeneratorRuntime.awrap(Mongorito.disconnect());\n\n            case 9:\n                _context.next = 11;\n                return regeneratorRuntime.awrap(Promise.resolve(posts1));\n\n            case 11:\n                result = _context.sent;\n\n            case 12:\n            case 'end':\n                return _context.stop();\n        }\n    }, null, this);\n}\n\nconsole.log(myFunction());\n"]}