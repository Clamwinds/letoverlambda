{"version":3,"sources":["tokencontext.js"],"names":[],"mappings":"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","file":"tokencontext-compiled.js","sourcesContent":["// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport {Parser} from \"./state\"\nimport {types as tt} from \"./tokentype\"\nimport {lineBreak} from \"./whitespace\"\n\nexport class TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = token\n    this.isExpr = isExpr\n    this.preserveSpace = preserveSpace\n    this.override = override\n  }\n}\n\nexport const types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  f_expr: new TokContext(\"function\", true)\n}\n\nconst pp = Parser.prototype\n\npp.initialContext = function() {\n  return [types.b_stat]\n}\n\npp.braceIsBlock = function(prevType) {\n  let parent\n  if (prevType === tt.colon && (parent = this.curContext()).token == \"{\")\n    return !parent.isExpr\n  if (prevType === tt._return)\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof)\n    return true\n  if (prevType == tt.braceL)\n    return this.curContext() === types.b_stat\n  return !this.exprAllowed\n}\n\npp.updateContext = function(prevType) {\n  let update, type = this.type\n  if (type.keyword && prevType == tt.dot)\n    this.exprAllowed = false\n  else if (update = type.updateContext)\n    update.call(this, prevType)\n  else\n    this.exprAllowed = type.beforeExpr\n}\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true\n    return\n  }\n  let out = this.context.pop()\n  if (out === types.b_stat && this.curContext() === types.f_expr) {\n    this.context.pop()\n    this.exprAllowed = false\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true\n  } else {\n    this.exprAllowed = !out.isExpr\n  }\n}\n\ntt.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr)\n  this.exprAllowed = true\n}\n\ntt.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl)\n  this.exprAllowed = true\n}\n\ntt.parenL.updateContext = function(prevType) {\n  let statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while\n  this.context.push(statementParens ? types.p_stat : types.p_expr)\n  this.exprAllowed = true\n}\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n}\n\ntt._function.updateContext = function() {\n  if (this.curContext() !== types.b_stat)\n    this.context.push(types.f_expr)\n  this.exprAllowed = false\n}\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    this.context.pop()\n  else\n    this.context.push(types.q_tmpl)\n  this.exprAllowed = false\n}\n"]}