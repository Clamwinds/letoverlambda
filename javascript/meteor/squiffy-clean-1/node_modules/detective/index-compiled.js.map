{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var acorn = require('acorn');\nvar walk = require('acorn/dist/walk');\nvar defined = require('defined');\n\nvar requireRe = /\\brequire\\b/;\n\nfunction parse (src, opts) {\n    if (!opts) opts = {};\n    return acorn.parse(src, {\n        ecmaVersion: defined(opts.ecmaVersion, 6),\n        sourceType: opts.sourceType,\n        ranges: defined(opts.ranges, opts.range),\n        locations: defined(opts.locations, opts.loc),\n        allowReserved: defined(opts.allowReserved, true),\n        allowReturnOutsideFunction: defined(\n            opts.allowReturnOutsideFunction, true\n        ),\n        allowHashBang: defined(opts.allowHashBang, true)\n    });\n}\n\nvar exports = module.exports = function (src, opts) {\n    return exports.find(src, opts).strings;\n};\n\nexports.find = function (src, opts) {\n    if (!opts) opts = {};\n    \n    var word = opts.word === undefined ? 'require' : opts.word;\n    if (typeof src !== 'string') src = String(src);\n    \n    var isRequire = opts.isRequire || function (node) {\n        return node.callee.type === 'Identifier'\n            && node.callee.name === word\n        ;\n    };\n    \n    var modules = { strings : [], expressions : [] };\n    if (opts.nodes) modules.nodes = [];\n    \n    var wordRe = word === 'require' ? requireRe : RegExp('\\\\b' + word + '\\\\b');\n    if (!wordRe.test(src)) return modules;\n    \n    var ast = parse(src, opts.parse);\n    \n    function visit(node, st, c) {\n        var hasRequire = wordRe.test(src.slice(node.start, node.end));\n        if (!hasRequire) return;\n        walk.base[node.type](node, st, c);\n        if (node.type !== 'CallExpression') return;\n        if (isRequire(node)) {\n            if (node.arguments.length) {\n                var arg = node.arguments[0];\n                if (arg.type === 'Literal') {\n                    modules.strings.push(arg.value);\n                }\n                else {\n                    modules.expressions.push(src.slice(arg.start, arg.end));\n                }\n            }\n            if (opts.nodes) modules.nodes.push(node);\n        }\n    }\n    \n    walk.recursive(ast, null, {\n        Statement: visit,\n        Expression: visit\n    });\n    \n    return modules;\n};\n"]}