{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY;;;;;;;AAAC;AASb,IAAI,IAAI,GAAG,aAAa,EAAE;;;;;;;;;;;AAAA,AAc1B,MAAM,CAAC,OAAO,GAAG,UAAS,UAAU,EAAC;AACnC,YAAU,GAAG,UAAU,IAAI,EAAE;;;;;AAAC,AAK9B,SAAO,aAAa;AAClB,QAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;AAEpD,QAAI,IAAI,GAAG,IAAI,EAAE,CAAC;;AAElB,QAAI,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC;;AAE1B,WAAO,CAAC,EAAE,EAAE;AACV,UAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD;;AAED,WAAQ,IAAI,CAAC;GACd,CAAA;CACF,CAAA","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\n\n\n/**\n * Dummy\n *\n * @api private\n */\nvar noop = function *() {}\n\n\n\n\n/**\n * Compose `middleware` returning a fully valid middleware \n * comprised of all those which are passed.\n *\n * @param {Array} middleware Array of generator functions which except the the `next` callback as the last parameter.\n * @return {Function} \"one generator function to rule (i.e. run) them all\".\n * @api public\n */\n\nmodule.exports = function(middleware){\n  middleware = middleware || [];\n\n  /**\n   * We pass all incoming arguments to each middleware function.\n   */\n  return function *() {\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    var next = noop();\n\n    var i = middleware.length;\n\n    while (i--) {\n      next = middleware[i].apply(this, args.concat(next));\n    }\n\n    yield * next;\n  }\n}\n\n"]}