{"version":3,"sources":["test.js"],"names":[],"mappings":";AACA,YAAY;;;;;AAAC,AAKb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;;;AAAC,AAG9B,IAAI,QAAQ,GAAG,CACb,IAAI,EACJ,CAAC,IAAI,EACL,CAAC,gBAAgB,EACjB,gBAAgB,EAChB,CAAC,EACD,CAAC,CAAC,EACF,CAAC,EACD,GAAG,EACH,aAAa;;AAEb,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EACf,sBAAsB,EACtB,qCAAqC,CACtC;;;AAAC,AAGF,IAAI,YAAY,GAAG,CACjB,GAAG,EACH,QAAQ,EACR,CAAC,QAAQ,EACT,GAAG,EACH,IAAI,EACJ,KAAK,EACL,EAAE,EACF,KAAK,EACL,IAAI,EACJ,SAAS,EACT,YAAY,EAAE,EACd,IAAI,EACJ,EAAE,EACF;AACE,SAAO,EAAE,mBAAW;AAAE,WAAO,CAAC,CAAC;GAAE;CAClC,EACD;AACE,SAAO,EAAE,mBAAW;AAAE,WAAO,CAAC,GAAC,CAAC,CAAC;GAAE;CACpC,EACD;AACE,SAAO,EAAE,mBAAW;AAAE,UAAM,EAAE,CAAC;GAAE;CAClC,EACD;AACE,UAAQ,EAAE,oBAAW;AAAE,UAAM,EAAE,CAAC;GAAE;CACnC,EACD;AACE,SAAO,EAAE,mBAAW;AAAE,UAAM,EAAE,CAAC;GAAE;AACjC,UAAQ,EAAE,oBAAW;AAAE,UAAM,EAAE,CAAC;GAAE;CACnC,CACF,CAAC;;AAEF,IAAI,CAAC,kCAAkC,EAAE,UAAS,CAAC,EAAE;AACnD,UAAQ,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE;AAC7B,KAAC,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;GAC3C,CAAC,CAAC;AACH,GAAC,CAAC,GAAG,EAAE,CAAC;CACT,CAAC,CAAC;;AAEH,IAAI,CAAC,sCAAsC,EAAE,UAAS,CAAC,EAAE;AACvD,cAAY,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE;AACjC,KAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;GAC9C,CAAC,CAAC;AACH,GAAC,CAAC,GAAG,EAAE,CAAC;CACT,CAAC,CAAC","file":"test-compiled.js","sourcesContent":["// jshint node:true\n\"use strict\";\n\n// Tests taken directly from es6-shim number tests\n// https://github.com/paulmillr/es6-shim/blob/master/test/number.js\n\nvar test = require(\"tape\");\nvar isInteger = require(\"./\");\n\n// Values that are integers\nvar INTEGERS = [\n  5295,\n  -5295,\n  -9007199254740991,\n  9007199254740991,\n  0,\n  -0,\n  4,\n  4.0,\n  1801439850948,\n  // Big numbers\n  Math.pow(2, 53),\n  1000000000000000000000,\n  1000000000000000000000000000000000000,\n];\n\n// Values that are not integers\nvar NON_INTEGERS = [\n  4.2,\n  Infinity,\n  -Infinity,\n  NaN,\n  true,\n  false,\n  \"\",\n  \"str\",\n  null,\n  undefined,\n  function () {},\n  /a/g,\n  {},\n  {\n    valueOf: function() { return 3; }\n  },\n  {\n    valueOf: function() { return 0/0; }\n  },\n  {\n    valueOf: function() { throw 17; }\n  },\n  {\n    toString: function() { throw 17; }\n  },\n  {\n    valueOf: function() { throw 17; },\n    toString: function() { throw 42; }\n  },\n];\n\ntest(\"integers should pass isInteger()\", function(t) {\n  INTEGERS.forEach(function(val) {\n    t.ok(isInteger(val), JSON.stringify(val));\n  });\n  t.end();\n});\n\ntest(\"non-integers should fail isInteger()\", function(t) {\n  NON_INTEGERS.forEach(function(val) {\n    t.notOk(isInteger(val), JSON.stringify(val));\n  });\n  t.end();\n});\n"]}