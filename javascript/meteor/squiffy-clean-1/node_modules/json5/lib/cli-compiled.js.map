{"version":3,"sources":["cli.js"],"names":[],"mappings":";;;;;;;;AAQA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,KAAK,GAAG,CACR,wCAAwC,EACxC,uEAAuE,CAC1E,CAAC,IAAI,CAAC,IAAI,CAAC;;;AAAC,AAGb,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;AAExB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACrC,WAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,WAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACnB;;AAED,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AACxB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;;AAAC,AAG1B,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAC1B,QAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,QAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC7C,QAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEjC,QAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1C,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;;AAAC,AAExC,QAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,GAAG,OAAO,CAAC,CAAC;AAC9C,MAAE,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;CACxC,CAAC,CAAC","file":"cli-compiled.js","sourcesContent":["#!/usr/bin/env node\n\n// cli.js\n// JSON5 command-line interface.\n//\n// This is pretty minimal for now; just supports compiling files via `-c`.\n// TODO More useful functionality, like output path, watch, etc.?\n\nvar FS = require('fs');\nvar JSON5 = require('./json5');\nvar Path = require('path');\n\nvar USAGE = [\n    'Usage: json5 -c path/to/file.json5 ...',\n    'Compiles JSON5 files into sibling JSON files with the same basenames.',\n].join('\\n');\n\n// if valid, args look like [node, json5, -c, file1, file2, ...]\nvar args = process.argv;\n\nif (args.length < 4 || args[2] !== '-c') {\n    console.error(USAGE);\n    process.exit(1);\n}\n\nvar cwd = process.cwd();\nvar files = args.slice(3);\n\n// iterate over each file and convert JSON5 files to JSON:\nfiles.forEach(function (file) {\n    var path = Path.resolve(cwd, file);\n    var basename = Path.basename(path, '.json5');\n    var dirname = Path.dirname(path);\n\n    var json5 = FS.readFileSync(path, 'utf8');\n    var obj = JSON5.parse(json5);\n    var json = JSON.stringify(obj, null, 4); // 4 spaces; TODO configurable?\n\n    path = Path.join(dirname, basename + '.json');\n    FS.writeFileSync(path, json, 'utf8');\n});\n"]}