{"version":3,"sources":["lodash-deep.js"],"names":[],"mappings":"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","file":"lodash-deep-compiled.js","sourcesContent":["/**\r\n * Lodash mixins for (deep) object accessing / manipulation.\r\n * @author Mark Lagendijk <mark@lagendijk.info>\r\n * @license MIT\r\n */\r\n(function(root, factory){\r\n    if(typeof define === 'function' && define.amd){\r\n        // AMD. Register as an anonymous module.\r\n        define(['lodash'], factory);\r\n    }\r\n    else if(typeof exports === 'object'){\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like environments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory(require('lodash').runInContext());\r\n    }\r\n    else{\r\n        // Browser globals (root is window)\r\n        root._.mixin(factory(root._));\r\n    }\r\n}(this, function(_, undefined){\r\n    'use strict';\r\n\r\n    var mixins = /** @lends _ */ {\r\n        /**\r\n         * Executes a deep check for the existence of a property in an object tree.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {boolean}\r\n         */\r\n        deepIn: function(collection, propertyPath){\r\n            var properties = getProperties(propertyPath);\r\n            for(var i = 0; i < properties.length; i++){\r\n                var property = properties[i];\r\n                if(_.has(collection, property) ||\r\n                    _.isObject(collection) && property in collection){\r\n                    collection = collection[property];\r\n                }\r\n                else{\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n        /**\r\n         * Executes a deep check for the existence of a own property in an object tree.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {boolean}\r\n         */\r\n        deepHas: function(collection, propertyPath){\r\n            var properties = getProperties(propertyPath);\r\n            for(var i = 0; i < properties.length; i++){\r\n                var property = properties[i];\r\n                if(_.has(collection, property)){\r\n                    collection = collection[property];\r\n                }\r\n                else{\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n        /**\r\n         * Retrieves the own value of a property in an object tree.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {*} - The value, or undefined if it doesn't exists.\r\n         */\r\n        deepOwn: function(collection, propertyPath){\r\n            var properties = getProperties(propertyPath);\r\n            if(_.deepHas(collection, properties)){\r\n                return _.reduce(properties, function(object, property){\r\n                    return object[property];\r\n                }, collection);\r\n            }\r\n        },\r\n        /**\r\n         * Retrieves the value of a property in an object tree.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {*} - The value, or undefined if it doesn't exists.\r\n         */\r\n        deepGet: function(collection, propertyPath){\r\n            var properties = getProperties(propertyPath);\r\n            if(_.deepIn(collection, properties)){\r\n                return _.reduce(properties, function(object, property){\r\n                    return object[property];\r\n                }, collection);\r\n            }\r\n        },\r\n        /**\r\n         * Sets a value of a property in an object tree. Any missing objects/arrays will be created.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @param {*} value - The value to set.\r\n         * @returns {Object} The object.\r\n         */\r\n        deepSet: function(collection, propertyPath, value){\r\n            var properties = getProperties(propertyPath);\r\n            var currentObject = collection;\r\n            _.forEach(properties, function(property, index){\r\n                if(index + 1 === properties.length){\r\n                    currentObject[property] = value;\r\n                }\r\n                else if(!_.isObject(currentObject[property])){\r\n                    currentObject[property] = isArrayKey(properties[index + 1]) ? [] : {};\r\n                }\r\n                currentObject = currentObject[property];\r\n            });\r\n\r\n            return collection;\r\n        },\r\n        /**\r\n         * Checks if the value at the propertyPath resolves to undefined, and sets it to defaultValue if this is the\r\n         * case.\r\n         * @param {Object|Array} collection - The collection of object trees.\r\n         * @param {string|Array} propertyPath - The propertyPath of the function.\r\n         * @param {*} defaultValue - The default value.\r\n         * @returns {*} Either the existing, unchanged value, or the new (default) value.\r\n         */\r\n        deepDefault: function(collection, propertyPath, defaultValue){\r\n            var value = _.deepGet(collection, propertyPath);\r\n            if(_.isUndefined(value)){\r\n                _.deepSet(collection, propertyPath, defaultValue);\r\n                return defaultValue;\r\n            }\r\n            else{\r\n                return value;\r\n            }\r\n        },\r\n        /**\r\n         * Calls a function located at the specified property path, if it exists.\r\n         * @param {Object|Array} collection - The collection of object trees.\r\n         * @param {string|Array} propertyPath - The propertyPath of the function.\r\n         * @param {Object} [thisArg] - The 'this' argument the function should be executed with.\r\n         * @param {...*} [arg] - One of the arguments the function should be executed with. Can occur 0..n times.\r\n         * @returns {*} The result of executing the function, or undefined if it doesn't exist.\r\n         */\r\n        deepCall: function(collection, propertyPath, thisArg, arg){\r\n            var args = Array.prototype.slice.call(arguments, 3);\r\n            return _.deepApply(collection, propertyPath, thisArg, args);\r\n        },\r\n        /**\r\n         * Applies a function located at the specified property path, if it exists.\r\n         * @param {Object|Array} collection - The collection of object trees.\r\n         * @param {string|Array} propertyPath - The propertyPath of the function.\r\n         * @param {Object} [thisArg] - The 'this' argument the function should be executed with.\r\n         * @param {Array} [args] - An array of the arguments the function should be executed with.\r\n         * @returns {*} The result of executing the function, or undefined if it doesn't exist.\r\n         */\r\n        deepApply: function(collection, propertyPath, thisArg, args){\r\n            var func = _.deepGet(collection, propertyPath);\r\n            if(_.isFunction(func)){\r\n                return func.apply(thisArg, args);\r\n            }\r\n        },\r\n        /**\r\n         * Escapes a property name for usage in a string based property path.\r\n         * @param {string} propertyName - The name / key of the property.\r\n         * @returns {string}\r\n         */\r\n        deepEscapePropertyName: function(propertyName){\r\n            return propertyName\r\n                .replace(/\\\\/g, '\\\\\\\\')\r\n                .replace(/(\\.|\\[|\\])/g, '\\\\$1');\r\n        },\r\n        /**\r\n         * Maps all values in an object tree and returns a new object with the same structure as the original.\r\n         * @param {Object} object - The object to map.\r\n         * @param {Function} callback - The function to be called per iteration on any non-object value in the tree.\r\n         *   Callback is invoked with 2 arguments: (value, propertyPath)\r\n         *   propertyPath is the path of the current property, in array format.\r\n         * @returns {Object}\r\n         */\r\n        deepMapValues: function(object, callback, propertyPath){\r\n            var properties = getProperties(propertyPath);\r\n            if(_.isArray(object)){\r\n                return _.map(object, deepMapValuesIteratee);\r\n            }\r\n            else if(_.isObject(object) && !_.isDate(object) && !_.isRegExp(object)){\r\n                return _.extend({}, object, _.mapValues(object, deepMapValuesIteratee));\r\n            }\r\n            else{\r\n                return callback(object, properties);\r\n            }\r\n\r\n            function deepMapValuesIteratee(value, key){\r\n                return _.deepMapValues(value, callback, _.flatten([properties, key]));\r\n            }\r\n        },\r\n        /**\r\n         * @function\r\n         * Executes a deep pluck on an collection of object trees.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepPluck: createDeepPluckStyleCallback(_.map),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#findIndex _.findIndex} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {int}\r\n         */\r\n        deepFindIndex: createDeepPluckStyleCallback(_.findIndex),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#findLastIndex _.findLastIndex} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {int}\r\n         */\r\n        deepFindLastIndex: createDeepPluckStyleCallback(_.findLastIndex),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#first _.first} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {*}\r\n         */\r\n        deepFirst: createDeepPluckStyleCallback(_.first),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#flatten _.flatten} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepFlatten: createDeepPluckStyleCallback(_.flatten),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#initial _.initial} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepInitial: createDeepPluckStyleCallback(_.initial),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#last _.last} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {*}\r\n         */\r\n        deepLast: createDeepPluckStyleCallback(_.last),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#lastIndexOf _.lastIndexOf} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {int}\r\n         */\r\n        deepLastIndexOf: createDeepPluckStyleCallback(_.lastIndexOf),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#remove _.remove} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepRemove: createDeepPluckStyleCallback(_.remove),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#rest _.rest} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepRest: createDeepPluckStyleCallback(_.rest),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#sortedIndex _.sortedIndex} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {int}\r\n         */\r\n        deepSortedIndex: createDeepPluckStyleCallback(_.sortedIndex),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#uniq _.uniq} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepUniq: createDeepPluckStyleCallback(_.uniq),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#countBy _.countBy} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Object}\r\n         */\r\n        deepCountBy: createDeepPluckStyleCallback(_.countBy),\r\n        /**\r\n         * @function\r\n         * Executes{@link https://lodash.com/docs#every _.every} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {boolean}\r\n         */\r\n        deepEvery: createDeepPluckStyleCallback(_.every),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#filter _.filter} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepFilter: createDeepPluckStyleCallback(_.filter),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#find _.find} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {*}\r\n         */\r\n        deepFind: createDeepPluckStyleCallback(_.find),\r\n        /**\r\n         * @function\r\n         * Executes{@link https://lodash.com/docs#groupBy _.groupBy} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Object}\r\n         */\r\n        deepGroupBy: createDeepPluckStyleCallback(_.groupBy),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#indexBy _.indexBy} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Object}\r\n         */\r\n        deepIndexBy: createDeepPluckStyleCallback(_.indexBy),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#max _.max} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {*}\r\n         */\r\n        deepMax: createDeepPluckStyleCallback(_.max),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#min _.min} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {*}\r\n         */\r\n        deepMin: createDeepPluckStyleCallback(_.min),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#reject _.reject} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepReject: createDeepPluckStyleCallback(_.reject),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#some _.some} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {boolean}\r\n         */\r\n        deepSome: createDeepPluckStyleCallback(_.some),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#sortBy _.sortBy} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {Array}\r\n         */\r\n        deepSortBy: createDeepPluckStyleCallback(_.sortBy),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#findKey _.findKey} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {string|undefined}\r\n         */\r\n        deepFindKey: createDeepPluckStyleCallback(_.findKey),\r\n        /**\r\n         * @function\r\n         * Executes {@link https://lodash.com/docs#findLastKey _.findLastKey} with a \"_.deepPluck\" style callback.\r\n         * @param {Object|Array} collection - The root object/array of the tree.\r\n         * @param {string|Array} propertyPath - The propertyPath.\r\n         * @returns {string|undefined}\r\n         */\r\n        deepFindLastKey: createDeepPluckStyleCallback(_.findLastKey)\r\n    };\r\n\r\n    // Support pre 1.2.0 function names\r\n    mixins.deepSetValue = mixins.deepSet;\r\n    mixins.deepGetValue = mixins.deepGet;\r\n    mixins.deepGetOwnValue = mixins.deepOwn;\r\n\r\n    _.mixin(mixins);\r\n\r\n    /**\r\n     * Returns the property path as array.\r\n     * @param {string|Array} propertyPath\r\n     * @returns {Array}\r\n     */\r\n    function getProperties(propertyPath){\r\n        if(_.isArray(propertyPath)){\r\n            return propertyPath;\r\n        }\r\n\r\n        if(!_.isString(propertyPath)){\r\n            return [];\r\n        }\r\n\r\n        return parseStringPropertyPath(propertyPath);\r\n    }\r\n\r\n    /**\r\n     * Parses a string based propertyPath\r\n     * @param {string} propertyPath\r\n     * @returns {Array}\r\n     */\r\n    function parseStringPropertyPath(propertyPath){\r\n        var character = '';\r\n        var parsedPropertyPath = [];\r\n        var parsedPropertyPathPart = '';\r\n        var escapeNextCharacter = false;\r\n        var isSpecialCharacter = false;\r\n        var insideBrackets = false;\r\n\r\n        // Walk through the path and find backslashes that escape periods or other backslashes, and split on unescaped\r\n        // periods and brackets.\r\n        for(var i = 0; i < propertyPath.length; i++){\r\n            character = propertyPath[i];\r\n            isSpecialCharacter = (character === '\\\\' || character === '[' || character === ']' || character === '.');\r\n\r\n            if(isSpecialCharacter && !escapeNextCharacter){\r\n                if(insideBrackets && character !== ']'){\r\n                    throw new SyntaxError('unexpected \"' + character + '\" within brackets at character ' + i + ' in property path ' + propertyPath);\r\n                }\r\n\r\n                switch(character){\r\n                case '\\\\':\r\n                    escapeNextCharacter = true;\r\n                    break;\r\n                case ']':\r\n                    insideBrackets = false;\r\n                    break;\r\n                case '[':\r\n                    insideBrackets = true;\r\n                    /* falls through */\r\n                case '.':\r\n                    parsedPropertyPath.push(parsedPropertyPathPart);\r\n                    parsedPropertyPathPart = '';\r\n                    break;\r\n                }\r\n            }\r\n            else{\r\n                parsedPropertyPathPart += character;\r\n                escapeNextCharacter = false;\r\n            }\r\n        }\r\n\r\n        if(parsedPropertyPath[0] === ''){\r\n            //allow '[0]', or '.0'\r\n            parsedPropertyPath.splice(0, 1);\r\n        }\r\n\r\n        // capture the final part\r\n        parsedPropertyPath.push(parsedPropertyPathPart);\r\n        return parsedPropertyPath;\r\n    }\r\n\r\n    /**\r\n     * Creates a function which executes the originalFunction with a \"_.deepPluck\" style callback.\r\n     * @param {Function} originalFunction - The orignal (Lodash) function.\r\n     * @returns {Function}\r\n     */\r\n    function createDeepPluckStyleCallback(originalFunction){\r\n        return function(collection, propertyPath){\r\n            return originalFunction(collection, function(item){\r\n                return _.deepGet(item, propertyPath);\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks whether key is a valid array key\r\n     * @param key\r\n     * @returns {boolean}\r\n     */\r\n    function isArrayKey(key){\r\n        var array = [];\r\n        array[key] = null;\r\n        return array.length > 0;\r\n    }\r\n\r\n    return mixins;\r\n}));\r\n"]}