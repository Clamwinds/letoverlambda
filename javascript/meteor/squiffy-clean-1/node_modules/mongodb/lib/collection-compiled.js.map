{"version":3,"sources":["collection.js"],"names":[],"mappings":"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","file":"collection-compiled.js","sourcesContent":["\"use strict\";\n\nvar checkCollectionName = require('./utils').checkCollectionName\n  , ObjectID = require('mongodb-core').BSON.ObjectID\n  , Long = require('mongodb-core').BSON.Long\n  , Code = require('mongodb-core').BSON.Code\n  , f = require('util').format\n  , AggregationCursor = require('./aggregation_cursor')\n  , MongoError = require('mongodb-core').MongoError\n  , shallowClone = require('./utils').shallowClone\n  , isObject = require('./utils').isObject\n  , toError = require('./utils').toError\n  , normalizeHintField = require('./utils').normalizeHintField\n  , handleCallback = require('./utils').handleCallback\n  , decorateCommand = require('./utils').decorateCommand\n  , formattedOrderClause = require('./utils').formattedOrderClause\n  , ReadPreference = require('./read_preference')\n  , CoreReadPreference = require('mongodb-core').ReadPreference\n  , CommandCursor = require('./command_cursor')\n  , Define = require('./metadata')\n  , Cursor = require('./cursor')\n  , unordered = require('./bulk/unordered')\n  , ordered = require('./bulk/ordered');\n\n/**\n * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Create a collection we want to drop later\n *   var col = db.collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     test.equal(null, err);\n *     test.equal(4, items.length);\n *     db.close();\n *   });\n * });\n */\n\n/**\n * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {string} collectionName Get the collection name.\n * @property {string} namespace Get the full collection namespace.\n * @property {object} writeConcern The current write concern values.\n * @property {object} readConcern The current read concern values.\n * @property {object} hint Get current index hint for collection.\n * @return {Collection} a Collection instance.\n */\nvar Collection = function(db, topology, dbName, name, pkFactory, options) {\n  checkCollectionName(name);\n  var self = this;\n  // Unpack variables\n  var internalHint = null;\n  var opts = options != null && ('object' === typeof options) ? options : {};\n  var slaveOk = options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk;\n  var serializeFunctions = options == null || options.serializeFunctions == null ? db.serializeFunctions : options.serializeFunctions;\n  var raw = options == null || options.raw == null ? db.raw : options.raw;\n  var readPreference = null;\n  var collectionHint = null;\n  var namespace = f(\"%s.%s\", dbName, name);\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Assign the right collection level readPreference\n  if(options && options.readPreference) {\n    readPreference = options.readPreference;\n  } else if(db.options.readPreference) {\n    readPreference = db.options.readPreference;\n  }\n\n  // Set custom primary key factory if provided\n  pkFactory = pkFactory == null\n    ? ObjectID\n    : pkFactory;\n\n  // Internal state\n  this.s = {\n    // Set custom primary key factory if provided\n      pkFactory: pkFactory\n    // Db\n    , db: db\n    // Topology\n    , topology: topology\n    // dbName\n    , dbName: dbName\n    // Options\n    , options: options\n    // Namespace\n    , namespace: namespace\n    // Read preference\n    , readPreference: readPreference\n    // Raw\n    , raw: raw\n    // SlaveOK\n    , slaveOk: slaveOk\n    // Serialize functions\n    , serializeFunctions: serializeFunctions\n    // internalHint\n    , internalHint: internalHint\n    // collectionHint\n    , collectionHint: collectionHint\n    // Name\n    , name: name\n    // Promise library\n    , promiseLibrary: promiseLibrary\n    // Read Concern\n    , readConcern: options.readConcern\n  }\n}\n\nvar define = Collection.define = new Define('Collection', Collection, false);\n\nObject.defineProperty(Collection.prototype, 'collectionName', {\n  enumerable: true, get: function() { return this.s.name; }\n});\n\nObject.defineProperty(Collection.prototype, 'namespace', {\n  enumerable: true, get: function() { return this.s.namespace; }\n});\n\nObject.defineProperty(Collection.prototype, 'readConcern', {\n  enumerable: true, get: function() { return this.s.readConcern || {level: 'local'}; }\n});\n\nObject.defineProperty(Collection.prototype, 'writeConcern', {\n  enumerable:true,\n  get: function() {\n    var ops = {};\n    if(this.s.options.w != null) ops.w = this.s.options.w;\n    if(this.s.options.j != null) ops.j = this.s.options.j;\n    if(this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if(this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * @ignore\n */\nObject.defineProperty(Collection.prototype, \"hint\", {\n    enumerable: true\n  , get: function () { return this.s.collectionHint; }\n  , set: function (v) { this.s.collectionHint = normalizeHintField(v); }\n});\n\n/**\n * Creates a cursor for a query that can be used to iterate over results from MongoDB\n * @method\n * @param {object} query The cursor query object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCollection.prototype.find = function() {\n  var options\n    , args = Array.prototype.slice.call(arguments, 0)\n    , has_callback = typeof args[args.length - 1] === 'function'\n    , has_weird_callback = typeof args[0] === 'function'\n    , callback = has_callback ? args.pop() : (has_weird_callback ? args.shift() : null)\n    , len = args.length\n    , selector = len >= 1 ? args[0] : {}\n    , fields = len >= 2 ? args[1] : undefined;\n\n  if(len === 1 && has_weird_callback) {\n    // backwards compat for callback?, options case\n    selector = {};\n    options = args[0];\n  }\n\n  if(len === 2 && fields !== undefined && !Array.isArray(fields)) {\n    var fieldKeys = Object.keys(fields);\n    var is_option = false;\n\n    for(var i = 0; i < fieldKeys.length; i++) {\n      if(testForFields[fieldKeys[i]] != null) {\n        is_option = true;\n        break;\n      }\n    }\n\n    if(is_option) {\n      options = fields;\n      fields = undefined;\n    } else {\n      options = {};\n    }\n  } else if(len === 2 && Array.isArray(fields) && !Array.isArray(fields[0])) {\n    var newFields = {};\n    // Rewrite the array\n    for(var i = 0; i < fields.length; i++) {\n      newFields[fields[i]] = 1;\n    }\n    // Set the fields\n    fields = newFields;\n  }\n\n  if(3 === len) {\n    options = args[2];\n  }\n\n  // Ensure selector is not null\n  selector = selector == null ? {} : selector;\n  // Validate correctness off the selector\n  var object = selector;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length)  {\n      var error = new Error(\"query selector raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Validate correctness of the field selector\n  var object = fields;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length)  {\n      var error = new Error(\"query fields raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Check special case where we are using an objectId\n  if(selector instanceof ObjectID || (selector != null && selector._bsontype == 'ObjectID')) {\n    selector = {_id:selector};\n  }\n\n  // If it's a serialized fields field we need to just let it through\n  // user be warned it better be good\n  if(options && options.fields && !(Buffer.isBuffer(options.fields))) {\n    fields = {};\n\n    if(Array.isArray(options.fields)) {\n      if(!options.fields.length) {\n        fields['_id'] = 1;\n      } else {\n        for (var i = 0, l = options.fields.length; i < l; i++) {\n          fields[options.fields[i]] = 1;\n        }\n      }\n    } else {\n      fields = options.fields;\n    }\n  }\n\n  if (!options) options = {};\n\n  var newOptions = {};\n  // Make a shallow copy of options\n  for (var key in options) {\n    newOptions[key] = options[key];\n  }\n\n  // Unpack options\n  newOptions.skip = len > 3 ? args[2] : options.skip ? options.skip : 0;\n  newOptions.limit = len > 3 ? args[3] : options.limit ? options.limit : 0;\n  newOptions.raw = options.raw != null && typeof options.raw === 'boolean' ? options.raw : this.s.raw;\n  newOptions.hint = options.hint != null ? normalizeHintField(options.hint) : this.s.collectionHint;\n  newOptions.timeout = len == 5 ? args[4] : typeof options.timeout === 'undefined' ? undefined : options.timeout;\n  // // If we have overridden slaveOk otherwise use the default db setting\n  newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;\n\n  // Add read preference if needed\n  newOptions = getReadPreference(this, newOptions, this.s.db, this);\n  // Set slave ok to true if read preference different from primary\n  if(newOptions.readPreference != null\n    && (newOptions.readPreference != 'primary' || newOptions.readPreference.mode != 'primary')) {\n    newOptions.slaveOk = true;\n  }\n\n  // Ensure the query is an object\n  if(selector != null && typeof selector != 'object') {\n    throw MongoError.create({message: \"query selector must be an object\", driver:true });\n  }\n\n  // Build the find command\n  var findCommand = {\n      find: this.s.namespace\n    , limit: newOptions.limit\n    , skip: newOptions.skip\n    , query: selector\n  }\n\n  // Ensure we use the right await data option\n  if(typeof newOptions.awaitdata == 'boolean')  {\n    newOptions.awaitData = newOptions.awaitdata\n  };\n\n  // Translate to new command option noCursorTimeout\n  if(typeof newOptions.timeout == 'boolean') newOptions.noCursorTimeout = newOptions.timeout;\n\n  // Merge in options to command\n  for(var name in newOptions) {\n    if(newOptions[name] != null) findCommand[name] = newOptions[name];\n  }\n\n  // Format the fields\n  var formatFields = function(fields) {\n    var object = {};\n    if(Array.isArray(fields)) {\n      for(var i = 0; i < fields.length; i++) {\n        if(Array.isArray(fields[i])) {\n          object[fields[i][0]] = fields[i][1];\n        } else {\n          object[fields[i][0]] = 1;\n        }\n      }\n    } else {\n      object = fields;\n    }\n\n    return object;\n  }\n\n  // Special treatment for the fields selector\n  if(fields) findCommand.fields = formatFields(fields);\n\n  // Add db object to the new options\n  newOptions.db = this.s.db;\n\n  // Add the promise library\n  newOptions.promiseLibrary = this.s.promiseLibrary;\n\n  // Set raw if available at collection level\n  if(newOptions.raw == null && this.s.raw) newOptions.raw = this.s.raw;\n\n  // Sort options\n  if(findCommand.sort)\n    findCommand.sort = formattedOrderClause(findCommand.sort);\n\n  // Set the readConcern\n  if(this.s.readConcern) {\n    findCommand.readConcern = this.s.readConcern;\n  }\n\n  // Create the cursor\n  if(typeof callback == 'function') return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, findCommand, newOptions));\n  return this.s.topology.cursor(this.s.namespace, findCommand, newOptions);\n}\n\ndefine.classMethod('find', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object} doc Document to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertOne = function(doc, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  if(Array.isArray(doc)) return callback(MongoError.create({message: 'doc parameter must be an object', driver:true }));\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return insertOne(self, doc, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    insertOne(self, doc, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar insertOne = function(self, doc, options, callback) {\n  insertDocuments(self, [doc], options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    // Workaround for pre 2.6 servers\n    if(r == null) return callback(null, {result: {ok:1}});\n    // Add values to top level to ensure crud spec compatibility\n    r.insertedCount = r.result.n;\n    r.insertedId = doc._id;\n    if(callback) callback(null, r);\n  });\n}\n\nvar mapInserManyResults = function(docs, r) {\n  var ids = r.getInsertedIds();\n  var keys = Object.keys(ids);\n  var finalIds = new Array(keys);\n\n  for(var i = 0; i < keys.length; i++) {\n    if(ids[keys[i]]._id) {\n      finalIds[ids[keys[i]].index] = ids[keys[i]]._id;\n    }\n  }\n\n  return {\n    result: {ok: 1, n: r.insertedCount},\n    ops: docs,\n    insertedCount: r.insertedCount,\n    insertedIds: finalIds\n  }\n}\n\ndefine.classMethod('insertOne', {callback: true, promise:true});\n\n/**\n * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertMany = function(docs, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {ordered:true};\n  if(!Array.isArray(docs)) return callback(MongoError.create({message: 'docs parameter must be an array of documents', driver:true }));\n\n  // Get the write concern options\n  if(typeof options.checkKeys != 'boolean') {\n    options.checkKeys = true;\n  }\n\n  // If keep going set unordered\n  options['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Set up the force server object id\n  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'\n    ? options.forceServerObjectId : self.s.db.options.forceServerObjectId;\n\n  // Do we want to force the server to assign the _id key\n  if(forceServerObjectId !== true) {\n    // Add _id if not specified\n    for(var i = 0; i < docs.length; i++) {\n      if(docs[i]._id == null) docs[i]._id = self.s.pkFactory.createPk();\n    }\n  }\n\n  // Generate the bulk write operations\n  var operations = [{\n    insertMany: docs\n  }];\n\n  // Execute using callback\n  if(typeof callback == 'function') return bulkWrite(self, operations, options, function(err, r) {\n    if(err) return callback(err, r);\n    callback(null, mapInserManyResults(docs, r));\n  });\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    bulkWrite(self, operations, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(mapInserManyResults(docs, r));\n    });\n  });\n}\n\ndefine.classMethod('insertMany', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~BulkWriteOpResult\n * @property {number} insertedCount Number of documents inserted.\n * @property {number} matchedCount Number of documents matched for update.\n * @property {number} modifiedCount Number of documents modified.\n * @property {number} deletedCount Number of documents deleted.\n * @property {number} upsertedCount Number of documents upserted.\n * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation\n * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~bulkWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Perform a bulkWrite operation without a fluent API\n *\n * Legal operation types are\n *\n *  { insertOne: { document: { a: 1 } } }\n *\n *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { deleteOne: { filter: {c:1} } }\n *\n *  { deleteMany: { filter: {c:1} } }\n *\n *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}\n *\n * If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} operations Bulk operations to perform.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ordered=true] Execute write operation in ordered or unordered fashion.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~bulkWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.bulkWrite = function(operations, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {ordered:true};\n\n  if(!Array.isArray(operations)) {\n    throw MongoError.create({message: \"operations must be an array of documents\", driver:true });\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return bulkWrite(self, operations, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    bulkWrite(self, operations, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar bulkWrite = function(self, operations, options, callback) {\n  // Add ignoreUndfined\n  if(self.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = self.s.options.ignoreUndefined;\n  }\n\n  // Create the bulk operation\n  var bulk = options.ordered == true || options.ordered == null ? self.initializeOrderedBulkOp(options) : self.initializeUnorderedBulkOp(options);\n\n  // for each op go through and add to the bulk\n  for(var i = 0; i < operations.length; i++) {\n    bulk.raw(operations[i]);\n  }\n\n  // Final options for write concern\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n  var writeCon = finalOptions.writeConcern ? finalOptions.writeConcern : {};\n\n  // Execute the bulk\n  bulk.execute(writeCon, function(err, r) {\n    // We have connection level error\n    if(!r && err) return callback(err, null);\n    // We have single error\n    if(r && r.hasWriteErrors() && r.getWriteErrorCount() == 1) {\n      return callback(toError(r.getWriteErrorAt(0)), r);\n    }\n\n    // if(err) return callback(err);\n    r.insertedCount = r.nInserted;\n    r.matchedCount = r.nMatched;\n    r.modifiedCount = r.nModified || 0;\n    r.deletedCount = r.nRemoved;\n    r.upsertedCount = r.getUpsertedIds().length;\n    r.upsertedIds = {};\n    r.insertedIds = {};\n\n    // Update the n\n    r.n = r.insertedCount;\n\n    // Inserted documents\n    var inserted = r.getInsertedIds();\n    // Map inserted ids\n    for(var i = 0; i < inserted.length; i++) {\n      r.insertedIds[inserted[i].index] = inserted[i]._id;\n    }\n\n    // Upserted documents\n    var upserted = r.getUpsertedIds();\n    // Map upserted ids\n    for(var i = 0; i < upserted.length; i++) {\n      r.upsertedIds[upserted[i].index] = upserted[i]._id;\n    }\n\n    // Check if we have write errors\n    if(r.hasWriteErrors()) {\n      // Get all the errors\n      var errors = r.getWriteErrors();\n      // Return the MongoError object\n      return callback(toError({\n        message: 'write operation failed', code: errors[0].code, writeErrors: errors\n      }), r);\n    }\n\n    // Check if we have a writeConcern error\n    if(r.getWriteConcernError()) {\n      // Return the MongoError object\n      return callback(toError(r.getWriteConcernError()), r);\n    }\n\n    // Return the results\n    callback(null, r);\n  });\n}\n\nvar insertDocuments = function(self, docs, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Ensure we are operating on an array op docs\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n  if(typeof finalOptions.checkKeys != 'boolean') finalOptions.checkKeys = true;\n\n  // If keep going set unordered\n  if(finalOptions.keepGoing == true) finalOptions.ordered = false;\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Set up the force server object id\n  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'\n    ? options.forceServerObjectId : self.s.db.options.forceServerObjectId;\n\n  // Add _id if not specified\n  if(forceServerObjectId !== true){\n    for(var i = 0; i < docs.length; i++) {\n      if(docs[i]._id == null) docs[i]._id = self.s.pkFactory.createPk();\n    }\n  }\n\n  // File inserts\n  self.s.topology.insert(self.s.namespace, docs, finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Add docs to the list\n    result.ops = docs;\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('bulkWrite', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~WriteOpResult\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~writeOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~WriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * @typedef {Object} Collection~insertWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {ObjectId[]} insertedIds All the generated _id's for the inserted documents.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * @typedef {Object} Collection~insertOneWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {ObjectId} insertedId The driver generated ObjectId for the insert operation.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertOneWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertOneWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {(object|object[])} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use insertOne, insertMany or bulkWrite\n */\nCollection.prototype.insert = function(docs, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {ordered:false};\n  docs = !Array.isArray(docs) ? [docs] : docs;\n\n  if(options.keepGoing == true) {\n    options.ordered = false;\n  }\n\n  return this.insertMany(docs, options, callback);\n}\n\ndefine.classMethod('insert', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~updateWriteOpResult\n * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents scanned.\n * @property {Number} result.nModified The total count of documents modified.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} matchedCount The number of documents that matched the filter.\n * @property {Number} modifiedCount The number of documents that were modified.\n * @property {Number} upsertedCount The number of documents upserted.\n * @property {Object} upsertedId The upserted id.\n * @property {ObjectId} upsertedId._id The upserted _id returned from the server.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~updateWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~updateWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Update a single document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateOne = function(filter, update, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return updateOne(self, filter, update, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    updateOne(self, filter, update, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar updateOne = function(self, filter, update, options, callback) {\n  // Set single document update\n  options.multi = false;\n  // Execute update\n  updateDocuments(self, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.matchedCount = r.result.n;\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('updateOne', {callback: true, promise:true});\n\n/**\n * Replace a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} doc The Document that replaces the matching document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.replaceOne = function(filter, update, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return replaceOne(self, filter, update, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    replaceOne(self, filter, update, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar replaceOne = function(self, filter, update, options, callback) {\n  // Set single document update\n  options.multi = false;\n  // Execute update\n  updateDocuments(self, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.matchedCount = r.result.n;\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.ops = [update];\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('replaceOne', {callback: true, promise:true});\n\n/**\n * Update multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateMany = function(filter, update, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return updateMany(self, filter, update, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    updateMany(self, filter, update, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar updateMany = function(self, filter, update, options, callback) {\n  // Set single document update\n  options.multi = true;\n  // Execute update\n  updateDocuments(self, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.matchedCount = r.result.n;\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('updateMany', {callback: true, promise:true});\n\nvar updateDocuments = function(self, selector, document, options, callback) {\n  if('function' === typeof options) callback = options, options = null;\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // If we are not providing a selector or document throw\n  if(selector == null || typeof selector != 'object') return callback(toError(\"selector must be a valid JavaScript object\"));\n  if(document == null || typeof document != 'object') return callback(toError(\"document must be a valid JavaScript object\"));\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n\n  // Do we return the actual result document\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Execute the operation\n  var op = {q: selector, u: document};\n  op.upsert = typeof options.upsert == 'boolean' ? options.upsert : false;\n  op.multi = typeof options.multi == 'boolean' ? options.multi : false;\n\n  // Update options\n  self.s.topology.update(self.s.namespace, [op], finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Updates documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} document The update document.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {boolean} [options.multi=false] Update one/all documents with operation.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use updateOne, updateMany or bulkWrite\n */\nCollection.prototype.update = function(selector, document, options, callback) {\n  var self = this;\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return updateDocuments(self, selector, document, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    updateDocuments(self, selector, document, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('update', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~deleteWriteOpResult\n * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents deleted.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} deletedCount The number of documents deleted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~deleteWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~deleteWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Delete a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteOne = function(filter, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  var options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return deleteOne(self, filter, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    deleteOne(self, filter, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar deleteOne = function(self, filter, options, callback) {\n  options.single = true;\n  removeDocuments(self, filter, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.deletedCount = r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\ndefine.classMethod('deleteOne', {callback: true, promise:true});\n\nCollection.prototype.removeOne = Collection.prototype.deleteOne;\n\ndefine.classMethod('removeOne', {callback: true, promise:true});\n\n/**\n * Delete multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the documents to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteMany = function(filter, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  var options = shallowClone(options);\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return deleteMany(self, filter, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    deleteMany(self, filter, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar deleteMany = function(self, filter, options, callback) {\n  options.single = false;\n  removeDocuments(self, filter, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    if(r == null) return callback(null, {result: {ok:1}});\n    r.deletedCount = r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\nvar removeDocuments = function(self, selector, options, callback) {\n  if(typeof options == 'function') {\n    callback = options, options = {};\n  } else if (typeof selector === 'function') {\n    callback = selector;\n    options = {};\n    selector = {};\n  }\n\n  // Create an empty options object if the provided one is null\n  options = options || {};\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n\n  // If selector is null set empty\n  if(selector == null) selector = {};\n\n  // Build the op\n  var op = {q: selector, limit: 0};\n  if(options.single) op.limit = 1;\n\n  // Execute the remove\n  self.s.topology.remove(self.s.namespace, [op], finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('deleteMany', {callback: true, promise:true});\n\nCollection.prototype.removeMany = Collection.prototype.deleteMany;\n\ndefine.classMethod('removeMany', {callback: true, promise:true});\n\n/**\n * Remove documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.single=false] Removes the first document found.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use deleteOne, deleteMany or bulkWrite\n */\nCollection.prototype.remove = function(selector, options, callback) {\n  var self = this;\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return removeDocuments(self, selector, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    removeDocuments(self, selector, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('remove', {callback: true, promise:true});\n\n/**\n * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic\n * operators and update instead for more efficient operations.\n * @method\n * @param {object} doc Document to save\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nCollection.prototype.save = function(doc, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Add ignoreUndfined\n  if(this.s.options.ignoreUndefined) {\n    options = shallowClone(options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return save(self, doc, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    save(self, doc, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar save = function(self, doc, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n  // Establish if we need to perform an insert or update\n  if(doc._id != null) {\n    finalOptions.upsert = true;\n    return updateDocuments(self, {_id: doc._id}, doc, finalOptions, callback);\n  }\n\n  // Insert the document\n  insertDocuments(self, [doc], options, function(err, r) {\n    if(callback == null) return;\n    if(doc == null) return handleCallback(callback, null, null);\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, r);\n  });\n}\n\ndefine.classMethod('save', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Collection~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * Fetches the first document that matches the query\n * @method\n * @param {object} query Query for find Operation\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort=null] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.fields=null] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint=null] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.explain=false] Explain the query instead of returning the data.\n * @param {boolean} [options.snapshot=false] Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan=null] Limit the number of items to scan.\n * @param {number} [options.min=null] Set index bounds.\n * @param {number} [options.max=null] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment=null] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use find().limit(1).next(function(err, doc){})\n */\nCollection.prototype.findOne = function() {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  var callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOne(self, args, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    findOne(self, args, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOne = function(self, args, callback) {\n  var cursor = self.find.apply(self, args).limit(-1).batchSize(1);\n  // Return the item\n  cursor.next(function(err, item) {\n    if(err != null) return handleCallback(callback, toError(err), null);\n    handleCallback(callback, null, item);\n  });\n}\n\ndefine.classMethod('findOne', {callback: true, promise:true});\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Collection~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Rename the collection.\n *\n * @method\n * @param {string} newName New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {Collection~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.rename = function(newName, opt, callback) {\n  var self = this;\n  if(typeof opt == 'function') callback = opt, opt = {};\n  opt = opt || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return rename(self, newName, opt, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    rename(self, newName, opt, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar rename = function(self, newName, opt, callback) {\n  // Check the collection name\n  checkCollectionName(newName);\n  // Build the command\n  var renameCollection = f(\"%s.%s\", self.s.dbName, self.s.name);\n  var toCollection =  f(\"%s.%s\", self.s.dbName, newName);\n  var dropTarget = typeof opt.dropTarget == 'boolean' ? opt.dropTarget : false;\n  var cmd = {'renameCollection':renameCollection, 'to':toCollection, 'dropTarget':dropTarget};\n\n  // Execute against admin\n  self.s.db.admin().command(cmd, opt, function(err, doc) {\n    if(err) return handleCallback(callback, err, null);\n    // We have an error\n    if(doc.errmsg) return handleCallback(callback, toError(doc), null);\n    try {\n      return handleCallback(callback, null, new Collection(self.s.db, self.s.topology, self.s.dbName, newName, self.s.pkFactory, self.s.options));\n    } catch(err) {\n      return handleCallback(callback, toError(err), null);\n    }\n  });\n}\n\ndefine.classMethod('rename', {callback: true, promise:true});\n\n/**\n * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.drop = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return self.s.db.dropCollection(self.s.name, callback);\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.s.db.dropCollection(self.s.name, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('drop', {callback: true, promise:true});\n\n/**\n * Returns the options of the collection.\n *\n * @method\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.options = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return options(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar options = function(self, callback) {\n  self.s.db.listCollections({name: self.s.name}).toArray(function(err, collections) {\n    if(err) return handleCallback(callback, err);\n    if(collections.length == 0) {\n      return handleCallback(callback, MongoError.create({message: f(\"collection %s not found\", self.s.namespace), driver:true }));\n    }\n\n    handleCallback(callback, err, collections[0].options || null);\n  });\n}\n\ndefine.classMethod('options', {callback: true, promise:true});\n\n/**\n * Returns if the collection is a capped collection\n *\n * @method\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.isCapped = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return isCapped(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    isCapped(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar isCapped = function(self, callback) {\n  self.options(function(err, document) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, document && document.capped);\n  });\n}\n\ndefine.classMethod('isCapped', {callback: true, promise:true});\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndex = function(fieldOrSpec, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n  options = typeof callback === 'function' ? options : callback;\n  options = options == null ? {} : options;\n\n  // Execute using callback\n  if(typeof callback == 'function') return createIndex(self, fieldOrSpec, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createIndex(self, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar createIndex = function(self, fieldOrSpec, options, callback) {\n  self.s.db.createIndex(self.s.name, fieldOrSpec, options, callback);\n}\n\ndefine.classMethod('createIndex', {callback: true, promise:true});\n\n/**\n * Creates multiple indexes in the collection, this method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n * @method\n * @param {array} indexSpecs An array of index specifications to be created\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndexes = function(indexSpecs, callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return createIndexes(self, indexSpecs, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createIndexes(self, indexSpecs, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar createIndexes = function(self, indexSpecs, callback) {\n  // Ensure we generate the correct name if the parameter is not set\n  for(var i = 0; i < indexSpecs.length; i++) {\n    if(indexSpecs[i].name == null) {\n      var keys = [];\n\n      for(var name in indexSpecs[i].key) {\n        keys.push(f('%s_%s', name, indexSpecs[i].key[name]));\n      }\n\n      // Set the name\n      indexSpecs[i].name = keys.join('_');\n    }\n  }\n\n  // Execute the index\n  self.s.db.command({\n    createIndexes: self.s.name, indexes: indexSpecs\n  }, callback);\n}\n\ndefine.classMethod('createIndexes', {callback: true, promise:true});\n\n/**\n * Drops an index from this collection.\n * @method\n * @param {string} indexName Name of the index to drop.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndex = function(indexName, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Execute using callback\n  if(typeof callback == 'function') return dropIndex(self, indexName, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    dropIndex(self, indexName, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar dropIndex = function(self, indexName, options, callback) {\n  // Delete index command\n  var cmd = {'deleteIndexes':self.s.name, 'index':indexName};\n\n  // Execute command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(typeof callback != 'function') return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('dropIndex', {callback: true, promise:true});\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndexes = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return dropIndexes(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    dropIndexes(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar dropIndexes = function(self, callback) {\n  self.dropIndex('*', function (err, result) {\n    if(err) return handleCallback(callback, err, false);\n    handleCallback(callback, null, true);\n  });\n}\n\ndefine.classMethod('dropIndexes', {callback: true, promise:true});\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @deprecated use dropIndexes\n * @param {Collection~resultCallback} callback The command result callback\n * @return {Promise} returns Promise if no [callback] passed\n */\nCollection.prototype.dropAllIndexes = Collection.prototype.dropIndexes;\n\ndefine.classMethod('dropAllIndexes', {callback: true, promise:true});\n\n/**\n * Reindex all indexes on the collection\n * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n * @method\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.reIndex = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return reIndex(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    reIndex(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar reIndex = function(self, options, callback) {\n  // Reindex\n  var cmd = {'reIndex':self.s.name};\n\n  // Execute the command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n}\n\ndefine.classMethod('reIndex', {callback: true, promise:true});\n\n/**\n * Get the list of all indexes information for the collection.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @return {CommandCursor}\n */\nCollection.prototype.listIndexes = function(options) {\n  options = options || {};\n  // Clone the options\n  options = shallowClone(options);\n  // Set the CommandCursor constructor\n  options.cursorFactory = CommandCursor;\n  // Set the promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  if(!this.s.topology.capabilities()) {\n    throw new MongoError('cannot connect to server');\n  }\n\n  // We have a list collections command\n  if(this.s.topology.capabilities().hasListIndexesCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}\n    // Build the command\n    var command = { listIndexes: this.s.name, cursor: cursor };\n    // Execute the cursor\n    var cursor = this.s.topology.cursor(f('%s.$cmd', this.s.dbName), command, options);\n    // Do we have a readPreference, apply it\n    if(options.readPeference) cursor.setReadPreference(options.readPeference);\n    // Return the cursor\n    return cursor;\n  }\n\n  // Get the namespace\n  var ns = f('%s.system.indexes', this.s.dbName);\n  // Get the query\n  var cursor = this.s.topology.cursor(ns, {find: ns, query: {ns: this.s.namespace}}, options);\n  // Do we have a readPreference, apply it\n  if(options.readPeference) cursor.setReadPreference(options.readPeference);\n  // Set the passed in batch size if one was provided\n  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // Return the cursor\n  return cursor;\n};\n\ndefine.classMethod('listIndexes', {callback: false, promise:false, returns: [CommandCursor]});\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated use createIndexes instead\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.ensureIndex = function(fieldOrSpec, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return ensureIndex(self, fieldOrSpec, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    ensureIndex(self, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar ensureIndex = function(self, fieldOrSpec, options, callback) {\n  self.s.db.ensureIndex(self.s.name, fieldOrSpec, options, callback);\n}\n\ndefine.classMethod('ensureIndex', {callback: true, promise:true});\n\n/**\n * Checks if one or more indexes exist on the collection, fails on first non-existing index\n * @method\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexExists = function(indexes, callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') return indexExists(self, indexes, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexExists(self, indexes, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar indexExists = function(self, indexes, callback) {\n  self.indexInformation(function(err, indexInformation) {\n    // If we have an error return\n    if(err != null) return handleCallback(callback, err, null);\n    // Let's check for the index names\n    if(!Array.isArray(indexes)) return handleCallback(callback, null, indexInformation[indexes] != null);\n    // Check in list of indexes\n    for(var i = 0; i < indexes.length; i++) {\n      if(indexInformation[indexes[i]] == null) {\n        return handleCallback(callback, null, false);\n      }\n    }\n\n    // All keys found return true\n    return handleCallback(callback, null, true);\n  });\n}\n\ndefine.classMethod('indexExists', {callback: true, promise:true});\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexInformation = function(options, callback) {\n  var self = this;\n  // Unpack calls\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return indexInformation(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexInformation(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar indexInformation = function(self, options, callback) {\n  self.s.db.indexInformation(self.s.name, options, callback);\n}\n\ndefine.classMethod('indexInformation', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Collection~countCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} result The count of documents that matched the query.\n */\n\n/**\n * Count number of matching documents in the db to a query.\n * @method\n * @param {object} query The query for the count.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.limit=null] The limit of documents to count.\n * @param {boolean} [options.skip=null] The number of documents to skip for the count.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Collection~countCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.count = function(query, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  var queryOption = args.length ? args.shift() || {} : {};\n  var optionsOption = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return count(self, queryOption, optionsOption, callback);\n\n  // Check if query is empty\n  query = query || {};\n  options = options || {};\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    count(self, query, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar count = function(self, query, options, callback) {\n  var skip = options.skip;\n  var limit = options.limit;\n  var hint = options.hint;\n  var maxTimeMS = options.maxTimeMS;\n\n  // Final query\n  var cmd = {\n    'count': self.s.name, 'query': query\n  };\n\n  // Add limit and skip if defined\n  if(typeof skip == 'number') cmd.skip = skip;\n  if(typeof limit == 'number') cmd.limit = limit;\n  if(hint) options.hint = hint;\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    cmd.readConcern = self.s.readConcern;\n  }\n\n  // Execute command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.n);\n  });\n}\n\ndefine.classMethod('count', {callback: true, promise:true});\n\n/**\n * The distinct command returns returns a list of distinct values for the given key across a collection.\n * @method\n * @param {string} key Field of the document to find distinct values for.\n * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.distinct = function(key, query, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  var queryOption = args.length ? args.shift() || {} : {};\n  var optionsOption = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return distinct(self, key, queryOption, optionsOption, callback);\n\n  // Ensure the query and options are set\n  query = query || {};\n  options = options || {};\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    distinct(self, key, query, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar distinct = function(self, key, query, options, callback) {\n  // maxTimeMS option\n  var maxTimeMS = options.maxTimeMS;\n\n  // Distinct command\n  var cmd = {\n    'distinct': self.s.name, 'key': key, 'query': query\n  };\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    cmd.readConcern = self.s.readConcern;\n  }\n\n  // Execute the command\n  self.s.db.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.values);\n  });\n}\n\ndefine.classMethod('distinct', {callback: true, promise:true});\n\n/**\n * Retrieve all the indexes on the collection.\n * @method\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexes = function(callback) {\n  var self = this;\n  // Execute using callback\n  if(typeof callback == 'function') return indexes(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexes(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar indexes = function(self, callback) {\n  self.s.db.indexInformation(self.s.name, {full:true}, callback);\n}\n\ndefine.classMethod('indexes', {callback: true, promise:true});\n\n/**\n * Get all the collection statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {Collection~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.stats = function(options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return stats(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    stats(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar stats = function(self, options, callback) {\n  // Build command object\n  var commandObject = {\n    collStats:self.s.name\n  }\n\n  // Check if we have the scale value\n  if(options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Execute the command\n  self.s.db.command(commandObject, options, callback);\n}\n\ndefine.classMethod('stats', {callback: true, promise:true});\n\n/**\n * @typedef {Object} Collection~findAndModifyWriteOpResult\n * @property {object} value Document returned from findAndModify command.\n * @property {object} lastErrorObject The raw lastErrorObject returned from the command.\n * @property {Number} ok Is 1 if the command executed correctly.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~findAndModifyCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~findAndModifyWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndDelete = function(filter, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOneAndDelete(self, filter, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findOneAndDelete(self, filter, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOneAndDelete = function(self, filter, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['remove'] = true;\n  // Execute find and Modify\n  self.findAndModify(\n      filter\n    , options.sort\n    , null\n    , finalOptions\n    , callback\n  );\n}\n\ndefine.classMethod('findOneAndDelete', {callback: true, promise:true});\n\n/**\n * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} replacement Document replacing the matching document.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOneAndReplace(self, filter, replacement, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findOneAndReplace(self, filter, replacement, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOneAndReplace = function(self, filter, replacement, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['update'] = true;\n  finalOptions['new'] = typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false;\n  finalOptions['upsert'] = typeof options.upsert == 'boolean' ? options.upsert : false;\n\n  // Execute findAndModify\n  self.findAndModify(\n      filter\n    , options.sort\n    , replacement\n    , finalOptions\n    , callback\n  );\n}\n\ndefine.classMethod('findOneAndReplace', {callback: true, promise:true});\n\n/**\n * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} update Update operations to be performed on the document\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndUpdate = function(filter, update, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return findOneAndUpdate(self, filter, update, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findOneAndUpdate(self, filter, update, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findOneAndUpdate = function(self, filter, update, options, callback) {\n  // Final options\n  var finalOptions = shallowClone(options);\n  finalOptions['fields'] = options.projection;\n  finalOptions['update'] = true;\n  finalOptions['new'] = typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false;\n  finalOptions['upsert'] = typeof options.upsert == 'boolean' ? options.upsert : false;\n\n  // Execute findAndModify\n  self.findAndModify(\n      filter\n    , options.sort\n    , update\n    , finalOptions\n    , callback\n  );\n}\n\ndefine.classMethod('findOneAndUpdate', {callback: true, promise:true});\n\n/**\n * Find and update a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.remove=false] Set to true to remove the object before returning.\n * @param {boolean} [options.upsert=false] Perform an upsert operation.\n * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove.\n * @param {object} [options.fields=null] Object containing the field projection for the result returned from the operation.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nCollection.prototype.findAndModify = function(query, sort, doc, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  sort = args.length ? args.shift() || [] : [];\n  doc = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Clone options\n  var options = shallowClone(options);\n  // Force read preference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Execute using callback\n  if(typeof callback == 'function') return findAndModify(self, query, sort, doc, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    options = options || {};\n\n    findAndModify(self, query, sort, doc, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findAndModify = function(self, query, sort, doc, options, callback) {\n  // Create findAndModify command object\n  var queryObject = {\n     'findandmodify': self.s.name\n   , 'query': query\n  };\n\n  sort = formattedOrderClause(sort);\n  if(sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? true : false;\n  queryObject.remove = options.remove ? true : false;\n  queryObject.upsert = options.upsert ? true : false;\n\n  if(options.fields) {\n    queryObject.fields = options.fields;\n  }\n\n  if(doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  if(options['serializeFunctions'] != null) {\n    options['serializeFunctions'] = options['serializeFunctions'];\n  } else {\n    options['serializeFunctions'] = self.s.serializeFunctions;\n  }\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Get the write concern settings\n  var finalOptions = writeConcern(options, self.s.db, self, options);\n\n  // Decorate the findAndModify command with the write Concern\n  if(finalOptions.writeConcern) {\n    queryObject.writeConcern = finalOptions.writeConcern;\n  }\n\n  // Have we specified bypassDocumentValidation\n  if(typeof finalOptions.bypassDocumentValidation == 'boolean') {\n    queryObject.bypassDocumentValidation = finalOptions.bypassDocumentValidation;\n  }\n\n  // Execute the command\n  self.s.db.command(queryObject\n    , options, function(err, result) {\n      if(err) return handleCallback(callback, err, null);\n      return handleCallback(callback, null, result);\n  });\n}\n\ndefine.classMethod('findAndModify', {callback: true, promise:true});\n\n/**\n * Find and remove a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndDelete instead\n */\nCollection.prototype.findAndRemove = function(query, sort, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  sort = args.length ? args.shift() || [] : [];\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return findAndRemove(self, query, sort, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    findAndRemove(self, query, sort, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar findAndRemove = function(self, query, sort, options, callback) {\n  // Add the remove option\n  options['remove'] = true;\n  // Execute the callback\n  self.findAndModify(query, sort, null, options, callback);\n}\n\ndefine.classMethod('findAndRemove', {callback: true, promise:true});\n\n/**\n * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n * @method\n * @param {object} pipeline Array containing all the aggregation framework commands for the execution.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.cursor=null] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n * @param {number} [options.cursor.batchSize=null] The batchSize for the cursor\n * @param {boolean} [options.explain=false] Explain returns the aggregation execution plan (requires mongodb 2.6 >).\n * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\n * @param {number} [options.maxTimeMS=null] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {(null|AggregationCursor)}\n */\nCollection.prototype.aggregate = function(pipeline, options, callback) {\n  var self = this;\n  if(Array.isArray(pipeline)) {\n    // Set up callback if one is provided\n    if(typeof options == 'function') {\n      callback = options;\n      options = {};\n    }\n\n    // If we have no options or callback we are doing\n    // a cursor based aggregation\n    if(options == null && callback == null) {\n      options = {};\n    }\n  } else {\n    // Aggregation pipeline passed as arguments on the method\n    var args = Array.prototype.slice.call(arguments, 0);\n    // Get the callback\n    callback = args.pop();\n    // Get the possible options object\n    var opts = args[args.length - 1];\n    // If it contains any of the admissible options pop it of the args\n    options = opts && (opts.readPreference\n      || opts.explain || opts.cursor || opts.out\n      || opts.maxTimeMS || opts.allowDiskUse) ? args.pop() : {};\n      // Left over arguments is the pipeline\n    pipeline = args;\n  }\n\n  // Ignore readConcern option\n  var ignoreReadConcern = false;\n\n  // If out was specified\n  if(typeof options.out == 'string') {\n    pipeline.push({$out: options.out});\n    ignoreReadConcern = true;\n  } else if(pipeline.length > 0 && pipeline[pipeline.length - 1]['$out']) {\n    ignoreReadConcern = true;\n  }\n\n  // Build the command\n  var command = { aggregate : this.s.name, pipeline : pipeline};\n\n  // If we have bypassDocumentValidation set\n  if(typeof options.bypassDocumentValidation == 'boolean') {\n    command.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Do we have a readConcern specified\n  if(!ignoreReadConcern && this.s.readConcern) {\n    command.readConcern = this.s.readConcern;\n  }\n\n  // If we have allowDiskUse defined\n  if(options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;\n  if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // If explain has been specified add it\n  if(options.explain) command.explain = options.explain;\n\n  // Validate that cursor options is valid\n  if(options.cursor != null && typeof options.cursor != 'object') {\n    throw toError('cursor options must be an object');\n  }\n\n  // promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Set the AggregationCursor constructor\n  options.cursorFactory = AggregationCursor;\n  if(typeof callback != 'function') {\n    if(!this.s.topology.capabilities()) {\n      throw new MongoError('cannot connect to server');\n    }\n\n    if(this.s.topology.capabilities().hasAggregationCursor) {\n      options.cursor = options.cursor || { batchSize : 1000 };\n      command.cursor = options.cursor;\n    }\n\n    // Allow disk usage command\n    if(typeof options.allowDiskUse == 'boolean') command.allowDiskUse = options.allowDiskUse;\n    if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;\n\n    // Execute the cursor\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  var cursor = null;\n  // We do not allow cursor\n  if(options.cursor) {\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  // Execute the command\n  this.s.db.command(command, options, function(err, result) {\n    if(err) {\n      handleCallback(callback, err);\n    } else if(result['err'] || result['errmsg']) {\n      handleCallback(callback, toError(result));\n    } else if(typeof result == 'object' && result['serverPipeline']) {\n      handleCallback(callback, null, result['serverPipeline']);\n    } else if(typeof result == 'object' && result['stages']) {\n      handleCallback(callback, null, result['stages']);\n    } else {\n      handleCallback(callback, null, result.result);\n    }\n  });\n}\n\ndefine.classMethod('aggregate', {callback: true, promise:false});\n\n/**\n * The callback format for results\n * @callback Collection~parallelCollectionScanCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection.\n */\n\n/**\n * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\n * no ordering guarantees for returned results.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize=null] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.parallelCollectionScan = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {numCursors: 1};\n  // Set number of cursors to 1\n  options.numCursors = options.numCursors || 1;\n  options.batchSize = options.batchSize || 1000;\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Add a promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Execute using callback\n  if(typeof callback == 'function') return parallelCollectionScan(self, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    parallelCollectionScan(self, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar parallelCollectionScan = function(self, options, callback) {\n  // Create command object\n  var commandObject = {\n      parallelCollectionScan: self.s.name\n    , numCursors: options.numCursors\n  }\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    commandObject.readConcern = self.s.readConcern;\n  }\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, new Error(\"no result returned for parallelCollectionScan\"), null);\n\n    var cursors = [];\n    // Create command cursors for each item\n    for(var i = 0; i < result.cursors.length; i++) {\n      var rawId = result.cursors[i].cursor.id\n      // Convert cursorId to Long if needed\n      var cursorId = typeof rawId == 'number' ? Long.fromNumber(rawId) : rawId;\n\n      // Command cursor options\n      var cmd = {\n          batchSize: options.batchSize\n        , cursorId: cursorId\n        , items: result.cursors[i].cursor.firstBatch\n      }\n\n      // Add a command cursor\n      cursors.push(self.s.topology.cursor(self.s.namespace, cursorId, options));\n    }\n\n    handleCallback(callback, null, cursors);\n  });\n}\n\ndefine.classMethod('parallelCollectionScan', {callback: true, promise:true});\n\n/**\n * Execute the geoNear command to search for items in the collection\n *\n * @method\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.num=null] Max number of results to return.\n * @param {number} [options.minDistance=null] Include results starting at minDistance from a point (2.6 or higher)\n * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point.\n * @param {number} [options.distanceMultiplier=null] Include a value to multiply the distances with allowing for range conversions.\n * @param {object} [options.query=null] Filter the results by a query.\n * @param {boolean} [options.spherical=false] Perform query using a spherical model.\n * @param {boolean} [options.uniqueDocs=false] The closest location in a document to the center of the search region will always be returned MongoDB > 2.X.\n * @param {boolean} [options.includeLocs=false] Include the location data fields in the top level of the results MongoDB > 2.X.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.geoNear = function(x, y, options, callback) {\n  var self = this;\n  var point = typeof(x) == 'object' && x\n    , args = Array.prototype.slice.call(arguments, point?1:2);\n\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return geoNear(self, x, y, point, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    geoNear(self, x, y, point, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar geoNear = function(self, x, y, point, options, callback) {\n  // Build command object\n  var commandObject = {\n    geoNear:self.s.name,\n    near: point || [x, y]\n  }\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Exclude readPreference and existing options to prevent user from\n  // shooting themselves in the foot\n  var exclude = {\n    readPreference: true,\n    geoNear: true,\n    near: true\n  };\n\n  // Filter out any excluded objects\n  commandObject = decorateCommand(commandObject, options, exclude);\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    commandObject.readConcern = self.s.readConcern;\n  }\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function (err, res) {\n    if(err) return handleCallback(callback, err);\n    if(res.err || res.errmsg) return handleCallback(callback, toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n}\n\ndefine.classMethod('geoNear', {callback: true, promise:true});\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @method\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point.\n * @param {object} [options.search=null] Filter the results by a query.\n * @param {number} [options.limit=false] Max number of results to return.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.geoHaystackSearch = function(x, y, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return geoHaystackSearch(self, x, y, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    geoHaystackSearch(self, x, y, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar geoHaystackSearch = function(self, x, y, options, callback) {\n  // Build command object\n  var commandObject = {\n    geoSearch: self.s.name,\n    near: [x, y]\n  }\n\n  // Remove read preference from hash if it exists\n  commandObject = decorateCommand(commandObject, options, {readPreference: true});\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // Do we have a readConcern specified\n  if(self.s.readConcern) {\n    commandObject.readConcern = self.s.readConcern;\n  }\n\n  // Execute the command\n  self.s.db.command(commandObject, options, function (err, res) {\n    if(err) return handleCallback(callback, err);\n    if(res.err || res.errmsg) handleCallback(callback, utils.toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n}\n\ndefine.classMethod('geoHaystackSearch', {callback: true, promise:true});\n\n/**\n * Group function helper\n * @ignore\n */\nvar groupFunction = function () {\n  var c = db[ns].find(condition);\n  var map = new Map();\n  var reduce_function = reduce;\n\n  while (c.hasNext()) {\n    var obj = c.next();\n    var key = {};\n\n    for (var i = 0, len = keys.length; i < len; ++i) {\n      var k = keys[i];\n      key[k] = obj[k];\n    }\n\n    var aggObj = map.get(key);\n\n    if (aggObj == null) {\n      var newObj = Object.extend({}, key);\n      aggObj = Object.extend(newObj, initial);\n      map.put(key, aggObj);\n    }\n\n    reduce_function(obj, aggObj);\n  }\n\n  return { \"result\": map.values() };\n}.toString();\n\n/**\n * Run a group command across a collection\n *\n * @method\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.group = function(keys, condition, initial, reduce, finalize, command, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 3);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  // Fetch all commands\n  reduce = args.length ? args.shift() : null;\n  finalize = args.length ? args.shift() : null;\n  command = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Make sure we are backward compatible\n  if(!(typeof finalize == 'function')) {\n    command = finalize;\n    finalize = null;\n  }\n\n  if (!Array.isArray(keys) && keys instanceof Object && typeof(keys) !== 'function' && !(keys instanceof Code)) {\n    keys = Object.keys(keys);\n  }\n\n  if(typeof reduce === 'function') {\n    reduce = reduce.toString();\n  }\n\n  if(typeof finalize === 'function') {\n    finalize = finalize.toString();\n  }\n\n  // Set up the command as default\n  command = command == null ? true : command;\n\n  // Execute using callback\n  if(typeof callback == 'function') return group(self, keys, condition, initial, reduce, finalize, command, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    group(self, keys, condition, initial, reduce, finalize, command, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar group = function(self, keys, condition, initial, reduce, finalize, command, options, callback) {\n  // Execute using the command\n  if(command) {\n    var reduceFunction = reduce instanceof Code\n        ? reduce\n        : new Code(reduce);\n\n    var selector = {\n      group: {\n          'ns': self.s.name\n        , '$reduce': reduceFunction\n        , 'cond': condition\n        , 'initial': initial\n        , 'out': \"inline\"\n      }\n    };\n\n    // if finalize is defined\n    if(finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || keys instanceof Code) {\n      selector.group.$keyf = keys instanceof Code\n        ? keys\n        : new Code(keys);\n    } else {\n      var hash = {};\n      keys.forEach(function (key) {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    // Ensure we have the right read preference inheritance\n    options = getReadPreference(self, options, self.s.db, self);\n\n    // Do we have a readConcern specified\n    if(self.s.readConcern) {\n      selector.readConcern = self.s.readConcern;\n    }\n\n    // Execute command\n    self.s.db.command(selector, options, function(err, result) {\n      if(err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    var scope = reduce != null && reduce instanceof Code\n      ? reduce.scope\n      : {};\n\n    scope.ns = self.s.name;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    var groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    self.s.db.eval(new Code(groupfn, scope), function (err, results) {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, results.result || results);\n    });\n  }\n}\n\ndefine.classMethod('group', {callback: true, promise:true});\n\n/**\n * Functions that are passed as scope args must\n * be converted to Code instances.\n * @ignore\n */\nfunction processScope (scope) {\n  if(!isObject(scope)) {\n    return scope;\n  }\n\n  var keys = Object.keys(scope);\n  var i = keys.length;\n  var key;\n  var new_scope = {};\n\n  while (i--) {\n    key = keys[i];\n    if ('function' == typeof scope[key]) {\n      new_scope[key] = new Code(String(scope[key]));\n    } else {\n      new_scope[key] = processScope(scope[key]);\n    }\n  }\n\n  return new_scope;\n}\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @method\n * @param {(function|string)} map The mapping function.\n * @param {(function|string)} reduce The reduce function.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.out=null] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n * @param {object} [options.query=null] Query filter object.\n * @param {object} [options.sort=null] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n * @param {number} [options.limit=null] Number of objects to return from collection.\n * @param {boolean} [options.keeptemp=false] Keep temporary data.\n * @param {(function|string)} [options.finalize=null] Finalize function.\n * @param {object} [options.scope=null] Can pass in variables that can be access from map/reduce/finalize.\n * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n * @param {boolean} [options.verbose=false] Provide statistics on job execution time.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.mapReduce = function(map, reduce, options, callback) {\n  var self = this;\n  if('function' === typeof options) callback = options, options = {};\n  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)\n  if(null == options.out) {\n    throw new Error(\"the out option parameter must be defined, see mongodb docs for possible values\");\n  }\n\n  if('function' === typeof map) {\n    map = map.toString();\n  }\n\n  if('function' === typeof reduce) {\n    reduce = reduce.toString();\n  }\n\n  if('function' === typeof options.finalize) {\n    options.finalize = options.finalize.toString();\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return mapReduce(self, map, reduce, options, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    mapReduce(self, map, reduce, options, function(err, r, r1) {\n      if(err) return reject(err);\n      if(r instanceof Collection) return resolve(r);\n      resolve({results: r, stats: r1});\n    });\n  });\n}\n\nvar mapReduce = function(self, map, reduce, options, callback) {\n  var mapCommandHash = {\n      mapreduce: self.s.name\n    , map: map\n    , reduce: reduce\n  };\n\n  // Add any other options passed in\n  for(var n in options) {\n    if('scope' == n) {\n      mapCommandHash[n] = processScope(options[n]);\n    } else {\n      mapCommandHash[n] = options[n];\n    }\n  }\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(self, options, self.s.db, self);\n\n  // If we have a read preference and inline is not set as output fail hard\n  if((options.readPreference != false && options.readPreference != 'primary')\n    && options['out'] && (options['out'].inline != 1 && options['out'] != 'inline')) {\n      options.readPreference = 'primary';\n  } else if(self.s.readConcern) {\n    mapCommandHash.readConcern = self.s.readConcern;\n  }\n\n  // Is bypassDocumentValidation specified\n  if(typeof options.bypassDocumentValidation == 'boolean') {\n    mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Execute command\n  self.s.db.command(mapCommandHash, {readPreference:options.readPreference}, function (err, result) {\n    if(err) return handleCallback(callback, err);\n    // Check if we have an error\n    if(1 != result.ok || result.err || result.errmsg) {\n      return handleCallback(callback, toError(result));\n    }\n\n    // Create statistics value\n    var stats = {};\n    if(result.timeMillis) stats['processtime'] = result.timeMillis;\n    if(result.counts) stats['counts'] = result.counts;\n    if(result.timing) stats['timing'] = result.timing;\n\n    // invoked with inline?\n    if(result.results) {\n      // If we wish for no verbosity\n      if(options['verbose'] == null || !options['verbose']) {\n        return handleCallback(callback, null, result.results);\n      }\n\n      return handleCallback(callback, null, result.results, stats);\n    }\n\n    // The returned collection\n    var collection = null;\n\n    // If we have an object it's a different db\n    if(result.result != null && typeof result.result == 'object') {\n      var doc = result.result;\n      collection = self.s.db.db(doc.db).collection(doc.collection);\n    } else {\n      // Create a collection object that wraps the result collection\n      collection = self.s.db.collection(result.result)\n    }\n\n    // If we wish for no verbosity\n    if(options['verbose'] == null || !options['verbose']) {\n      return handleCallback(callback, err, collection);\n    }\n\n    // Return stats as third set of values\n    handleCallback(callback, err, collection, stats);\n  });\n}\n\ndefine.classMethod('mapReduce', {callback: true, promise:true});\n\n/**\n * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @return {UnorderedBulkOperation}\n */\nCollection.prototype.initializeUnorderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return unordered(this.s.topology, this, options);\n}\n\ndefine.classMethod('initializeUnorderedBulkOp', {callback: false, promise:false, returns: [ordered.UnorderedBulkOperation]});\n\n/**\n * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {OrderedBulkOperation} callback The command result callback\n * @return {null}\n */\nCollection.prototype.initializeOrderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return ordered(this.s.topology, this, options);\n}\n\ndefine.classMethod('initializeOrderedBulkOp', {callback: false, promise:false, returns: [ordered.OrderedBulkOperation]});\n\n// Get write concern\nvar writeConcern = function(target, db, col, options) {\n  if(options.w != null || options.j != null || options.fsync != null) {\n    var opts = {};\n    if(options.w != null) opts.w = options.w;\n    if(options.wtimeout != null) opts.wtimeout = options.wtimeout;\n    if(options.j != null) opts.j = options.j;\n    if(options.fsync != null) opts.fsync = options.fsync;\n    target.writeConcern = opts;\n  } else if(col.writeConcern.w != null || col.writeConcern.j != null || col.writeConcern.fsync != null) {\n    target.writeConcern = col.writeConcern;\n  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {\n    target.writeConcern = db.writeConcern;\n  }\n\n  return target\n}\n\n// Figure out the read preference\nvar getReadPreference = function(self, options, db, coll) {\n  var r = null\n  if(options.readPreference) {\n    r = options.readPreference\n  } else if(self.s.readPreference) {\n    r = self.s.readPreference\n  } else if(db.readPreference) {\n    r = db.readPreference;\n  }\n\n  if(r instanceof ReadPreference) {\n    options.readPreference = new CoreReadPreference(r.mode, r.tags);\n  } else if(typeof r == 'string') {\n    options.readPreference = new CoreReadPreference(r);\n  }\n\n  return options;\n}\n\nvar testForFields = {\n    limit: 1, sort: 1, fields:1, skip: 1, hint: 1, explain: 1, snapshot: 1, timeout: 1, tailable: 1, tailableRetryInterval: 1\n  , numberOfRetries: 1, awaitdata: 1, awaitData: 1, exhaust: 1, batchSize: 1, returnKey: 1, maxScan: 1, min: 1, max: 1, showDiskLoc: 1\n  , comment: 1, raw: 1, readPreference: 1, partial: 1, read: 1, dbName: 1, oplogReplay: 1, connection: 1, maxTimeMS: 1, transforms: 1\n}\n\nmodule.exports = Collection;\n"]}