{"version":3,"sources":["db.js"],"names":[],"mappings":"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","file":"db-compiled.js","sourcesContent":["\"use strict\";\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('util').inherits\n  , getSingleProperty = require('./utils').getSingleProperty\n  , shallowClone = require('./utils').shallowClone\n  , parseIndexOptions = require('./utils').parseIndexOptions\n  , debugOptions = require('./utils').debugOptions\n  , CommandCursor = require('./command_cursor')\n  , handleCallback = require('./utils').handleCallback\n  , toError = require('./utils').toError\n  , ReadPreference = require('./read_preference')\n  , f = require('util').format\n  , Admin = require('./admin')\n  , Code = require('mongodb-core').BSON.Code\n  , CoreReadPreference = require('mongodb-core').ReadPreference\n  , MongoError = require('mongodb-core').MongoError\n  , ObjectID = require('mongodb-core').ObjectID\n  , Define = require('./metadata')\n  , Logger = require('mongodb-core').Logger\n  , Collection = require('./collection')\n  , crypto = require('crypto');\n\nvar debugFields = ['authSource', 'w', 'wtimeout', 'j', 'native_parser', 'forceServerObjectId'\n  , 'serializeFunctions', 'raw', 'promoteLongs', 'bufferMaxEntries', 'numberOfRetries', 'retryMiliSeconds'\n  , 'readPreference', 'pkFactory'];\n\n/**\n * @fileOverview The **Db** class is a class that represents a MongoDB Database.\n *\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Get an additional db\n *   var testDb = db.db('test');\n *   db.close();\n * });\n */\n\n/**\n * Creates a new Db instance\n * @class\n * @param {string} databaseName The name of the database this instance represents.\n * @param {(Server|ReplSet|Mongos)} topology The server topology for the database.\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.authSource=null] If the database authentication is dependent on another databaseName.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.native_parser=true] Select C++ bson parser instead of JavaScript parser.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology.\n * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database\n * @property {string} databaseName The name of the database this instance represents.\n * @property {object} options The options associated with the db instance.\n * @property {boolean} native_parser The current value of the parameter native_parser.\n * @property {boolean} slaveOk The current slaveOk value for the db instance.\n * @property {object} writeConcern The current write concern values.\n * @fires Db#close\n * @fires Db#authenticated\n * @fires Db#reconnect\n * @fires Db#error\n * @fires Db#timeout\n * @fires Db#parseError\n * @fires Db#fullsetup\n * @return {Db} a Db instance.\n */\nvar Db = function(databaseName, topology, options) {\n  options = options || {};\n  if(!(this instanceof Db)) return new Db(databaseName, topology, options);\n  EventEmitter.call(this);\n  var self = this;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Ensure we put the promiseLib in the options\n  options.promiseLibrary = promiseLibrary;\n\n  // var self = this;  // Internal state of the db object\n  this.s = {\n    // Database name\n      databaseName: databaseName\n    // DbCache\n    , dbCache: {}\n    // Children db's\n    , children: []\n    // Topology\n    , topology: topology\n    // Options\n    , options: options\n    // Logger instance\n    , logger: Logger('Db', options)\n    // Get the bson parser\n    , bson: topology ? topology.bson : null\n    // Authsource if any\n    , authSource: options.authSource\n    // Unpack read preference\n    , readPreference: options.readPreference\n    // Set buffermaxEntries\n    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : -1\n    // Parent db (if chained)\n    , parentDb: options.parentDb || null\n    // Set up the primary key factory or fallback to ObjectID\n    , pkFactory: options.pkFactory || ObjectID\n    // Get native parser\n    , nativeParser: options.nativeParser || options.native_parser\n    // Promise library\n    , promiseLibrary: promiseLibrary\n    // No listener\n    , noListener: typeof options.noListener == 'boolean' ? options.noListener : false\n    // ReadConcern\n    , readConcern: options.readConcern\n  }\n\n  // Ensure we have a valid db name\n  validateDatabaseName(self.s.databaseName);\n\n  // If we have specified the type of parser\n  if(typeof self.s.nativeParser == 'boolean') {\n    if(self.s.nativeParser) {\n      topology.setBSONParserType(\"c++\");\n    } else {\n      topology.setBSONParserType(\"js\");\n    }\n  }\n\n  // Add a read Only property\n  getSingleProperty(this, 'serverConfig', self.s.topology);\n  getSingleProperty(this, 'bufferMaxEntries', self.s.bufferMaxEntries);\n  getSingleProperty(this, 'databaseName', self.s.databaseName);\n\n  // Last ismaster\n  Object.defineProperty(this, 'options', {\n    enumerable:true,\n    get: function() { return self.s.options; }\n  });\n\n  // Last ismaster\n  Object.defineProperty(this, 'native_parser', {\n    enumerable:true,\n    get: function() { return self.s.topology.parserType() == 'c++'; }\n  });\n\n  // Last ismaster\n  Object.defineProperty(this, 'slaveOk', {\n    enumerable:true,\n    get: function() {\n      if(self.s.options.readPreference != null\n        && (self.s.options.readPreference != 'primary' || self.s.options.readPreference.mode != 'primary')) {\n        return true;\n      }\n      return false;\n    }\n  });\n\n  Object.defineProperty(this, 'writeConcern', {\n    enumerable:true,\n    get: function() {\n      var ops = {};\n      if(self.s.options.w != null) ops.w = self.s.options.w;\n      if(self.s.options.j != null) ops.j = self.s.options.j;\n      if(self.s.options.fsync != null) ops.fsync = self.s.options.fsync;\n      if(self.s.options.wtimeout != null) ops.wtimeout = self.s.options.wtimeout;\n      return ops;\n    }\n  });\n\n  // This is a child db, do not register any listeners\n  if(options.parentDb) return;\n  if(this.s.noListener) return;\n\n  // Add listeners\n  topology.on('error', createListener(self, 'error', self));\n  topology.on('timeout', createListener(self, 'timeout', self));\n  topology.on('close', createListener(self, 'close', self));\n  topology.on('parseError', createListener(self, 'parseError', self));\n  topology.once('open', createListener(self, 'open', self));\n  topology.once('fullsetup', createListener(self, 'fullsetup', self));\n  topology.once('all', createListener(self, 'all', self));\n  topology.on('reconnect', createListener(self, 'reconnect', self));\n}\n\ninherits(Db, EventEmitter);\n\nvar define = Db.define = new Define('Db', Db, false);\n\n/**\n * The callback format for the Db.open method\n * @callback Db~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Db} db The Db instance if the open method was successful.\n */\n\n// Internal method\nvar open = function(self, callback) {\n  self.s.topology.connect(self, self.s.options, function(err, topology) {\n    if(callback == null) return;\n    var internalCallback = callback;\n    callback == null;\n\n    if(err) {\n      self.close();\n      return internalCallback(err);\n    }\n\n    internalCallback(null, self);\n  });\n}\n\n/**\n * Open the database\n * @method\n * @param {Db~openCallback} [callback] Callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.open = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return open(self, callback);\n  // Return promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    open(self, function(err, db) {\n      if(err) return reject(err);\n      resolve(db);\n    })\n  });\n}\n\ndefine.classMethod('open', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Db~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\nvar executeCommand = function(self, command, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Get the db name we are executing against\n  var dbName = options.dbName || options.authdb || self.s.databaseName;\n  // If we have a readPreference set\n  if(options.readPreference == null && self.s.readPreference) {\n    options.readPreference = self.s.readPreference;\n  }\n\n  // Convert the readPreference\n  if(options.readPreference && typeof options.readPreference == 'string') {\n    options.readPreference = new CoreReadPreference(options.readPreference);\n  } else if(options.readPreference instanceof ReadPreference) {\n    options.readPreference = new CoreReadPreference(options.readPreference.mode\n      , options.readPreference.tags);\n  }\n\n  // Debug information\n  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command %s against %s with options [%s]'\n    , JSON.stringify(command), f('%s.$cmd', dbName), JSON.stringify(debugOptions(debugFields, options))));\n\n  // Execute command\n  self.s.topology.command(f('%s.$cmd', dbName), command, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    if(options.full) return handleCallback(callback, null, result);\n    handleCallback(callback, null, result.result);\n  });\n}\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.command = function(command, options, callback) {\n  var self = this;\n  // Change the callback\n  if(typeof options == 'function') callback = options, options = {};\n  // Clone the options\n  options = shallowClone(options);\n\n  // Do we have a callback\n  if(typeof callback == 'function') return executeCommand(self, command, options, callback);\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    executeCommand(self, command, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('command', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Db~noResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {null} result Is not set to a value\n */\n\n/**\n * Close the db and it's underlying connections\n * @method\n * @param {boolean} force Force close, emitting no events\n * @param {Db~noResultCallback} [callback] The result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.close = function(force, callback) {\n  if(typeof force == 'function') callback = force, force = false;\n  this.s.topology.close(force);\n  var self = this;\n\n  // Fire close event if any listeners\n  if(this.listeners('close').length > 0) {\n    this.emit('close');\n\n    // If it's the top level db emit close on all children\n    if(this.parentDb == null) {\n      // Fire close on all children\n      for(var i = 0; i < this.s.children.length; i++) {\n        this.s.children[i].emit('close');\n      }\n    }\n\n    // Remove listeners after emit\n    self.removeAllListeners('close');\n  }\n\n  // Close parent db if set\n  if(this.s.parentDb) this.s.parentDb.close();\n  // Callback after next event loop tick\n  if(typeof callback == 'function') return process.nextTick(function() {\n    handleCallback(callback, null);\n  })\n\n  // Return dummy promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    resolve();\n  });\n}\n\ndefine.classMethod('close', {callback: true, promise:true});\n\n/**\n * Return the Admin db instance\n * @method\n * @return {Admin} return the new Admin db instance\n */\nDb.prototype.admin = function() {\n  return new Admin(this, this.s.topology, this.s.promiseLibrary);\n};\n\ndefine.classMethod('admin', {callback: false, promise:false, returns: [Admin]});\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Db~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\n * can use it without a callback in the following way. var collection = db.collection('mycollection');\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {Db~collectionResultCallback} callback The collection result callback\n * @return {Collection} return the new Collection instance if not in strict mode\n */\nDb.prototype.collection = function(name, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // If we have not set a collection level readConcern set the db level one\n  options.readConcern = options.readConcern || this.s.readConcern;\n\n  // Do we have ignoreUndefined set\n  if(this.s.options.ignoreUndefined) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Execute\n  if(options == null || !options.strict) {\n    try {\n      var collection = new Collection(this, this.s.topology, this.s.databaseName, name, this.s.pkFactory, options);\n      if(callback) callback(null, collection);\n      return collection;\n    } catch(err) {\n      if(callback) return callback(err);\n      throw err;\n    }\n  }\n\n  // Strict mode\n  if(typeof callback != 'function') {\n    throw toError(f(\"A callback is required in strict mode. While getting collection %s.\", name));\n  }\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  // Strict mode\n  this.listCollections({name:name}).toArray(function(err, collections) {\n    if(err != null) return handleCallback(callback, err, null);\n    if(collections.length == 0) return handleCallback(callback, toError(f(\"Collection %s does not exist. Currently in strict mode.\", name)), null);\n\n    try {\n      return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));\n    } catch(err) {\n      return handleCallback(callback, err, null);\n    }\n  });\n}\n\ndefine.classMethod('collection', {callback: true, promise:false, returns: [Collection]});\n\nvar createCollection = function(self, name, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self, options);\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Check if we have the name\n  self.listCollections({name: name}).toArray(function(err, collections) {\n    if(err != null) return handleCallback(callback, err, null);\n    if(collections.length > 0 && finalOptions.strict) {\n      return handleCallback(callback, MongoError.create({message: f(\"Collection %s already exists. Currently in strict mode.\", name), driver:true}), null);\n    } else if (collections.length > 0) {\n      try { return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options)); }\n      catch(err) { return handleCallback(callback, err); }\n    }\n\n    // Create collection command\n    var cmd = {'create':name};\n\n    // Add all optional parameters\n    for(var n in options) {\n      if(options[n] != null && typeof options[n] != 'function')\n        cmd[n] = options[n];\n    }\n\n    // Execute command\n    self.command(cmd, finalOptions, function(err, result) {\n      if(err) return handleCallback(callback, err);\n      handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));\n    });\n  });\n}\n\n/**\n * Creates a collection on a server pre-allocating space, need to create f.ex capped collections.\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {boolean} [options.capped=false] Create a capped collection.\n * @param {number} [options.size=null] The size of the capped collection in bytes.\n * @param {number} [options.max=null] The maximum number of documents in the capped collection.\n * @param {boolean} [options.autoIndexId=true] Create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2.\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createCollection = function(name, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  name = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Do we have a promisesLibrary\n  options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'string') name = callback;\n\n  // Execute the fallback callback\n  if(typeof callback == 'function') return createCollection(self, name, options, callback);\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createCollection(self, name, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('createCollection', {callback: true, promise:true});\n\n/**\n * Get all the db statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {Db~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.stats = function(options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Build command object\n  var commandObject = { dbStats:true };\n  // Check if we have the scale value\n  if(options['scale'] != null) commandObject['scale'] = options['scale'];\n  // Execute the command\n  return this.command(commandObject, options, callback);\n}\n\ndefine.classMethod('stats', {callback: true, promise:true});\n\n// Transformation methods for cursor results\nvar listCollectionsTranforms = function(databaseName) {\n  var matching = f('%s.', databaseName);\n\n  return {\n    doc: function(doc) {\n      var index = doc.name.indexOf(matching);\n      // Remove database name if available\n      if(doc.name && index == 0) {\n        doc.name = doc.name.substr(index + matching.length);\n      }\n\n      return doc;\n    }\n  }\n}\n\n/**\n * Get the list of all collection information for the specified db.\n *\n * @method\n * @param {object} filter Query to filter collections by\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @return {CommandCursor}\n */\nDb.prototype.listCollections = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  // Shallow clone the object\n  options = shallowClone(options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n  // We have a list collections command\n  if(this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}\n    // Build the command\n    var command = { listCollections : true, filter: filter, cursor: cursor };\n    // Set the AggregationCursor constructor\n    options.cursorFactory = CommandCursor;\n    // Filter out the correct field values\n    options.transforms = listCollectionsTranforms(this.s.databaseName);\n    // Create the cursor\n    var cursor = this.s.topology.cursor(f('%s.$cmd', this.s.databaseName), command, options);\n    // Do we have a readPreference, apply it\n    if(options.readPeference) cursor.setReadPreference(options.readPeference);\n    // Return the cursor\n    return cursor;\n  }\n\n  // We cannot use the listCollectionsCommand\n  if(!this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // If we have legacy mode and have not provided a full db name filter it\n    if(typeof filter.name == 'string' && !(new RegExp('^' + this.databaseName + '\\\\.').test(filter.name))) {\n      filter = shallowClone(filter);\n      filter.name = f('%s.%s', this.s.databaseName, filter.name);\n    }\n  }\n\n  // No filter, filter by current database\n  if(filter == null) {\n    filter.name = f('/%s/', this.s.databaseName);\n  }\n\n  // Rewrite the filter to use $and to filter out indexes\n  if(filter.name) {\n    filter = {$and: [{name: filter.name}, {name:/^((?!\\$).)*$/}]};\n  } else {\n    filter = {name:/^((?!\\$).)*$/};\n  }\n\n  // Return options\n  var _options = {transforms: listCollectionsTranforms(this.s.databaseName)}\n  // Get the cursor\n  var cursor = this.collection(Db.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);\n  // Do we have a readPreference, apply it\n  if(options.readPeference) cursor.setReadPreference(options.readPeference);\n  // Set the passed in batch size if one was provided\n  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // We have a fallback mode using legacy systems collections\n  return cursor;\n};\n\ndefine.classMethod('listCollections', {callback: false, promise:false, returns: [CommandCursor]});\n\nvar evaluate = function(self, code, parameters, options, callback) {\n  var finalCode = code;\n  var finalParameters = [];\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // If not a code object translate to one\n  if(!(finalCode instanceof Code)) finalCode = new Code(finalCode);\n  // Ensure the parameters are correct\n  if(parameters != null && !Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = [parameters];\n  } else if(parameters != null && Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = parameters;\n  }\n\n  // Create execution selector\n  var cmd = {'$eval':finalCode, 'args':finalParameters};\n  // Check if the nolock parameter is passed in\n  if(options['nolock']) {\n    cmd['nolock'] = options['nolock'];\n  }\n\n  // Set primary read preference\n  options.readPreference = new CoreReadPreference(ReadPreference.PRIMARY);\n\n  // Execute the command\n  self.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result && result.ok == 1) return handleCallback(callback, null, result.retval);\n    if(result) return handleCallback(callback, MongoError.create({message: f(\"eval failed: %s\", result.errmsg), driver:true}), null);\n    handleCallback(callback, err, result);\n  });\n}\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaulation of the javascript.\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.eval = function(code, parameters, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  parameters = args.length ? args.shift() : parameters;\n  options = args.length ? args.shift() || {} : {};\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return evaluate(self, code, parameters, options, callback);\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    evaluate(self, code, parameters, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('eval', {callback: true, promise:true});\n\n/**\n * Rename a collection.\n *\n * @method\n * @param {string} fromCollection Name of current collection to rename.\n * @param {string} toCollection New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Add return new collection\n  options.new_collection = true;\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') {\n    return this.collection(fromCollection).rename(toCollection, options, callback);\n  }\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.collection(fromCollection).rename(toCollection, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('renameCollection', {callback: true, promise:true});\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {string} name Name of collection to drop\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropCollection = function(name, callback) {\n  var self = this;\n\n  // Command to execute\n  var cmd = {'drop':name}\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(err) return handleCallback(callback, err);\n    if(result.ok) return handleCallback(callback, null, true);\n    handleCallback(callback, null, false);\n  });\n\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Execute command\n    self.command(cmd, self.s.options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      if(result.ok) return resolve(true);\n      resolve(false);\n    });\n  });\n};\n\ndefine.classMethod('dropCollection', {callback: true, promise:true});\n\n/**\n * Drop a database.\n *\n * @method\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropDatabase = function(callback) {\n  var self = this;\n  // Drop database command\n  var cmd = {'dropDatabase':1};\n\n  // Check if the callback is in fact a string\n  if(typeof callback == 'function') return this.command(cmd, this.s.options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n\n  // Execute the command\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Execute command\n    self.command(cmd, self.s.options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      if(result.ok) return resolve(true);\n      resolve(false);\n    });\n  });\n}\n\ndefine.classMethod('dropDatabase', {callback: true, promise:true});\n\n/**\n * The callback format for the collections method.\n * @callback Db~collectionsResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection[]} collections An array of all the collections objects for the db instance.\n */\nvar collections = function(self, callback) {\n  // Let's get the collection names\n  self.listCollections().toArray(function(err, documents) {\n    if(err != null) return handleCallback(callback, err, null);\n    // Filter collections removing any illegal ones\n    documents = documents.filter(function(doc) {\n      return doc.name.indexOf('$') == -1;\n    });\n\n    // Return the collection objects\n    handleCallback(callback, null, documents.map(function(d) {\n      return new Collection(self, self.s.topology, self.s.databaseName, d.name.replace(self.s.databaseName + \".\", ''), self.s.pkFactory, self.s.options);\n    }));\n  });\n}\n\n/**\n * Fetch all collections for the current db.\n *\n * @method\n * @param {Db~collectionsResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.collections = function(callback) {\n  var self = this;\n\n  // Return the callback\n  if(typeof callback == 'function') return collections(self, callback);\n  // Return the promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    collections(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('collections', {callback: true, promise:true});\n\n/**\n * Runs a command on the database as admin.\n * @method\n * @param {object} command The command hash\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS=null] Number of milliseconds to wait before aborting the query.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.executeDbAdminCommand = function(selector, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  if(options.readPreference) {\n    options.readPreference = options.readPreference;\n  }\n\n  // Return the callback\n  if(typeof callback == 'function') return self.s.topology.command('admin.$cmd', selector, options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.result);\n  });\n\n  // Return promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    self.s.topology.command('admin.$cmd', selector, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      resolve(result.result);\n    });\n  });\n};\n\ndefine.classMethod('executeDbAdminCommand', {callback: true, promise:true});\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createIndex = function(name, fieldOrSpec, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n  options = typeof callback === 'function' ? options : callback;\n  options = options == null ? {} : options;\n  // Shallow clone the options\n  options = shallowClone(options);\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return createIndex(self, name, fieldOrSpec, options, callback);\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    createIndex(self, name, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar createIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern({}, self, options);\n  // Ensure we have a callback\n  if(finalOptions.writeConcern && typeof callback != 'function') {\n    throw MongoError.create({message: \"Cannot use a writeConcern without a provided callback\", driver:true});\n  }\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Attempt to run using createIndexes command\n  createIndexUsingCreateIndexes(self, name, fieldOrSpec, options, function(err, result) {\n    if(err == null) return handleCallback(callback, err, result);\n    // Create command\n    var doc = createCreateIndexCommand(self, name, fieldOrSpec, options);\n    // Set no key checking\n    finalOptions.checkKeys = false;\n    // Insert document\n    self.s.topology.insert(f(\"%s.%s\", self.s.databaseName, Db.SYSTEM_INDEX_COLLECTION), doc, finalOptions, function(err, result) {\n      if(callback == null) return;\n      if(err) return handleCallback(callback, err);\n      if(result == null) return handleCallback(callback, null, null);\n      if(result.result.writeErrors) return handleCallback(callback, MongoError.create(result.result.writeErrors[0]), null);\n      handleCallback(callback, null, doc.name);\n    });\n  });\n}\n\ndefine.classMethod('createIndex', {callback: true, promise:true});\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated since version 2.0\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.ensureIndex = function(name, fieldOrSpec, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return ensureIndex(self, name, fieldOrSpec, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    ensureIndex(self, name, fieldOrSpec, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar ensureIndex = function(self, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  var finalOptions = writeConcern({}, self, options);\n  // Create command\n  var selector = createCreateIndexCommand(self, name, fieldOrSpec, options);\n  var index_name = selector.name;\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Default command options\n  var commandOptions = {};\n  // Check if the index allready exists\n  self.indexInformation(name, finalOptions, function(err, indexInformation) {\n    if(err != null && err.code != 26) return handleCallback(callback, err, null);\n    // If the index does not exist, create it\n    if(indexInformation == null || !indexInformation[index_name])  {\n      self.createIndex(name, fieldOrSpec, options, callback);\n    } else {\n      if(typeof callback === 'function') return handleCallback(callback, null, index_name);\n    }\n  });\n}\n\ndefine.classMethod('ensureIndex', {callback: true, promise:true});\n\nDb.prototype.addChild = function(db) {\n  if(this.s.parentDb) return this.s.parentDb.addChild(db);\n  this.s.children.push(db);\n}\n\n/**\n * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\n * related in a parent-child relationship to the original instance so that events are correctly emitted on child\n * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\n * You can control these behaviors with the options noListener and returnNonCachedInstance.\n *\n * @method\n * @param {string} name The name of the database we want to use.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {Db}\n */\nDb.prototype.db = function(dbName, options) {\n  options = options || {};\n  // Copy the options and add out internal override of the not shared flag\n  for(var key in this.options) {\n    options[key] = this.options[key];\n  }\n\n  // Do we have the db in the cache already\n  if(this.s.dbCache[dbName] && options.returnNonCachedInstance !== true) {\n    return this.s.dbCache[dbName];\n  }\n\n  // Add current db as parentDb\n  if(options.noListener == null || options.noListener == false) {\n    options.parentDb = this;\n  }\n\n  // Add promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Return the db object\n  var db = new Db(dbName, this.s.topology, options)\n\n  // Add as child\n  if(options.noListener == null || options.noListener == false) {\n    this.addChild(db);\n  }\n\n  // Add the db to the cache\n  this.s.dbCache[dbName] = db;\n  // Return the database\n  return db;\n};\n\ndefine.classMethod('db', {callback: false, promise:false, returns: [Db]});\n\nvar _executeAuthCreateUserCommand = function(self, username, password, options, callback) {\n  // Special case where there is no password ($external users)\n  if(typeof username == 'string'\n    && password != null && typeof password == 'object') {\n    options = password;\n    password = null;\n  }\n\n  // Unpack all options\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Error out if we digestPassword set\n  if(options.digestPassword != null) {\n    throw toError(\"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\");\n  }\n\n  // Get additional values\n  var customData = options.customData != null ? options.customData : {};\n  var roles = Array.isArray(options.roles) ? options.roles : [];\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // If not roles defined print deprecated message\n  if(roles.length == 0) {\n    console.log(\"Creating a user without roles is deprecated in MongoDB >= 2.6\");\n  }\n\n  // Get the error options\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Check the db name and add roles if needed\n  if((self.databaseName.toLowerCase() == 'admin' || options.dbName == 'admin') && !Array.isArray(options.roles)) {\n    roles = ['root']\n  } else if(!Array.isArray(options.roles)) {\n    roles = ['dbOwner']\n  }\n\n  // Build the command to execute\n  var command = {\n      createUser: username\n    , customData: customData\n    , roles: roles\n    , digestPassword:false\n  }\n\n  // Apply write concern to command\n  command = writeConcern(command, self, options);\n\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + \":mongo:\" + password);\n  var userPassword = md5.digest('hex');\n\n  // No password\n  if(typeof password == 'string') {\n    command.pwd = userPassword;\n  }\n\n  // Force write using primary\n  commandOptions.readPreference = CoreReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err && err.ok == 0 && err.code == undefined) return handleCallback(callback, {code: -5000}, null);\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, !result.ok ? toError(result) : null\n      , result.ok ? [{user: username, pwd: ''}] : null);\n  })\n}\n\nvar addUser = function(self, username, password, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Attempt to execute auth command\n  _executeAuthCreateUserCommand(self, username, password, options, function(err, r) {\n    // We need to perform the backward compatible insert operation\n    if(err && err.code == -5000) {\n      var finalOptions = writeConcern(shallowClone(options), self, options);\n      // Use node md5 generator\n      var md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(username + \":mongo:\" + password);\n      var userPassword = md5.digest('hex');\n\n      // If we have another db set\n      var db = options.dbName ? self.db(options.dbName) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Check if we are inserting the first user\n      collection.count({}, function(err, count) {\n        // We got an error (f.ex not authorized)\n        if(err != null) return handleCallback(callback, err, null);\n        // Check if the user exists and update i\n        collection.find({user: username}, {dbName: options['dbName']}).toArray(function(err, documents) {\n          // We got an error (f.ex not authorized)\n          if(err != null) return handleCallback(callback, err, null);\n          // Add command keys\n          finalOptions.upsert = true;\n\n          // We have a user, let's update the password or upsert if not\n          collection.update({user: username},{$set: {user: username, pwd: userPassword}}, finalOptions, function(err, results, full) {\n            if(count == 0 && err) return handleCallback(callback, null, [{user:username, pwd:userPassword}]);\n            if(err) return handleCallback(callback, err, null)\n            handleCallback(callback, null, [{user:username, pwd:userPassword}]);\n          });\n        });\n      });\n\n      return;\n    }\n\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, err, r);\n  });\n}\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.addUser = function(username, password, options, callback) {\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return addUser(self, username, password, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    addUser(self, username, password, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('addUser', {callback: true, promise:true});\n\nvar _executeAuthRemoveUserCommand = function(self, username, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // Get the error options\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Get additional values\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Build the command to execute\n  var command = {\n    dropUser: username\n  }\n\n  // Apply write concern to command\n  command = writeConcern(command, self, options);\n\n  // Force write using primary\n  commandOptions.readPreference = CoreReadPreference.primary;\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err && !err.ok && err.code == undefined) return handleCallback(callback, {code: -5000});\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  })\n}\n\nvar removeUser = function(self, username, options, callback) {\n  // Attempt to execute command\n  _executeAuthRemoveUserCommand(self, username, options, function(err, result) {\n    if(err && err.code == -5000) {\n      var finalOptions = writeConcern(shallowClone(options), self, options);\n      // If we have another db set\n      var db = options.dbName ? self.db(options.dbName) : self;\n\n      // Fetch a user collection\n      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);\n\n      // Locate the user\n      collection.findOne({user: username}, {}, function(err, user) {\n        if(user == null) return handleCallback(callback, err, false);\n        collection.remove({user: username}, finalOptions, function(err, result) {\n          handleCallback(callback, err, true);\n        });\n      });\n\n      return;\n    }\n\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, err, result);\n  });\n}\n\ndefine.classMethod('removeUser', {callback: true, promise:true});\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.removeUser = function(username, options, callback) {\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return removeUser(self, username, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    removeUser(self, username, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar authenticate = function(self, username, password, options, callback) {\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n  // the default db to authenticate against is 'self'\n  // if authententicate is called from a retry context, it may be another one, like admin\n  var authdb = options.authdb ? options.authdb : options.dbName;\n  authdb = options.authSource ? options.authSource : authdb;\n  authdb = authdb ? authdb : self.databaseName;\n\n  // Callback\n  var _callback = function(err, result) {\n    if(self.listeners('authenticated').length > 0) {\n      self.emit('authenticated', err, result);\n    }\n\n    // Return to caller\n    handleCallback(callback, err, result);\n  }\n\n  // authMechanism\n  var authMechanism = options.authMechanism || '';\n  authMechanism = authMechanism.toUpperCase();\n\n  // If classic auth delegate to auth command\n  if(authMechanism == 'MONGODB-CR') {\n    self.s.topology.auth('mongocr', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'PLAIN') {\n    self.s.topology.auth('plain', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'MONGODB-X509') {\n    self.s.topology.auth('x509', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'SCRAM-SHA-1') {\n    self.s.topology.auth('scram-sha-1', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if(authMechanism == 'GSSAPI') {\n    if(process.platform == 'win32') {\n      self.s.topology.auth('sspi', authdb, username, password, options, function(err, result) {\n        if(err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    } else {\n      self.s.topology.auth('gssapi', authdb, username, password, options, function(err, result) {\n        if(err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    }\n  } else if(authMechanism == 'DEFAULT') {\n    self.s.topology.auth('default', authdb, username, password, function(err, result) {\n      if(err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else {\n    handleCallback(callback, MongoError.create({message: f(\"authentication mechanism %s not supported\", options.authMechanism), driver:true}));\n  }\n}\n\n/**\n * Authenticate a user against the server.\n * @method\n * @param {string} username The username.\n * @param {string} [password] The password.\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.authMechanism=MONGODB-CR] The authentication mechanism to use, GSSAPI, MONGODB-CR, MONGODB-X509, PLAIN\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.authenticate = function(username, password, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  // Shallow copy the options\n  options = shallowClone(options);\n\n  // Set default mechanism\n  if(!options.authMechanism) {\n    options.authMechanism = 'DEFAULT';\n  } else if(options.authMechanism != 'GSSAPI'\n    && options.authMechanism != 'MONGODB-CR'\n    && options.authMechanism != 'MONGODB-X509'\n    && options.authMechanism != 'SCRAM-SHA-1'\n    && options.authMechanism != 'PLAIN') {\n      return handleCallback(callback, MongoError.create({message: \"only GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\", driver:true}));\n  }\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return authenticate(self, username, password, options, function(err, r) {\n    // Support failed auth method\n    if(err && err.message && err.message.indexOf('saslStart') != -1) err.code = 59;\n    // Reject error\n    if(err) return callback(err, r);\n    callback(null, r);\n  });\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    authenticate(self, username, password, options, function(err, r) {\n      // Support failed auth method\n      if(err && err.message && err.message.indexOf('saslStart') != -1) err.code = 59;\n      // Reject error\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\ndefine.classMethod('authenticate', {callback: true, promise:true});\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {string} [options.dbName=null] Logout against different database than current.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.logout = function(options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() || {} : {};\n\n  // logout command\n  var cmd = {'logout':1};\n\n  // Add onAll to login to ensure all connection are logged out\n  options.onAll = true;\n\n  // We authenticated against a different db use that\n  if(this.s.authSource) options.dbName = this.s.authSource;\n\n  // Execute the command\n  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) {\n    // Did the user destroy the topology\n    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n    if(err) return handleCallback(callback, err, false);\n    handleCallback(callback, null, true)\n  });\n\n  // Return promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self.command(cmd, options, function(err, result) {\n      // Did the user destroy the topology\n      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));\n      if(err) return reject(err);\n      resolve(true);\n    });\n  });\n}\n\ndefine.classMethod('logout', {callback: true, promise:true});\n\n// Figure out the read preference\nvar getReadPreference = function(options, db) {\n  if(options.readPreference) return options;\n  if(db.readPreference) options.readPreference = db.readPreference;\n  return options;\n}\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {string} name The name of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.indexInformation = function(name, options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // If we have a callback fallback\n  if(typeof callback == 'function') return indexInformation(self, name, options, callback);\n\n  // Return a promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    indexInformation(self, name, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar indexInformation = function(self, name, options, callback) {\n    // If we specified full information\n  var full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));\n\n  // Process all the results from the index command and collection\n  var processResults = function(indexes) {\n    // Contains all the information\n    var info = {};\n    // Process all the indexes\n    for(var i = 0; i < indexes.length; i++) {\n      var index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for(var name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  self.collection(name).listIndexes().toArray(function(err, indexes) {\n    if(err) return callback(toError(err));\n    if(!Array.isArray(indexes)) return handleCallback(callback, null, []);\n    if(full) return handleCallback(callback, null, indexes);\n    handleCallback(callback, null, processResults(indexes));\n  });\n}\n\ndefine.classMethod('indexInformation', {callback: true, promise:true});\n\nvar createCreateIndexCommand = function(db, name, fieldOrSpec, options) {\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  var fieldHash = indexParameters.fieldHash;\n  var keys = indexParameters.keys;\n\n  // Generate the index name\n  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;\n  var selector = {\n    'ns': db.databaseName + \".\" + name, 'key': fieldHash, 'name': indexName\n  }\n\n  // Ensure we have a correct finalUnique\n  var finalUnique = options == null || 'object' === typeof options ? false : options;\n  // Set up options\n  options = options == null || typeof options == 'boolean' ? {} : options;\n\n  // Add all the options\n  var keysToOmit = Object.keys(selector);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      selector[optionName] = options[optionName];\n    }\n  }\n\n  if(selector['unique'] == null) selector['unique'] = finalUnique;\n\n  // Remove any write concern operations\n  var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];\n  for(var i = 0; i < removeKeys.length; i++) {\n    delete selector[removeKeys[i]];\n  }\n\n  // Return the command creation selector\n  return selector;\n}\n\nvar createIndexUsingCreateIndexes = function(self, name, fieldOrSpec, options, callback) {\n  // Build the index\n  var indexParameters = parseIndexOptions(fieldOrSpec);\n  // Generate the index name\n  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;\n  // Set up the index\n  var indexes = [{ name: indexName, key: indexParameters.fieldHash }];\n  // merge all the options\n  var keysToOmit = Object.keys(indexes[0]);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      indexes[0][optionName] = options[optionName];\n    }\n\n    // Remove any write concern operations\n    var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];\n    for(var i = 0; i < removeKeys.length; i++) {\n      delete indexes[0][removeKeys[i]];\n    }\n  }\n\n  // Create command\n  var cmd = {createIndexes: name, indexes: indexes};\n\n  // Apply write concern to command\n  cmd = writeConcern(cmd, self, options);\n\n  // Build the command\n  self.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result.ok == 0) return handleCallback(callback, toError(result), null);\n    // Return the indexName for backward compatibility\n    handleCallback(callback, null, indexName);\n  });\n}\n\n// Validate the database name\nvar validateDatabaseName = function(databaseName) {\n  if(typeof databaseName !== 'string') throw MongoError.create({message: \"database name must be a string\", driver:true});\n  if(databaseName.length === 0) throw MongoError.create({message: \"database name cannot be the empty string\", driver:true});\n  if(databaseName == '$external') return;\n\n  var invalidChars = [\" \", \".\", \"$\", \"/\", \"\\\\\"];\n  for(var i = 0; i < invalidChars.length; i++) {\n    if(databaseName.indexOf(invalidChars[i]) != -1) throw MongoError.create({message: \"database names cannot contain the character '\" + invalidChars[i] + \"'\", driver:true});\n  }\n}\n\n// Get write concern\nvar writeConcern = function(target, db, options) {\n  if(options.w != null || options.j != null || options.fsync != null) {\n    var opts = {};\n    if(options.w) opts.w = options.w;\n    if(options.wtimeout) opts.wtimeout = options.wtimeout;\n    if(options.j) opts.j = options.j;\n    if(options.fsync) opts.fsync = options.fsync;\n    target.writeConcern = opts;\n  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {\n    target.writeConcern = db.writeConcern;\n  }\n\n  return target\n}\n\n// Add listeners to topology\nvar createListener = function(self, e, object) {\n  var listener = function(err) {\n    if(e != 'error') {\n      object.emit(e, err, self);\n\n      // Emit on all associated db's if available\n      for(var i = 0; i < self.s.children.length; i++) {\n        self.s.children[i].emit(e, err, self.s.children[i]);\n      }\n    }\n  }\n  return listener;\n}\n\n/**\n * Db close event\n *\n * Emitted after a socket closed against a single server or mongos proxy.\n *\n * @event Db#close\n * @type {MongoError}\n */\n\n/**\n * Db authenticated event\n *\n * Emitted after all server members in the topology (single server, replicaset or mongos) have successfully authenticated.\n *\n * @event Db#authenticated\n * @type {object}\n */\n\n/**\n * Db reconnect event\n *\n *  * Server: Emitted when the driver has reconnected and re-authenticated.\n *  * ReplicaSet: N/A\n *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos.\n *\n * @event Db#reconnect\n * @type {object}\n */\n\n/**\n * Db error event\n *\n * Emitted after an error occurred against a single server or mongos proxy.\n *\n * @event Db#error\n * @type {MongoError}\n */\n\n/**\n * Db timeout event\n *\n * Emitted after a socket timeout occurred against a single server or mongos proxy.\n *\n * @event Db#timeout\n * @type {MongoError}\n */\n\n/**\n * Db parseError event\n *\n * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server.\n *\n * @event Db#parseError\n * @type {MongoError}\n */\n\n/**\n * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time.\n *\n * * Server: Emitted when the driver has connected to the single server and has authenticated.\n * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members.\n * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies.\n *\n * @event Db#fullsetup\n * @type {Db}\n */\n\n// Constants\nDb.SYSTEM_NAMESPACE_COLLECTION = \"system.namespaces\";\nDb.SYSTEM_INDEX_COLLECTION = \"system.indexes\";\nDb.SYSTEM_PROFILE_COLLECTION = \"system.profile\";\nDb.SYSTEM_USER_COLLECTION = \"system.users\";\nDb.SYSTEM_COMMAND_COLLECTION = \"$cmd\";\nDb.SYSTEM_JS_COLLECTION = \"system.js\";\n\nmodule.exports = Db;\n"]}