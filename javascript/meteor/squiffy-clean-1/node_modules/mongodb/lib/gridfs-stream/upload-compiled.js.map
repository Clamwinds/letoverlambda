{"version":3,"sources":["upload.js"],"names":[],"mappings":"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","file":"upload-compiled.js","sourcesContent":["var core = require('mongodb-core');\nvar crypto = require('crypto');\nvar shallowClone = require('../utils').shallowClone;\nvar stream = require('stream');\nvar util = require('util');\n\nvar ERROR_NAMESPACE_NOT_FOUND = 26;\n\nmodule.exports = GridFSBucketWriteStream;\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n *\n * @class\n * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.chunkSizeBytes=null] The chunk size to use, in bytes\n * @param {number} [options.w=null] The write concern\n * @param {number} [options.wtimeout=null] The write concern timeout\n * @param {number} [options.j=null] The journal write concern\n * @fires GridFSBucketWriteStream#error\n * @fires GridFSBucketWriteStream#finish\n * @return {GridFSBucketWriteStream} a GridFSBucketWriteStream instance.\n */\n\nfunction GridFSBucketWriteStream(bucket, filename, options) {\n  this.bucket = bucket;\n  this.chunks = bucket.s._chunksCollection;\n  this.filename = filename;\n  this.files = bucket.s._filesCollection;\n  this.options = options;\n\n  this.id = core.BSON.ObjectId();\n  this.chunkSizeBytes = this.options.chunkSizeBytes;\n  this.bufToStore = new Buffer(this.chunkSizeBytes);\n  this.length = 0;\n  this.md5 = crypto.createHash('md5');\n  this.n = 0;\n  this.pos = 0;\n  this.state = {\n    streamEnd: false,\n    outstandingRequests: 0,\n    errored: false\n  };\n\n  if (!this.bucket.s.calledOpenUploadStream) {\n    this.bucket.s.calledOpenUploadStream = true;\n\n    var _this = this;\n    checkIndexes(this, function() {\n      _this.bucket.s.checkedIndexes = true;\n      _this.bucket.emit('index');\n    });\n  }\n}\n\nutil.inherits(GridFSBucketWriteStream, stream.Writable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketWriteStream#error\n * @type {Error}\n */\n\n/**\n * end() was called and the write stream successfully wrote all chunks to\n * MongoDB.\n *\n * @event GridFSBucketWriteStream#finish\n * @type {object}\n */\n\n/**\n * Write a buffer to the stream.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise.\n */\n\nGridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {\n  var _this = this;\n  return waitForIndexes(this, function() {\n    return doWrite(_this, chunk, encoding, callback);\n  });\n};\n\n/**\n * Tells the stream that no more data will be coming in. The stream will\n * persist the remaining data to MongoDB, write the files document, and\n * then emit a 'finish' event.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when all files and chunks have been persisted to MongoDB\n */\n\nGridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {\n  var _this = this;\n  this.state.streamEnd = true;\n\n  if (callback) {\n    this.once('finish', callback);\n  }\n\n  if (!chunk) {\n    waitForIndexes(this, function() {\n      writeRemnant(_this);\n    });\n    return;\n  }\n\n  var _this = this;\n  var inputBuf = (Buffer.isBuffer(chunk)) ?\n    chunk : new Buffer(chunk, encoding);\n\n  this.write(chunk, encoding, function() {\n    writeRemnant(_this);\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error, callback) {\n  if (_this.state.errored) {\n    return;\n  }\n  _this.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  _this.emit('error', error);\n}\n\n/**\n * @ignore\n */\n\nfunction createChunkDoc(filesId, n, data) {\n  return {\n    _id: core.BSON.ObjectId(),\n    files_id: filesId,\n    n: n,\n    data: data\n  };\n}\n\n/**\n * @ignore\n */\n\nfunction checkChunksIndex(_this, callback) {\n  _this.chunks.listIndexes().toArray(function(error, indexes) {\n    if (error) {\n      // Collection doesn't exist so create index\n      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n        var index = { files_id: 1, n: 1 };\n        _this.chunks.createIndex(index, { background: false }, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          callback();\n        });\n        return;\n      }\n      return callback(error);\n    }\n\n    var hasChunksIndex = false;\n    indexes.forEach(function(index) {\n      if (index.key) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.files_id === 1 &&\n            index.key.n === 1) {\n          hasChunksIndex = true;\n        }\n      }\n    });\n\n    if (hasChunksIndex) {\n      callback();\n    } else {\n      var index = { files_id: 1, n: 1 };\n      var indexOptions = getWriteOptions(_this);\n\n      indexOptions.background = false;\n      indexOptions.unique = true;\n\n      _this.chunks.createIndex(index, indexOptions, function(error) {\n        if (error) {\n          return callback(error);\n        }\n\n        callback();\n      });\n    }\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkDone(_this, callback) {\n  if (_this.state.streamEnd &&\n      _this.state.outstandingRequests === 0 &&\n      !_this.state.errored) {\n    var filesDoc = createFilesDoc(_this.id, _this.length, _this.chunkSizeBytes,\n      _this.md5.digest('hex'), _this.filename, _this.options.contentType,\n      _this.options.aliases, _this.options.metadata);\n\n    _this.files.insert(filesDoc, getWriteOptions(_this), function(error) {\n      if (error) {\n        return __handleError(_this, error, callback);\n      }\n      _this.emit('finish', filesDoc);\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction checkIndexes(_this, callback) {\n  _this.files.findOne({}, { _id: 1 }, function(error, doc) {\n    if (error) {\n      return callback(error);\n    }\n    if (doc) {\n      return callback();\n    }\n\n    _this.files.listIndexes().toArray(function(error, indexes) {\n      if (error) {\n        // Collection doesn't exist so create index\n        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n          var index = { filename: 1, uploadDate: 1 };\n          _this.files.createIndex(index, { background: false }, function(error) {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(_this, callback);\n          });\n          return;\n        }\n        return callback(error);\n      }\n\n      var hasFileIndex = false;\n      indexes.forEach(function(index) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.filename === 1 &&\n            index.key.uploadDate === 1) {\n          hasFileIndex = true;\n        }\n      });\n\n      if (hasFileIndex) {\n        checkChunksIndex(_this, callback);\n      } else {\n        var index = { filename: 1, uploadDate: 1 };\n\n        var indexOptions = getWriteOptions(_this);\n\n        indexOptions.background = false;\n\n        _this.files.createIndex(index, indexOptions, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          checkChunksIndex(_this, callback);\n        });\n      }\n    });\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction createFilesDoc(_id, length, chunkSize, md5, filename, contentType,\n  aliases, metadata) {\n  var ret = {\n    _id: _id,\n    length: length,\n    chunkSize: chunkSize,\n    uploadDate: new Date(),\n    md5: md5,\n    filename: filename\n  };\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\n/**\n * @ignore\n */\n\nfunction doWrite(_this, chunk, encoding, callback) {\n\n  var inputBuf = (Buffer.isBuffer(chunk)) ?\n    chunk : new Buffer(chunk, encoding);\n\n  _this.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (_this.pos + inputBuf.length < _this.chunkSizeBytes) {\n    inputBuf.copy(_this.bufToStore, _this.pos);\n    _this.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  var inputBufRemaining = inputBuf.length;\n  var spaceRemaining = _this.chunkSizeBytes - _this.pos;\n  var numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  var outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    var inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(_this.bufToStore, _this.pos,\n      inputBufPos, inputBufPos + numToCopy);\n    _this.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    if (spaceRemaining === 0) {\n      _this.md5.update(_this.bufToStore);\n      var doc = createChunkDoc(_this.id, _this.n, _this.bufToStore);\n      ++_this.state.outstandingRequests;\n      ++outstandingRequests;\n\n      _this.chunks.insert(doc, getWriteOptions(_this), function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        --_this.state.outstandingRequests;\n        --outstandingRequests;\n        if (!outstandingRequests) {\n          _this.emit('drain', doc);\n          callback && callback();\n          checkDone(_this);\n        }\n      });\n\n      spaceRemaining = _this.chunkSizeBytes;\n      _this.pos = 0;\n      ++_this.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction getWriteOptions(_this) {\n  var obj = {};\n  if (_this.options.writeConcern) {\n    obj.w = concern.w;\n    obj.wtimeout = concern.wtimeout;\n    obj.j = concern.j;\n  }\n  return obj;\n}\n\n/**\n * @ignore\n */\n\nfunction waitForIndexes(_this, callback) {\n  if (_this.bucket.s.checkedIndexes) {\n    callback(false);\n  }\n\n  _this.bucket.once('index', function() {\n    callback(true);\n  });\n\n  return true;\n}\n\n/**\n * @ignore\n */\n\nfunction writeRemnant(_this, callback) {\n  // Buffer is empty, so don't bother to insert\n  if (_this.pos === 0) {\n    return checkDone(_this, callback);\n  }\n\n  ++_this.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  var remnant = new Buffer(_this.pos);\n  _this.bufToStore.copy(remnant, 0, 0, _this.pos);\n  _this.md5.update(remnant);\n  var doc = createChunkDoc(_this.id, _this.n, remnant);\n\n  _this.chunks.insert(doc, getWriteOptions(_this), function(error) {\n    if (error) {\n      return __handleError(_this, error);\n    }\n    --_this.state.outstandingRequests;\n    checkDone(_this);\n  });\n}\n"]}