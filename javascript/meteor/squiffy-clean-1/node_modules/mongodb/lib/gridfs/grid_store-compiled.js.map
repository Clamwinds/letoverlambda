{"version":3,"sources":["grid_store.js"],"names":[],"mappings":"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","file":"grid_store-compiled.js","sourcesContent":["\"use strict\";\n\n/**\n * @fileOverview GridFS is a tool for MongoDB to store files to the database.\n * Because of the restrictions of the object size the database can hold, a\n * facility to split a file into several chunks is needed. The {@link GridStore}\n * class offers a simplified api to interact with files while managing the\n * chunks of split files behind the scenes. More information about GridFS can be\n * found <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>.\n *\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   GridStore = require('mongodb').GridStore,\n *   ObjectID = require('mongodb').ObjectID,\n *   test = require('assert');\n *\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   var gridStore = new GridStore(db, null, \"w\");\n *   gridStore.open(function(err, gridStore) {\n *     gridStore.write(\"hello world!\", function(err, gridStore) {\n *       gridStore.close(function(err, result) {\n *\n *         // Let's read the file using object Id\n *         GridStore.read(db, result._id, function(err, data) {\n *           test.equal('hello world!', data);\n *           db.close();\n *           test.done();\n *         });\n *       });\n *     });\n *   });\n * });\n */\nvar Chunk = require('./chunk'),\n  ObjectID = require('mongodb-core').BSON.ObjectID,\n  ReadPreference = require('../read_preference'),\n  Buffer = require('buffer').Buffer,\n  Collection = require('../collection'),\n  fs = require('fs'),\n  timers = require('timers'),\n  f = require('util').format,\n  util = require('util'),\n  Define = require('../metadata'),\n  MongoError = require('mongodb-core').MongoError,\n  inherits = util.inherits,\n  Duplex = require('stream').Duplex || require('readable-stream').Duplex,\n  shallowClone = require('../utils').shallowClone;\n\nvar REFERENCE_BY_FILENAME = 0,\n  REFERENCE_BY_ID = 1;\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external Duplex\n */\n\n/**\n * Create a new GridStore instance\n *\n * Modes\n *  - **\"r\"** - read only. This is the default mode.\n *  - **\"w\"** - write in truncate mode. Existing data will be overwriten.\n *\n * @class\n * @param {Db} db A database instance to interact with.\n * @param {object} [id] optional unique id for this file\n * @param {string} [filename] optional filename for this file, no unique constrain on the field\n * @param {string} mode set the mode for this file.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {string} [options.root=null] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {string} [options.content_type=null] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n * @param {object} [options.metadata=null] Arbitrary data the user wants to store.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @property {number} chunkSize Get the gridstore chunk size.\n * @property {number} md5 The md5 checksum for this file.\n * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory\n * @return {GridStore} a GridStore instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStore = function GridStore(db, id, filename, mode, options) {\n  if(!(this instanceof GridStore)) return new GridStore(db, id, filename, mode, options);\n  var self = this;\n  this.db = db;\n\n  // Handle options\n  if(typeof options === 'undefined') options = {};\n  // Handle mode\n  if(typeof mode === 'undefined') {\n    mode = filename;\n    filename = undefined;\n  } else if(typeof mode == 'object') {\n    options = mode;\n    mode = filename;\n    filename = undefined;\n  }\n\n  if(id instanceof ObjectID) {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  } else if(typeof filename == 'undefined') {\n    this.referenceBy = REFERENCE_BY_FILENAME;\n    this.filename = id;\n    if (mode.indexOf('w') != null) {\n      this.fileId = new ObjectID();\n    }\n  } else {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  }\n\n  // Set up the rest\n  this.mode = mode == null ? \"r\" : mode;\n  this.options = options || {};\n\n  // Opened\n  this.isOpen = false;\n\n  // Set the root if overridden\n  this.root = this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];\n  this.position = 0;\n  this.readPreference = this.options.readPreference || db.options.readPreference || ReadPreference.PRIMARY;\n  this.writeConcern = _getWriteConcern(db, this.options);\n  // Set default chunk size\n  this.internalChunkSize = this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];\n\n  // Get the promiseLibrary\n  var promiseLibrary = this.options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Set the promiseLibrary\n  this.promiseLibrary = promiseLibrary;\n\n  Object.defineProperty(this, \"chunkSize\", { enumerable: true\n   , get: function () {\n       return this.internalChunkSize;\n     }\n   , set: function(value) {\n       if(!(this.mode[0] == \"w\" && this.position == 0 && this.uploadDate == null)) {\n         this.internalChunkSize = this.internalChunkSize;\n       } else {\n         this.internalChunkSize = value;\n       }\n     }\n  });\n\n  Object.defineProperty(this, \"md5\", { enumerable: true\n   , get: function () {\n       return this.internalMd5;\n     }\n  });\n\n  Object.defineProperty(this, \"chunkNumber\", { enumerable: true\n   , get: function () {\n       return this.currentChunk && this.currentChunk.chunkNumber ? this.currentChunk.chunkNumber : null;\n     }\n  });\n}\n\nvar define = GridStore.define = new Define('Gridstore', GridStore, true);\n\n/**\n * The callback format for the Gridstore.open method\n * @callback GridStore~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The GridStore instance if the open method was successful.\n */\n\n/**\n * Opens the file from the database and initialize this object. Also creates a\n * new one if file does not exist.\n *\n * @method\n * @param {GridStore~openCallback} [callback] this will be called after executing this method\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.open = function(callback) {\n  var self = this;\n  if( this.mode != \"w\" && this.mode != \"w+\" && this.mode != \"r\"){\n    throw MongoError.create({message: \"Illegal mode \" + this.mode, driver:true});\n  }\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return open(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    open(self, function(err, store) {\n      if(err) return reject(err);\n      resolve(store);\n    })\n  });\n};\n\nvar open = function(self, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(self.db, self.options);\n\n  // If we are writing we need to ensure we have the right indexes for md5's\n  if((self.mode == \"w\" || self.mode == \"w+\")) {\n    // Get files collection\n    var collection = self.collection();\n    // Put index on filename\n    collection.ensureIndex([['filename', 1]], writeConcern, function(err, index) {\n      // Get chunk collection\n      var chunkCollection = self.chunkCollection();\n      // Make an unique index for compatibility with mongo-cxx-driver:legacy\n      var chunkIndexOptions = shallowClone(writeConcern);\n      chunkIndexOptions.unique = true;\n      // Ensure index on chunk collection\n      chunkCollection.ensureIndex([['files_id', 1], ['n', 1]], chunkIndexOptions, function(err, index) {\n        // Open the connection\n        _open(self, writeConcern, function(err, r) {\n          if(err) return callback(err);\n          self.isOpen = true;\n          callback(err, r);\n        });\n      });\n    });\n  } else {\n    // Open the gridstore\n    _open(self, writeConcern, function(err, r) {\n      if(err) return callback(err);\n      self.isOpen = true;\n      callback(err, r);\n    });\n  }\n}\n\n// Push the definition for open\ndefine.classMethod('open', {callback: true, promise:true});\n\n/**\n * Verify if the file is at EOF.\n *\n * @method\n * @return {boolean} true if the read/write head is at the end of this file.\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.eof = function() {\n  return this.position == this.length ? true : false;\n}\n\ndefine.classMethod('eof', {callback: false, promise:false, returns: [Boolean]});\n\n/**\n * The callback result format.\n * @callback GridStore~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result from the callback.\n */\n\n/**\n * Retrieves a single character from this file.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.getc = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return eof(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    eof(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n}\n\nvar eof = function(self, callback) {\n  if(self.eof()) {\n    callback(null, null);\n  } else if(self.currentChunk.eof()) {\n    nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n      self.currentChunk = chunk;\n      self.position = self.position + 1;\n      callback(err, self.currentChunk.getc());\n    });\n  } else {\n    self.position = self.position + 1;\n    callback(null, self.currentChunk.getc());\n  }\n}\n\ndefine.classMethod('getc', {callback: true, promise:true});\n\n/**\n * Writes a string to the file with a newline character appended at the end if\n * the given string does not have one.\n *\n * @method\n * @param {string} string the string to write.\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.puts = function(string, callback) {\n  var self = this;\n  var finalString = string.match(/\\n$/) == null ? string + \"\\n\" : string;\n  // We provided a callback leg\n  if(typeof callback == 'function') return this.write(finalString, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    self.write(finalString, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n}\n\ndefine.classMethod('puts', {callback: true, promise:true});\n\n/**\n * Return a modified Readable stream including a possible transform method.\n *\n * @method\n * @return {GridStoreStream}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.stream = function() {\n  return new GridStoreStream(this);\n}\n\ndefine.classMethod('stream', {callback: false, promise:false, returns: [GridStoreStream]});\n\n/**\n * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\".\n *\n * @method\n * @param {(string|Buffer)} data the data to write.\n * @param {boolean} [close] closes this file after writing if set to true.\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.write = function write(data, close, callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return _writeNormal(this, data, close, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    _writeNormal(self, data, close, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n}\n\ndefine.classMethod('write', {callback: true, promise:true});\n\n/**\n * Handles the destroy part of a stream\n *\n * @method\n * @result {null}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.destroy = function destroy() {\n  // close and do not emit any more events. queued data is not sent.\n  if(!this.writable) return;\n  this.readable = false;\n  if(this.writable) {\n    this.writable = false;\n    this._q.length = 0;\n    this.emit('close');\n  }\n}\n\ndefine.classMethod('destroy', {callback: false, promise:false});\n\n/**\n * Stores a file from the file system to the GridFS database.\n *\n * @method\n * @param {(string|Buffer|FileHandle)} file the file to store.\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.writeFile = function (file, callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return writeFile(self, file, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    writeFile(self, file, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar writeFile = function(self, file, callback) {\n  if (typeof file === 'string') {\n    fs.open(file, 'r', function (err, fd) {\n      if(err) return callback(err);\n      self.writeFile(fd, callback);\n    });\n    return;\n  }\n\n  self.open(function (err, self) {\n    if(err) return callback(err, self);\n\n    fs.fstat(file, function (err, stats) {\n      if(err) return callback(err, self);\n\n      var offset = 0;\n      var index = 0;\n      var numberOfChunksLeft = Math.min(stats.size / self.chunkSize);\n\n      // Write a chunk\n      var writeChunk = function() {\n        fs.read(file, self.chunkSize, offset, 'binary', function(err, data, bytesRead) {\n          if(err) return callback(err, self);\n\n          offset = offset + bytesRead;\n\n          // Create a new chunk for the data\n          var chunk = new Chunk(self, {n:index++}, self.writeConcern);\n          chunk.write(data, function(err, chunk) {\n            if(err) return callback(err, self);\n\n            chunk.save({}, function(err, result) {\n              if(err) return callback(err, self);\n\n              self.position = self.position + data.length;\n\n              // Point to current chunk\n              self.currentChunk = chunk;\n\n              if(offset >= stats.size) {\n                fs.close(file);\n                self.close(function(err, result) {\n                  if(err) return callback(err, self);\n                  return callback(null, self);\n                });\n              } else {\n                return process.nextTick(writeChunk);\n              }\n            });\n          });\n        });\n      }\n\n      // Process the first write\n      process.nextTick(writeChunk);\n    });\n  });\n}\n\ndefine.classMethod('writeFile', {callback: true, promise:true});\n\n/**\n * Saves this file to the database. This will overwrite the old entry if it\n * already exists. This will work properly only if mode was initialized to\n * \"w\" or \"w+\".\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.close = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return close(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    close(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar close = function(self, callback) {\n  if(self.mode[0] == \"w\") {\n    // Set up options\n    var options = self.writeConcern;\n\n    if(self.currentChunk != null && self.currentChunk.position > 0) {\n      self.currentChunk.save({}, function(err, chunk) {\n        if(err && typeof callback == 'function') return callback(err);\n\n        self.collection(function(err, files) {\n          if(err && typeof callback == 'function') return callback(err);\n\n          // Build the mongo object\n          if(self.uploadDate != null) {\n            buildMongoObject(self, function(err, mongoObject) {\n              if(err) {\n                if(typeof callback == 'function') return callback(err); else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if(typeof callback == 'function')\n                  callback(err, mongoObject);\n              });\n            });\n          } else {\n            self.uploadDate = new Date();\n            buildMongoObject(self, function(err, mongoObject) {\n              if(err) {\n                if(typeof callback == 'function') return callback(err); else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if(typeof callback == 'function')\n                  callback(err, mongoObject);\n              });\n            });\n          }\n        });\n      });\n    } else {\n      self.collection(function(err, files) {\n        if(err && typeof callback == 'function') return callback(err);\n\n        self.uploadDate = new Date();\n        buildMongoObject(self, function(err, mongoObject) {\n          if(err) {\n            if(typeof callback == 'function') return callback(err); else throw err;\n          }\n\n          files.save(mongoObject, options, function(err) {\n            if(typeof callback == 'function')\n              callback(err, mongoObject);\n          });\n        });\n      });\n    }\n  } else if(self.mode[0] == \"r\") {\n    if(typeof callback == 'function')\n      callback(null, null);\n  } else {\n    if(typeof callback == 'function')\n      callback(MongoError.create({message: f(\"Illegal mode %s\", self.mode), driver:true}));\n  }\n}\n\ndefine.classMethod('close', {callback: true, promise:true});\n\n/**\n * The collection callback format.\n * @callback GridStore~collectionCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection from the command execution.\n */\n\n/**\n * Retrieve this file's chunks collection.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.chunkCollection = function(callback) {\n  if(typeof callback == 'function')\n    return this.db.collection((this.root + \".chunks\"), callback);\n  return this.db.collection((this.root + \".chunks\"));\n};\n\ndefine.classMethod('chunkCollection', {callback: true, promise:false, returns: [Collection]});\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.unlink = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return unlink(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    unlink(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar unlink = function(self, callback) {\n  deleteChunks(self, function(err) {\n    if(err!==null) {\n      err.message = \"at deleteChunks: \" + err.message;\n      return callback(err);\n    }\n\n    self.collection(function(err, collection) {\n      if(err!==null) {\n        err.message = \"at collection: \" + err.message;\n        return callback(err);\n      }\n\n      collection.remove({'_id':self.fileId}, self.writeConcern, function(err) {\n        callback(err, self);\n      });\n    });\n  });\n}\n\ndefine.classMethod('unlink', {callback: true, promise:true});\n\n/**\n * Retrieves the file collection associated with this object.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.collection = function(callback) {\n  if(typeof callback == 'function')\n    this.db.collection(this.root + \".files\", callback);\n  return this.db.collection(this.root + \".files\");\n};\n\ndefine.classMethod('collection', {callback: true, promise:false, returns: [Collection]});\n\n/**\n * The readlines callback format.\n * @callback GridStore~readlinesCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {string[]} strings The array of strings returned.\n */\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.readlines = function(separator, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  separator = args.length ? args.shift() : \"\\n\";\n  separator = separator || \"\\n\";\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return readlines(self, separator, callback);\n\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    readlines(self, separator, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar readlines = function(self, separator, callback) {\n  self.read(function(err, data) {\n    if(err) return callback(err);\n\n    var items = data.toString().split(separator);\n    items = items.length > 0 ? items.splice(0, items.length - 1) : [];\n    for(var i = 0; i < items.length; i++) {\n      items[i] = items[i] + separator;\n    }\n\n    callback(null, items);\n  });\n}\n\ndefine.classMethod('readlines', {callback: true, promise:true});\n\n/**\n * Deletes all the chunks of this file in the database if mode was set to \"w\" or\n * \"w+\" and resets the read/write head to the initial position.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.rewind = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return rewind(self, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    rewind(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar rewind = function(self, callback) {\n  if(self.currentChunk.chunkNumber != 0) {\n    if(self.mode[0] == \"w\") {\n      deleteChunks(self, function(err, gridStore) {\n        if(err) return callback(err);\n        self.currentChunk = new Chunk(self, {'n': 0}, self.writeConcern);\n        self.position = 0;\n        callback(null, self);\n      });\n    } else {\n      self.currentChunk(0, function(err, chunk) {\n        if(err) return callback(err);\n        self.currentChunk = chunk;\n        self.currentChunk.rewind();\n        self.position = 0;\n        callback(null, self);\n      });\n    }\n  } else {\n    self.currentChunk.rewind();\n    self.position = 0;\n    callback(null, self);\n  }\n}\n\ndefine.classMethod('rewind', {callback: true, promise:true});\n\n/**\n * The read callback format.\n * @callback GridStore~readCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Buffer} data The data read from the GridStore object\n */\n\n/**\n * Retrieves the contents of this file and advances the read/write head. Works with Buffers only.\n *\n * There are 3 signatures for this method:\n *\n * (callback)\n * (length, callback)\n * (length, buffer, callback)\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.read = function(length, buffer, callback) {\n  var self = this;\n\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  length = args.length ? args.shift() : null;\n  buffer = args.length ? args.shift() : null;\n  // We provided a callback leg\n  if(typeof callback == 'function') return read(self, length, buffer, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    read(self, length, buffer, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n}\n\nvar read = function(self, length, buffer, callback) {\n  // The data is a c-terminated string and thus the length - 1\n  var finalLength = length == null ? self.length - self.position : length;\n  var finalBuffer = buffer == null ? new Buffer(finalLength) : buffer;\n  // Add a index to buffer to keep track of writing position or apply current index\n  finalBuffer._index = buffer != null && buffer._index != null ? buffer._index : 0;\n\n  if((self.currentChunk.length() - self.currentChunk.position + finalBuffer._index) >= finalLength) {\n    var slice = self.currentChunk.readSlice(finalLength - finalBuffer._index);\n    // Copy content to final buffer\n    slice.copy(finalBuffer, finalBuffer._index);\n    // Update internal position\n    self.position = self.position + finalBuffer.length;\n    // Check if we don't have a file at all\n    if(finalLength == 0 && finalBuffer.length == 0) return callback(MongoError.create({message: \"File does not exist\", driver:true}), null);\n    // Else return data\n    return callback(null, finalBuffer);\n  }\n\n  // Read the next chunk\n  var slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);\n  // Copy content to final buffer\n  slice.copy(finalBuffer, finalBuffer._index);\n  // Update index position\n  finalBuffer._index += slice.length;\n\n  // Load next chunk and read more\n  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n    if(err) return callback(err);\n\n    if(chunk.length() > 0) {\n      self.currentChunk = chunk;\n      self.read(length, finalBuffer, callback);\n    } else {\n      if(finalBuffer._index > 0) {\n        callback(null, finalBuffer)\n      } else {\n        callback(MongoError.create({message: \"no chunks found for file, possibly corrupt\", driver:true}), null);\n      }\n    }\n  });\n}\n\ndefine.classMethod('read', {callback: true, promise:true});\n\n/**\n * The tell callback format.\n * @callback GridStore~tellCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} position The current read position in the GridStore.\n */\n\n/**\n * Retrieves the position of the read/write head of this file.\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {GridStore~tellCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.tell = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if(typeof callback == 'function') return callback(null, this.position);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    resolve(self.position);\n  });\n};\n\ndefine.classMethod('tell', {callback: true, promise:true});\n\n/**\n * The tell callback format.\n * @callback GridStore~gridStoreCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The gridStore.\n */\n\n/**\n * Moves the read/write head to a new location.\n *\n * There are 3 signatures for this method\n *\n * Seek Location Modes\n *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n *  - **GridStore.IO_SEEK_END**, set the position from the end of the file.\n *\n * @method\n * @param {number} [position] the position to seek to\n * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes.\n * @param {GridStore~gridStoreCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.seek = function(position, seekLocation, callback) {\n  var self = this;\n\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  seekLocation = args.length ? args.shift() : null;\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return seek(self, position, seekLocation, callback);\n  // Return promise\n  return new self.promiseLibrary(function(resolve, reject) {\n    seek(self, position, seekLocation, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n}\n\nvar seek = function(self, position, seekLocation, callback) {\n  // Seek only supports read mode\n  if(self.mode != 'r') {\n    return callback(MongoError.create({message: \"seek is only supported for mode r\", driver:true}))\n  }\n\n  var seekLocationFinal = seekLocation == null ? GridStore.IO_SEEK_SET : seekLocation;\n  var finalPosition = position;\n  var targetPosition = 0;\n\n  // Calculate the position\n  if(seekLocationFinal == GridStore.IO_SEEK_CUR) {\n    targetPosition = self.position + finalPosition;\n  } else if(seekLocationFinal == GridStore.IO_SEEK_END) {\n    targetPosition = self.length + finalPosition;\n  } else {\n    targetPosition = finalPosition;\n  }\n\n  // Get the chunk\n  var newChunkNumber = Math.floor(targetPosition/self.chunkSize);\n  var seekChunk = function() {\n    nthChunk(self, newChunkNumber, function(err, chunk) {\n      if(err) return callback(err, null);\n      if(chunk == null) return callback(new Error('no chunk found'));\n\n      // Set the current chunk\n      self.currentChunk = chunk;\n      self.position = targetPosition;\n      self.currentChunk.position = (self.position % self.chunkSize);\n      callback(err, self);\n    });\n  };\n\n  seekChunk();\n}\n\ndefine.classMethod('seek', {callback: true, promise:true});\n\n/**\n * @ignore\n */\nvar _open = function(self, options, callback) {\n  var collection = self.collection();\n  // Create the query\n  var query = self.referenceBy == REFERENCE_BY_ID ? {_id:self.fileId} : {filename:self.filename};\n  query = null == self.fileId && self.filename == null ? null : query;\n  options.readPreference = self.readPreference;\n\n  // Fetch the chunks\n  if(query != null) {\n    collection.findOne(query, options, function(err, doc) {\n      if(err) return error(err);\n\n      // Check if the collection for the files exists otherwise prepare the new one\n      if(doc != null) {\n        self.fileId = doc._id;\n        // Prefer a new filename over the existing one if this is a write\n        self.filename = ((self.mode == 'r') || (self.filename == undefined)) ? doc.filename : self.filename;\n        self.contentType = doc.contentType;\n        self.internalChunkSize = doc.chunkSize;\n        self.uploadDate = doc.uploadDate;\n        self.aliases = doc.aliases;\n        self.length = doc.length;\n        self.metadata = doc.metadata;\n        self.internalMd5 = doc.md5;\n      } else if (self.mode != 'r') {\n        self.fileId = self.fileId == null ? new ObjectID() : self.fileId;\n        self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n        self.internalChunkSize = self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n        self.length = 0;\n      } else {\n        self.length = 0;\n        var txtId = self.fileId instanceof ObjectID ? self.fileId.toHexString() : self.fileId;\n        return error(MongoError.create({message: f(\"file with id %s not opened for writing\", (self.referenceBy == REFERENCE_BY_ID ? txtId : self.filename)), driver:true}), self);\n      }\n\n      // Process the mode of the object\n      if(self.mode == \"r\") {\n        nthChunk(self, 0, options, function(err, chunk) {\n          if(err) return error(err);\n          self.currentChunk = chunk;\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if(self.mode == \"w\" && doc) {\n        // Delete any existing chunks\n        deleteChunks(self, options, function(err, result) {\n          if(err) return error(err);\n          self.currentChunk = new Chunk(self, {'n':0}, self.writeConcern);\n          self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n          self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n          self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if(self.mode == \"w\") {\n        self.currentChunk = new Chunk(self, {'n':0}, self.writeConcern);\n        self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      } else if(self.mode == \"w+\") {\n        nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n          if(err) return error(err);\n          // Set the current chunk\n          self.currentChunk = chunk == null ? new Chunk(self, {'n':0}, self.writeConcern) : chunk;\n          self.currentChunk.position = self.currentChunk.data.length();\n          self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = self.length;\n          callback(null, self);\n        });\n      }\n    });\n  } else {\n    // Write only mode\n    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;\n    self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n    self.internalChunkSize = self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n    self.length = 0;\n\n    var collection2 = self.chunkCollection();\n    // No file exists set up write mode\n    if(self.mode == \"w\") {\n      // Delete any existing chunks\n      deleteChunks(self, options, function(err, result) {\n        if(err) return error(err);\n        self.currentChunk = new Chunk(self, {'n':0}, self.writeConcern);\n        self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      });\n    } else if(self.mode == \"w+\") {\n      nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n        if(err) return error(err);\n        // Set the current chunk\n        self.currentChunk = chunk == null ? new Chunk(self, {'n':0}, self.writeConcern) : chunk;\n        self.currentChunk.position = self.currentChunk.data.length();\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = self.length;\n        callback(null, self);\n      });\n    }\n  }\n\n  // only pass error to callback once\n  function error (err) {\n    if(error.err) return;\n    callback(error.err = err);\n  }\n};\n\n/**\n * @ignore\n */\nvar writeBuffer = function(self, buffer, close, callback) {\n  if(typeof close === \"function\") { callback = close; close = null; }\n  var finalClose = typeof close == 'boolean' ? close : false;\n\n  if(self.mode != \"w\") {\n    callback(MongoError.create({message: f(\"file with id %s not opened for writing\", (self.referenceBy == REFERENCE_BY_ID ? self.referenceBy : self.filename)), driver:true}), null);\n  } else {\n    if(self.currentChunk.position + buffer.length >= self.chunkSize) {\n      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left\n      // to a new chunk (recursively)\n      var previousChunkNumber = self.currentChunk.chunkNumber;\n      var leftOverDataSize = self.chunkSize - self.currentChunk.position;\n      var firstChunkData = buffer.slice(0, leftOverDataSize);\n      var leftOverData = buffer.slice(leftOverDataSize);\n      // A list of chunks to write out\n      var chunksToWrite = [self.currentChunk.write(firstChunkData)];\n      // If we have more data left than the chunk size let's keep writing new chunks\n      while(leftOverData.length >= self.chunkSize) {\n        // Create a new chunk and write to it\n        var newChunk = new Chunk(self, {'n': (previousChunkNumber + 1)}, self.writeConcern);\n        var firstChunkData = leftOverData.slice(0, self.chunkSize);\n        leftOverData = leftOverData.slice(self.chunkSize);\n        // Update chunk number\n        previousChunkNumber = previousChunkNumber + 1;\n        // Write data\n        newChunk.write(firstChunkData);\n        // Push chunk to save list\n        chunksToWrite.push(newChunk);\n      }\n\n      // Set current chunk with remaining data\n      self.currentChunk = new Chunk(self, {'n': (previousChunkNumber + 1)}, self.writeConcern);\n      // If we have left over data write it\n      if(leftOverData.length > 0) self.currentChunk.write(leftOverData);\n\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // Total number of chunks to write\n      var numberOfChunksToWrite = chunksToWrite.length;\n\n      for(var i = 0; i < chunksToWrite.length; i++) {\n        chunksToWrite[i].save({}, function(err, result) {\n          if(err) return callback(err);\n\n          numberOfChunksToWrite = numberOfChunksToWrite - 1;\n\n          if(numberOfChunksToWrite <= 0) {\n            // We care closing the file before returning\n            if(finalClose) {\n              return self.close(function(err, result) {\n                callback(err, self);\n              });\n            }\n\n            // Return normally\n            return callback(null, self);\n          }\n        });\n      }\n    } else {\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // We have less data than the chunk size just write it and callback\n      self.currentChunk.write(buffer);\n      // We care closing the file before returning\n      if(finalClose) {\n        return self.close(function(err, result) {\n          callback(err, self);\n        });\n      }\n      // Return normally\n      return callback(null, self);\n    }\n  }\n};\n\n/**\n * Creates a mongoDB object representation of this object.\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this file\n *          'filename' : , // {string} name for this file\n *          'contentType' : , // {string} mime type for this file\n *          'length' : , // {number} size of this file?\n *          'chunksize' : , // {number} chunk size used by this file\n *          'uploadDate' : , // {Date}\n *          'aliases' : , // {array of string}\n *          'metadata' : , // {string}\n *        }\n *        </code></pre>\n *\n * @ignore\n */\nvar buildMongoObject = function(self, callback) {\n  // Calcuate the length\n  var mongoObject = {\n    '_id': self.fileId,\n    'filename': self.filename,\n    'contentType': self.contentType,\n    'length': self.position ? self.position : 0,\n    'chunkSize': self.chunkSize,\n    'uploadDate': self.uploadDate,\n    'aliases': self.aliases,\n    'metadata': self.metadata\n  };\n\n  var md5Command = {filemd5:self.fileId, root:self.root};\n  self.db.command(md5Command, function(err, results) {\n    if(err) return callback(err);\n\n    mongoObject.md5 = results.md5;\n    callback(null, mongoObject);\n  });\n};\n\n/**\n * Gets the nth chunk of this file.\n * @ignore\n */\nvar nthChunk = function(self, chunkNumber, options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n  options.readPreference = self.readPreference;\n  // Get the nth chunk\n  self.chunkCollection().findOne({'files_id':self.fileId, 'n':chunkNumber}, options, function(err, chunk) {\n    if(err) return callback(err);\n\n    var finalChunk = chunk == null ? {} : chunk;\n    callback(null, new Chunk(self, finalChunk, self.writeConcern));\n  });\n};\n\n/**\n * @ignore\n */\nvar lastChunkNumber = function(self) {\n  return Math.floor((self.length ? self.length - 1 : 0)/self.chunkSize);\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @ignore\n */\nvar deleteChunks = function(self, options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n\n  if(self.fileId != null) {\n    self.chunkCollection().remove({'files_id':self.fileId}, options, function(err, result) {\n      if(err) return callback(err, false);\n      callback(null, true);\n    });\n  } else {\n    callback(null, true);\n  }\n};\n\n/**\n* The collection to be used for holding the files and chunks collection.\n*\n* @classconstant DEFAULT_ROOT_COLLECTION\n**/\nGridStore.DEFAULT_ROOT_COLLECTION = 'fs';\n\n/**\n* Default file mime type\n*\n* @classconstant DEFAULT_CONTENT_TYPE\n**/\nGridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';\n\n/**\n* Seek mode where the given length is absolute.\n*\n* @classconstant IO_SEEK_SET\n**/\nGridStore.IO_SEEK_SET = 0;\n\n/**\n* Seek mode where the given length is an offset to the current read/write head.\n*\n* @classconstant IO_SEEK_CUR\n**/\nGridStore.IO_SEEK_CUR = 1;\n\n/**\n* Seek mode where the given length is an offset to the end of the file.\n*\n* @classconstant IO_SEEK_END\n**/\nGridStore.IO_SEEK_END = 2;\n\n/**\n * Checks if a file exists in the database.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file to look for.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.exist = function(db, fileIdObject, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return exists(db, fileIdObject, rootCollection, options, callback);\n  // Return promise\n  return new promiseLibrary(function(resolve, reject) {\n    exists(db, fileIdObject, rootCollection, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar exists = function(db, fileIdObject, rootCollection, options, callback) {\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Fetch collection\n  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  db.collection(rootCollectionFinal + \".files\", function(err, collection) {\n    if(err) return callback(err);\n\n    // Build query\n    var query = (typeof fileIdObject == 'string' || Object.prototype.toString.call(fileIdObject) == '[object RegExp]' )\n      ? {'filename':fileIdObject}\n      : {'_id':fileIdObject};    // Attempt to locate file\n\n    // We have a specific query\n    if(fileIdObject != null\n      && typeof fileIdObject == 'object'\n      && Object.prototype.toString.call(fileIdObject) != '[object RegExp]') {\n      query = fileIdObject;\n    }\n\n    // Check if the entry exists\n    collection.findOne(query, {readPreference:readPreference}, function(err, item) {\n      if(err) return callback(err);\n      callback(null, item == null ? false : true);\n    });\n  });\n}\n\ndefine.staticMethod('exist', {callback: true, promise:true});\n\n/**\n * Gets the list of files stored in the GridFS.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.list = function(db, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return list(db, rootCollection, options, callback);\n  // Return promise\n  return new promiseLibrary(function(resolve, reject) {\n    list(db, rootCollection, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar list = function(db, rootCollection, options, callback) {\n  // Ensure we have correct values\n  if(rootCollection != null && typeof rootCollection == 'object') {\n    options = rootCollection;\n    rootCollection = null;\n  }\n\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Check if we are returning by id not filename\n  var byId = options['id'] != null ? options['id'] : false;\n  // Fetch item\n  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  var items = [];\n  db.collection((rootCollectionFinal + \".files\"), function(err, collection) {\n    if(err) return callback(err);\n\n    collection.find({}, {readPreference:readPreference}, function(err, cursor) {\n      if(err) return callback(err);\n\n      cursor.each(function(err, item) {\n        if(item != null) {\n          items.push(byId ? item._id : item.filename);\n        } else {\n          callback(err, items);\n        }\n      });\n    });\n  });\n}\n\ndefine.staticMethod('list', {callback: true, promise:true});\n\n/**\n * Reads the contents of a file.\n *\n * This method has the following signatures\n *\n * (db, name, callback)\n * (db, name, length, callback)\n * (db, name, length, offset, callback)\n * (db, name, length, offset, options, callback)\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file.\n * @param {number} [length] The size of data to read.\n * @param {number} [offset] The offset from the head of the file of which to start reading from.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.read = function(db, name, length, offset, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  length = args.length ? args.shift() : null;\n  offset = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options ? options.promiseLibrary : null;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return readStatic(db, name, length, offset, options, callback);\n  // Return promise\n  return new promiseLibrary(function(resolve, reject) {\n    readStatic(db, name, length, offset, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar readStatic = function(db, name, length, offset, options, callback) {\n  new GridStore(db, name, \"r\", options).open(function(err, gridStore) {\n    if(err) return callback(err);\n    // Make sure we are not reading out of bounds\n    if(offset && offset >= gridStore.length) return callback(\"offset larger than size of file\", null);\n    if(length && length > gridStore.length) return callback(\"length is larger than the size of the file\", null);\n    if(offset && length && (offset + length) > gridStore.length) return callback(\"offset and length is larger than the size of the file\", null);\n\n    if(offset != null) {\n      gridStore.seek(offset, function(err, gridStore) {\n        if(err) return callback(err);\n        gridStore.read(length, callback);\n      });\n    } else {\n      gridStore.read(length, callback);\n    }\n  });\n}\n\ndefine.staticMethod('read', {callback: true, promise:true});\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {(String|object)} name the name of the file.\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.readlines = function(db, name, separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  separator = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options ? options.promiseLibrary : null;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return readlinesStatic(db, name, separator, options, callback);\n  // Return promise\n  return new promiseLibrary(function(resolve, reject) {\n    readlinesStatic(db, name, separator, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar readlinesStatic = function(db, name, separator, options, callback) {\n  var finalSeperator = separator == null ? \"\\n\" : separator;\n  new GridStore(db, name, \"r\", options).open(function(err, gridStore) {\n    if(err) return callback(err);\n    gridStore.readlines(finalSeperator, callback);\n  });\n}\n\ndefine.staticMethod('readlines', {callback: true, promise:true});\n\n/**\n * Deletes the chunks and metadata information of a file from GridFS.\n *\n * @method\n * @static\n * @param {Db} db The database to query.\n * @param {(string|array)} names The name/names of the files to delete.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.unlink = function(db, names, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // We provided a callback leg\n  if(typeof callback == 'function') return unlinkStatic(self, db, names, options, callback);\n\n  // Return promise\n  return new promiseLibrary(function(resolve, reject) {\n    unlinkStatic(self, db, names, options, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    })\n  });\n};\n\nvar unlinkStatic = function(self, db, names, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(db, options);\n\n  // List of names\n  if(names.constructor == Array) {\n    var tc = 0;\n    for(var i = 0; i < names.length; i++) {\n      ++tc;\n      GridStore.unlink(db, names[i], options, function(result) {\n        if(--tc == 0) {\n            callback(null, self);\n        }\n      });\n    }\n  } else {\n    new GridStore(db, names, \"w\", options).open(function(err, gridStore) {\n      if(err) return callback(err);\n      deleteChunks(gridStore, function(err, result) {\n        if(err) return callback(err);\n        gridStore.collection(function(err, collection) {\n          if(err) return callback(err);\n          collection.remove({'_id':gridStore.fileId}, writeConcern, function(err, result) {\n            callback(err, self);\n          });\n        });\n      });\n    });\n  }\n}\n\ndefine.staticMethod('unlink', {callback: true, promise:true});\n\n/**\n *  @ignore\n */\nvar _writeNormal = function(self, data, close, callback) {\n  // If we have a buffer write it using the writeBuffer method\n  if(Buffer.isBuffer(data)) {\n    return writeBuffer(self, data, close, callback);\n  } else {\n    return writeBuffer(self, new Buffer(data, 'binary'), close, callback);\n  }\n}\n\n/**\n * @ignore\n */\nvar _setWriteConcernHash = function(options) {\n  var finalOptions = {};\n  if(options.w != null) finalOptions.w = options.w;\n  if(options.journal == true) finalOptions.j = options.journal;\n  if(options.j == true) finalOptions.j = options.j;\n  if(options.fsync == true) finalOptions.fsync = options.fsync;\n  if(options.wtimeout != null) finalOptions.wtimeout = options.wtimeout;\n  return finalOptions;\n}\n\n/**\n * @ignore\n */\nvar _getWriteConcern = function(self, options) {\n  // Final options\n  var finalOptions = {w:1};\n  options = options || {};\n\n  // Local options verification\n  if(options.w != null || typeof options.j == 'boolean' || typeof options.journal == 'boolean' || typeof options.fsync == 'boolean') {\n    finalOptions = _setWriteConcernHash(options);\n  } else if(options.safe != null && typeof options.safe == 'object') {\n    finalOptions = _setWriteConcernHash(options.safe);\n  } else if(typeof options.safe == \"boolean\") {\n    finalOptions = {w: (options.safe ? 1 : 0)};\n  } else if(self.options.w != null || typeof self.options.j == 'boolean' || typeof self.options.journal == 'boolean' || typeof self.options.fsync == 'boolean') {\n    finalOptions = _setWriteConcernHash(self.options);\n  } else if(self.safe && (self.safe.w != null || typeof self.safe.j == 'boolean' || typeof self.safe.journal == 'boolean' || typeof self.safe.fsync == 'boolean')) {\n    finalOptions = _setWriteConcernHash(self.safe);\n  } else if(typeof self.safe == \"boolean\") {\n    finalOptions = {w: (self.safe ? 1 : 0)};\n  }\n\n  // Ensure we don't have an invalid combination of write concerns\n  if(finalOptions.w < 1\n    && (finalOptions.journal == true || finalOptions.j == true || finalOptions.fsync == true)) throw MongoError.create({message: \"No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true\", driver:true});\n\n  // Return the options\n  return finalOptions;\n}\n\n/**\n * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @extends external:Duplex\n * @return {GridStoreStream} a GridStoreStream instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStoreStream = function(gs) {\n  var self = this;\n  // Initialize the duplex stream\n  Duplex.call(this);\n\n  // Get the gridstore\n  this.gs = gs;\n\n  // End called\n  this.endCalled = false;\n\n  // If we have a seek\n  this.totalBytesToRead = this.gs.length - this.gs.position;\n  this.seekPosition = this.gs.position;\n}\n\n//\n// Inherit duplex\ninherits(GridStoreStream, Duplex);\n\nGridStoreStream.prototype._pipe = GridStoreStream.prototype.pipe;\n\n// Set up override\nGridStoreStream.prototype.pipe = function(destination) {\n  var self = this;\n\n  // Only open gridstore if not already open\n  if(!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      if(err) return self.emit('error', err);\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      self._pipe.apply(self, [destination]);\n    });\n  } else {\n    self.totalBytesToRead = self.gs.length - self.gs.position;\n    self._pipe.apply(self, [destination]);\n  }\n\n  return destination;\n}\n\n// Called by stream\nGridStoreStream.prototype._read = function(n) {\n  var self = this;\n\n  var read = function() {\n    // Read data\n    self.gs.read(length, function(err, buffer) {\n      if(err && !self.endCalled) return self.emit('error', err);\n\n      // Stream is closed\n      if(self.endCalled || buffer == null) return self.push(null);\n      // Remove bytes read\n      if(buffer.length <= self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer.length;\n        self.push(buffer);\n      } else if(buffer.length > self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer._index;\n        self.push(buffer.slice(0, buffer._index));\n      }\n\n      // Finished reading\n      if(self.totalBytesToRead <= 0) {\n        self.endCalled = true;\n      }\n    });\n  }\n\n  // Set read length\n  var length = self.gs.length < self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;\n  if(!self.gs.isOpen) {\n    self.gs.open(function(err, gs) {\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      if(err) return self.emit('error', err);\n      read();\n    });\n  } else {\n    read();\n  }\n}\n\nGridStoreStream.prototype.destroy = function() {\n  this.pause();\n  this.endCalled = true;\n  this.gs.close();\n  this.emit('end');\n}\n\nGridStoreStream.prototype.write = function(chunk, encoding, callback) {\n  var self = this;\n  if(self.endCalled) return self.emit('error', MongoError.create({message: 'attempting to write to stream after end called', driver:true}))\n  // Do we have to open the gridstore\n  if(!self.gs.isOpen) {\n    self.gs.open(function() {\n      self.gs.isOpen = true;\n      self.gs.write(chunk, function() {\n        process.nextTick(function() {\n          self.emit('drain');\n        });\n      });\n    });\n    return false;\n  } else {\n    self.gs.write(chunk, function() {\n      self.emit('drain');\n    });\n    return true;\n  }\n}\n\nGridStoreStream.prototype.end = function(chunk, encoding, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  if(typeof callback != 'function') args.push(callback);\n  chunk = args.length ? args.shift() : null;\n  encoding = args.length ? args.shift() : null;\n  self.endCalled = true;\n\n  if(chunk) {\n    self.gs.write(chunk, function() {\n      self.gs.close(function() {\n        if(typeof callback == 'function') callback();\n        self.emit('end')\n      });\n    });\n  }\n\n  self.gs.close(function() {\n    if(typeof callback == 'function') callback();\n    self.emit('end')\n  });\n}\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Duplex#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Duplex#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Duplex#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Duplex#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Duplex#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Duplex#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Duplex#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Duplex#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\n/**\n * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled.\n * @function external:Duplex#write\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {boolean}\n */\n\n/**\n * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event.\n * @function external:Duplex#end\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {null}\n */\n\n/**\n * GridStoreStream stream data event, fired for each document in the cursor.\n *\n * @event GridStoreStream#data\n * @type {object}\n */\n\n/**\n * GridStoreStream stream end event\n *\n * @event GridStoreStream#end\n * @type {null}\n */\n\n/**\n * GridStoreStream stream close event\n *\n * @event GridStoreStream#close\n * @type {null}\n */\n\n/**\n * GridStoreStream stream readable event\n *\n * @event GridStoreStream#readable\n * @type {null}\n */\n\n/**\n * GridStoreStream stream drain event\n *\n * @event GridStoreStream#drain\n * @type {null}\n */\n\n/**\n * GridStoreStream stream finish event\n *\n * @event GridStoreStream#finish\n * @type {null}\n */\n\n/**\n * GridStoreStream stream pipe event\n *\n * @event GridStoreStream#pipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream unpipe event\n *\n * @event GridStoreStream#unpipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream error event\n *\n * @event GridStoreStream#error\n * @type {null}\n */\n\n/**\n * @ignore\n */\nmodule.exports = GridStore;\n"]}