{"version":3,"sources":["collection.js"],"names":[],"mappings":"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","file":"collection-compiled.js","sourcesContent":["/*!\n * mongoskin - collection.js\n *\n * Copyright(c) 2011 - 2012 kissjs.org\n * Copyright(c) 2012 fengmk2 <fengmk2@gmail.com>\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar __slice = Array.prototype.slice;\nvar Collection = require('mongodb').Collection;\nvar SkinCursor = require('./cursor').SkinCursor;\nvar helper = require('./helper');\nvar utils = require('./utils');\n\n/**\n * Constructor\n */\nvar SkinCollection = exports.SkinCollection = utils.makeSkinClass(Collection);\n\n/**\n * bind extend functions to collection\n *\n * e.g.\n *\n * db.bind('article').bind({\n *   getPostByAuthor: function(id, callback) {\n *      this.findOne({author_id: id}, callback);\n *   }\n * });\n *\n */\nSkinCollection.prototype.bind = function(extendObject) {\n  for(var key in extendObject) {\n    if(typeof extendObject[key] == 'function') {\n      this[key] = extendObject[key].bind(this);\n    } else {\n      this[key] = extendObject[key];\n    }\n  }\n}\n\nSkinCollection.prototype._open = function(callback) {\n  var collection_args = this._collection_args.concat([callback]);\n  this._skin_db.open(function(err, db) {\n      if(err) return callback(err);\n      db.collection.apply(db, collection_args);\n  });\n}\n\n/*\n * find is a special method, because it could return a SkinCursor instance\n */\nSkinCollection.prototype._find = SkinCollection.prototype.find;\n\n/**\n * same args as find, but use Array as callback result but not use Cursor\n *\n * findItems(args, function (err, items) {});\n *\n * same as\n *\n * find(args).toArray(function (err, items) {});\n * \n * or using `mongodb.collection.find()`\n *\n * find(args, function (err, cursor) {\n *   cursor.toArray(function (err, items) {\n *   });\n * });\n *\n * @param {Object} [query]\n * @param {Object} [options]\n * @param {Function(err, docs)} callback\n * @return {SkinCollection} this\n * @api public\n */\nSkinCollection.prototype.findItems = function (query, options, callback) {\n  var args = __slice.call(arguments);\n  var fn = args[args.length - 1];\n  args[args.length - 1] = function (err, cursor) {\n    if (err) {\n      return fn(err);\n    }\n    cursor.toArray(fn);\n  };\n  this.find.apply(this, args);\n  return this;\n};\n\n/**\n * find and cursor.each(fn).\n * \n * @param {Object} [query]\n * @param {Object} [options]\n * @param {Function(err, item)} eachCallback\n * @return {SkinCollection} this\n * @api public\n */\nSkinCollection.prototype.findEach = function (query, options, eachCallback) {\n  var args = __slice.call(arguments);\n  var fn = args[args.length - 1];\n  args[args.length - 1] = function (err, cursor) {\n    if (err) {\n      return fn(err);\n    }\n    cursor.each(fn);\n  };\n  this.find.apply(this, args);\n  return this;\n};\n\n/**\n * Operate by object.`_id`\n * \n * @param {String} methodName\n * @param {String|ObjectID|Number} id\n * @param {Arguments|Array} args\n * @return {SkinCollection} this\n * @api private\n */\nSkinCollection.prototype._operateById = function (methodName, id, args) {\n  args = __slice.call(args);\n  args[0] = {_id: helper.toObjectID(id)};\n  this[methodName].apply(this, args);\n  return this;\n};\n\n/**\n * Find one object by _id.\n * \n * @param {String|ObjectID|Number} id, doc primary key `_id`\n * @param {Function(err, doc)} callback\n * @return {SkinCollection} this\n * @api public\n */\nSkinCollection.prototype.findById = function (id, callback) {\n  return this._operateById('findOne', id, arguments);\n};\n\n/**\n * Update doc by _id.\n * @param {String|ObjectID|Number} id, doc primary key `_id`\n * @param {Object} doc\n * @param {Function(err)} callback\n * @return {SkinCollection} this\n * @api public\n */\nSkinCollection.prototype.updateById = function (id, doc, callback) {\n  return this._operateById('update', id, arguments);\n};\n\n/**\n * Remove doc by _id.\n * @param {String|ObjectID|Number} id, doc primary key `_id`\n * @param {Function(err)} callback\n * @return {SkinCollection} this\n * @api public\n */\nSkinCollection.prototype.removeById = function (id, callback) {\n  return this._operateById('remove', id, arguments);\n};\n\n/**\n * Creates a cursor for a query that can be used to iterate over results from MongoDB.\n * \n * @param {Object} query\n * @param {Object} options\n * @param {Function(err, docs)} callback\n * @return {SkinCursor|SkinCollection} if last argument is not a function, then returns a SkinCursor, \n *   otherise return this\n * @api public\n */\nSkinCollection.prototype.find = function (query, options, callback) {\n  var args = __slice.call(arguments);\n  if(this.isOpen()) {\n    return this._native.find.apply(this._native, args);\n  }\n  if (args.length > 0 && typeof args[args.length - 1] === 'function') {\n    this._find.apply(this, args);\n    return this;\n  } else {\n    var cursor = new SkinCursor();\n    cursor._skin_collection = this;\n    cursor._find_args = args;\n    return cursor;\n  }\n};\n"]}