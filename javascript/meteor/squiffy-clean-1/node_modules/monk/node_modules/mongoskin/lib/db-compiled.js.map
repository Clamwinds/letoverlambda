{"version":3,"sources":["db.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY;;;;;;;AAAC,AAOb,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;AACpB,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACtC,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;AAC7C,IAAI,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC;AAC5D,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;AAC1C,IAAI,aAAa,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,aAAa;;;;;AAAC,AAK1D,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;;AAE5D,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,QAAQ,EAAE;;AAE1C,MAAG,IAAI,CAAC,OAAO,EAAE;AACf,QAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GAC7B,MAAM,IAAG,IAAI,CAAC,aAAa,EAAE;AAC5B,QAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC/C,eAAW,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;GAC9C;CACF;;;;;;;;;;;AAAA,AAWD,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC/D,MAAG,CAAC,QAAQ,IAAI,OAAO,OAAO,IAAI,UAAU,EAAE;AAC5C,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,SAAS,CAAC;GACrB;;;;;;;AAAA,AAOD,MAAI,UAAU,GAAG,IAAI,cAAc,EAAE,CAAC;AACtC,YAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B,YAAU,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC9C,MAAI,QAAQ,EAAE;AACZ,cAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GAC3B;AACD,SAAO,UAAU,CAAC;CACnB;;;;;;;AAAC,AAOF,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,IAAI,EAAE,OAAO,EAAE;AAC/C,SAAO,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CACpD,CAAA;;AAED,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACnC,MAAI,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;AAChC,WAAS,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,CAAC;AACnC,SAAO,SAAS,CAAC;CAClB,CAAA;;AAED,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE;AACxC,MAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC9B,UAAQ,CAAC,eAAe,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1C,SAAO,QAAQ,CAAC;CACjB,CAAA;;AAED,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;AACvC,MAAI,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;AACxC,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjD,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,eAAa,CAAC,eAAe,GAAG,IAAI,CAAC;AACrC,SAAO,aAAa,CAAC;CACtB,CAAA","file":"db-compiled.js","sourcesContent":["/*!\n * mongoskin - db.js\n *\n * Copyright(c) 2011 - 2012 kissjs.org\n * Copyright(c) 2012 fengmk2 <fengmk2@gmail.com>\n * MIT Licensed\n */\n\n\"use strict\";\n\n/**\n * Module dependencies.\n * TODO db.gridfs()\n */\n\nvar mongodb = require('mongodb');\nvar Db = mongodb.Db;\nvar MongoClient = mongodb.MongoClient;\nvar utils = require('./utils');\nvar SkinAdmin = require('./admin').SkinAdmin;\nvar SkinCollection = require('./collection').SkinCollection;\nvar SkinGrid = require('./grid').SkinGrid;\nvar SkinGridStore = require('./grid_store').SkinGridStore;\n\n/**\n * Constructor\n */\nvar SkinDb = exports.SkinDb = utils.makeSkinClass(Db, true);\n\nSkinDb.prototype._open = function(callback) {\n  // TODO authenticate support\n  if(this._native) {\n    this._native.open(callback);\n  } else if(this._connect_args) {\n    var args = this._connect_args.concat(callback);\n    MongoClient.connect.apply(MongoClient, args);\n  }\n}\n\n/**\n * Create or retrieval skin collection\n *\n * @param {String} name, the collection name.\n * @param {Object} [options] collection options.\n * @param {Function} [callback]\n * @return {SkinCollection}\n * @api public\n */\nSkinDb.prototype.collection = function (name, options, callback) {\n  if(!callback && typeof options == 'function') {\n    callback = options;\n    options = undefined;\n  }\n  // Ooops, no extended mthods like findById etc.\n  // if(this.isOpen() && (!options || !options.strict) && !callback) {\n  //   // mongodb now support collection without callback\n  //   // see: http://mongodb.github.io/node-mongodb-native/api-generated/db.html#collection\n  //   return this._native.collection(name, options);\n  // }\n  var collection = new SkinCollection();\n  collection._skin_db = this;\n  collection._collection_args = [name, options];\n  if (callback) {\n    collection.open(callback);\n  }\n  return collection;\n};\n\n/**\n * @param {String} name the collection name\n * @param {Object} [options] collection options\n * @return {SkinCollection} collection\n */\nSkinDb.prototype.bind = function (name, options) {\n  return this[name] = this.collection(name, options);\n}\n\nSkinDb.prototype.admin = function () {\n  var skinAdmin = new SkinAdmin();\n  skinAdmin._construct_args = [this];\n  return skinAdmin;\n}\n\nSkinDb.prototype.grid = function (fsName) {\n  var skinGrid = new SkinGrid();\n  skinGrid._construct_args = [this, fsName];\n  return skinGrid;\n}\n\nSkinDb.prototype.gridStore = function () {\n  var skinGridStore = new SkinGridStore();\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift(this);\n  skinGridStore._construct_args = args;\n  return skinGridStore;\n}\n"]}