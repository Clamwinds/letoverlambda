{"version":3,"sources":["add-braces"],"names":[],"mappings":";;AAEA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACzB,IAAI,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC;AACzB,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;;AAEvB,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,QAAQ,EAAE;AAC1C,UAAM,CAAC,KAAK,CAAC,GAAG,EAAE;AACd,wBAAgB,EAAE,0BAAS,IAAI,EAAE;AAC7B,gBAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,gBAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAEvC,gBAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;AACzB,gBAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AAC3B,oBAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;aAC7B;;AAED,gBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACvB;;AAED,2BAAmB,EAAE,SAAS;AAC9B,yBAAiB,EAAE,SAAS;AAC5B,2BAAmB,EAAE,SAAS;KACjC,CAAC,CAAC;;AAEH,YAAQ,CAAC,GAAG,CAAC,CAAC;CACjB,CAAC,CAAC;;AAEH,SAAS,SAAS,CAAC,IAAI,EAAE;AACrB,QAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,QAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,QAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;CACvB;;AAED,SAAS,GAAG,CAAC,MAAM,EAAE;AACjB,QAAI,MAAM,EAAE;AACR,YAAI,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACjC,kBAAM,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SACvC;KACJ;;AAED,WAAO,MAAM,CAAC;CACjB","file":"add-braces-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar recast = require(\"recast\");\nvar types = recast.types;\nvar n = types.namedTypes;\nvar b = types.builders;\n\nrequire(\"recast\").run(function(ast, callback) {\n    recast.visit(ast, {\n        visitIfStatement: function(path) {\n            var stmt = path.node;\n            stmt.consequent = fix(stmt.consequent);\n\n            var alt = stmt.alternate;\n            if (!n.IfStatement.check(alt)) {\n                stmt.alternate = fix(alt);\n            }\n\n            this.traverse(path);\n        },\n\n        visitWhileStatement: visitLoop,\n        visitForStatement: visitLoop,\n        visitForInStatement: visitLoop\n    });\n\n    callback(ast);\n});\n\nfunction visitLoop(path) {\n    var loop = path.node;\n    loop.body = fix(loop.body);\n    this.traverse(path);\n}\n\nfunction fix(clause) {\n    if (clause) {\n        if (!n.BlockStatement.check(clause)) {\n            clause = b.blockStatement([clause]);\n        }\n    }\n\n    return clause;\n}\n"]}