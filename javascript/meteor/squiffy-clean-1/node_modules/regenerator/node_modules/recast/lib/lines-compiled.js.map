{"version":3,"sources":["lines.js"],"names":[],"mappings":"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","file":"lines-compiled.js","sourcesContent":["var assert = require(\"assert\");\nvar sourceMap = require(\"source-map\");\nvar normalizeOptions = require(\"./options\").normalize;\nvar secretKey = require(\"private\").makeUniqueKey();\nvar types = require(\"./types\");\nvar isString = types.builtInTypes.string;\nvar comparePos = require(\"./util\").comparePos;\nvar Mapping = require(\"./mapping\");\n\n// Goals:\n// 1. Minimize new string creation.\n// 2. Keep (de)identation O(lines) time.\n// 3. Permit negative indentations.\n// 4. Enforce immutability.\n// 5. No newline characters.\n\nfunction getSecret(lines) {\n    return lines[secretKey];\n}\n\nfunction Lines(infos, sourceFileName) {\n    assert.ok(this instanceof Lines);\n    assert.ok(infos.length > 0);\n\n    if (sourceFileName) {\n        isString.assert(sourceFileName);\n    } else {\n        sourceFileName = null;\n    }\n\n    Object.defineProperty(this, secretKey, {\n        value: {\n            infos: infos,\n            mappings: [],\n            name: sourceFileName,\n            cachedSourceMap: null\n        }\n    });\n\n    if (sourceFileName) {\n        getSecret(this).mappings.push(new Mapping(this, {\n            start: this.firstPos(),\n            end: this.lastPos()\n        }));\n    }\n}\n\n// Exposed for instanceof checks. The fromString function should be used\n// to create new Lines objects.\nexports.Lines = Lines;\nvar Lp = Lines.prototype;\n\n// These properties used to be assigned to each new object in the Lines\n// constructor, but we can more efficiently stuff them into the secret and\n// let these lazy accessors compute their values on-the-fly.\nObject.defineProperties(Lp, {\n    length: {\n        get: function() {\n            return getSecret(this).infos.length;\n        }\n    },\n\n    name: {\n        get: function() {\n            return getSecret(this).name;\n        }\n    }\n});\n\nfunction copyLineInfo(info) {\n    return {\n        line: info.line,\n        indent: info.indent,\n        sliceStart: info.sliceStart,\n        sliceEnd: info.sliceEnd\n    };\n}\n\nvar fromStringCache = {};\nvar hasOwn = fromStringCache.hasOwnProperty;\nvar maxCacheKeyLen = 10;\n\nfunction countSpaces(spaces, tabWidth) {\n    var count = 0;\n    var len = spaces.length;\n\n    for (var i = 0; i < len; ++i) {\n        switch (spaces.charCodeAt(i)) {\n        case 9: // '\\t'\n            assert.strictEqual(typeof tabWidth, \"number\");\n            assert.ok(tabWidth > 0);\n\n            var next = Math.ceil(count / tabWidth) * tabWidth;\n            if (next === count) {\n                count += tabWidth;\n            } else {\n                count = next;\n            }\n\n            break;\n\n        case 11: // '\\v'\n        case 12: // '\\f'\n        case 13: // '\\r'\n        case 0xfeff: // zero-width non-breaking space\n            // These characters contribute nothing to indentation.\n            break;\n\n        case 32: // ' '\n        default: // Treat all other whitespace like ' '.\n            count += 1;\n            break;\n        }\n    }\n\n    return count;\n}\nexports.countSpaces = countSpaces;\n\nvar leadingSpaceExp = /^\\s*/;\n\n// As specified here: http://www.ecma-international.org/ecma-262/6.0/#sec-line-terminators\nvar lineTerminatorSeqExp =\n    /\\u000D\\u000A|\\u000D(?!\\u000A)|\\u000A|\\u2028|\\u2029/;\n\n/**\n * @param {Object} options - Options object that configures printing.\n */\nfunction fromString(string, options) {\n    if (string instanceof Lines)\n        return string;\n\n    string += \"\";\n\n    var tabWidth = options && options.tabWidth;\n    var tabless = string.indexOf(\"\\t\") < 0;\n    var cacheable = !options && tabless && (string.length <= maxCacheKeyLen);\n\n    assert.ok(tabWidth || tabless, \"No tab width specified but encountered tabs in string\\n\" + string);\n\n    if (cacheable && hasOwn.call(fromStringCache, string))\n        return fromStringCache[string];\n\n    var lines = new Lines(string.split(lineTerminatorSeqExp).map(function(line) {\n        var spaces = leadingSpaceExp.exec(line)[0];\n        return {\n            line: line,\n            indent: countSpaces(spaces, tabWidth),\n            sliceStart: spaces.length,\n            sliceEnd: line.length\n        };\n    }), normalizeOptions(options).sourceFileName);\n\n    if (cacheable)\n        fromStringCache[string] = lines;\n\n    return lines;\n}\nexports.fromString = fromString;\n\nfunction isOnlyWhitespace(string) {\n    return !/\\S/.test(string);\n}\n\nLp.toString = function(options) {\n    return this.sliceString(this.firstPos(), this.lastPos(), options);\n};\n\nLp.getSourceMap = function(sourceMapName, sourceRoot) {\n    if (!sourceMapName) {\n        // Although we could make up a name or generate an anonymous\n        // source map, instead we assume that any consumer who does not\n        // provide a name does not actually want a source map.\n        return null;\n    }\n\n    var targetLines = this;\n\n    function updateJSON(json) {\n        json = json || {};\n\n        isString.assert(sourceMapName);\n        json.file = sourceMapName;\n\n        if (sourceRoot) {\n            isString.assert(sourceRoot);\n            json.sourceRoot = sourceRoot;\n        }\n\n        return json;\n    }\n\n    var secret = getSecret(targetLines);\n    if (secret.cachedSourceMap) {\n        // Since Lines objects are immutable, we can reuse any source map\n        // that was previously generated. Nevertheless, we return a new\n        // JSON object here to protect the cached source map from outside\n        // modification.\n        return updateJSON(secret.cachedSourceMap.toJSON());\n    }\n\n    var smg = new sourceMap.SourceMapGenerator(updateJSON());\n    var sourcesToContents = {};\n\n    secret.mappings.forEach(function(mapping) {\n        var sourceCursor = mapping.sourceLines.skipSpaces(\n            mapping.sourceLoc.start\n        ) || mapping.sourceLines.lastPos();\n\n        var targetCursor = targetLines.skipSpaces(\n            mapping.targetLoc.start\n        ) || targetLines.lastPos();\n\n        while (comparePos(sourceCursor, mapping.sourceLoc.end) < 0 &&\n               comparePos(targetCursor, mapping.targetLoc.end) < 0) {\n\n            var sourceChar = mapping.sourceLines.charAt(sourceCursor);\n            var targetChar = targetLines.charAt(targetCursor);\n            assert.strictEqual(sourceChar, targetChar);\n\n            var sourceName = mapping.sourceLines.name;\n\n            // Add mappings one character at a time for maximum resolution.\n            smg.addMapping({\n                source: sourceName,\n                original: { line: sourceCursor.line,\n                            column: sourceCursor.column },\n                generated: { line: targetCursor.line,\n                             column: targetCursor.column }\n            });\n\n            if (!hasOwn.call(sourcesToContents, sourceName)) {\n                var sourceContent = mapping.sourceLines.toString();\n                smg.setSourceContent(sourceName, sourceContent);\n                sourcesToContents[sourceName] = sourceContent;\n            }\n\n            targetLines.nextPos(targetCursor, true);\n            mapping.sourceLines.nextPos(sourceCursor, true);\n        }\n    });\n\n    secret.cachedSourceMap = smg;\n\n    return smg.toJSON();\n};\n\nLp.bootstrapCharAt = function(pos) {\n    assert.strictEqual(typeof pos, \"object\");\n    assert.strictEqual(typeof pos.line, \"number\");\n    assert.strictEqual(typeof pos.column, \"number\");\n\n    var line = pos.line,\n        column = pos.column,\n        strings = this.toString().split(lineTerminatorSeqExp),\n        string = strings[line - 1];\n\n    if (typeof string === \"undefined\")\n        return \"\";\n\n    if (column === string.length &&\n        line < strings.length)\n        return \"\\n\";\n\n    if (column >= string.length)\n        return \"\";\n\n    return string.charAt(column);\n};\n\nLp.charAt = function(pos) {\n    assert.strictEqual(typeof pos, \"object\");\n    assert.strictEqual(typeof pos.line, \"number\");\n    assert.strictEqual(typeof pos.column, \"number\");\n\n    var line = pos.line,\n        column = pos.column,\n        secret = getSecret(this),\n        infos = secret.infos,\n        info = infos[line - 1],\n        c = column;\n\n    if (typeof info === \"undefined\" || c < 0)\n        return \"\";\n\n    var indent = this.getIndentAt(line);\n    if (c < indent)\n        return \" \";\n\n    c += info.sliceStart - indent;\n\n    if (c === info.sliceEnd &&\n        line < this.length)\n        return \"\\n\";\n\n    if (c >= info.sliceEnd)\n        return \"\";\n\n    return info.line.charAt(c);\n};\n\nLp.stripMargin = function(width, skipFirstLine) {\n    if (width === 0)\n        return this;\n\n    assert.ok(width > 0, \"negative margin: \" + width);\n\n    if (skipFirstLine && this.length === 1)\n        return this;\n\n    var secret = getSecret(this);\n\n    var lines = new Lines(secret.infos.map(function(info, i) {\n        if (info.line && (i > 0 || !skipFirstLine)) {\n            info = copyLineInfo(info);\n            info.indent = Math.max(0, info.indent - width);\n        }\n        return info;\n    }));\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            newMappings.push(mapping.indent(width, skipFirstLine, true));\n        });\n    }\n\n    return lines;\n};\n\nLp.indent = function(by) {\n    if (by === 0)\n        return this;\n\n    var secret = getSecret(this);\n\n    var lines = new Lines(secret.infos.map(function(info) {\n        if (info.line) {\n            info = copyLineInfo(info);\n            info.indent += by;\n        }\n        return info\n    }));\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            newMappings.push(mapping.indent(by));\n        });\n    }\n\n    return lines;\n};\n\nLp.indentTail = function(by) {\n    if (by === 0)\n        return this;\n\n    if (this.length < 2)\n        return this;\n\n    var secret = getSecret(this);\n\n    var lines = new Lines(secret.infos.map(function(info, i) {\n        if (i > 0 && info.line) {\n            info = copyLineInfo(info);\n            info.indent += by;\n        }\n\n        return info;\n    }));\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            newMappings.push(mapping.indent(by, true));\n        });\n    }\n\n    return lines;\n};\n\nLp.getIndentAt = function(line) {\n    assert.ok(line >= 1, \"no line \" + line + \" (line numbers start from 1)\");\n    var secret = getSecret(this),\n        info = secret.infos[line - 1];\n    return Math.max(info.indent, 0);\n};\n\nLp.guessTabWidth = function() {\n    var secret = getSecret(this);\n    if (hasOwn.call(secret, \"cachedTabWidth\")) {\n        return secret.cachedTabWidth;\n    }\n\n    var counts = []; // Sparse array.\n    var lastIndent = 0;\n\n    for (var line = 1, last = this.length; line <= last; ++line) {\n        var info = secret.infos[line - 1];\n        var sliced = info.line.slice(info.sliceStart, info.sliceEnd);\n\n        // Whitespace-only lines don't tell us much about the likely tab\n        // width of this code.\n        if (isOnlyWhitespace(sliced)) {\n            continue;\n        }\n\n        var diff = Math.abs(info.indent - lastIndent);\n        counts[diff] = ~~counts[diff] + 1;\n        lastIndent = info.indent;\n    }\n\n    var maxCount = -1;\n    var result = 2;\n\n    for (var tabWidth = 1;\n         tabWidth < counts.length;\n         tabWidth += 1) {\n        if (hasOwn.call(counts, tabWidth) &&\n            counts[tabWidth] > maxCount) {\n            maxCount = counts[tabWidth];\n            result = tabWidth;\n        }\n    }\n\n    return secret.cachedTabWidth = result;\n};\n\nLp.isOnlyWhitespace = function() {\n    return isOnlyWhitespace(this.toString());\n};\n\nLp.isPrecededOnlyByWhitespace = function(pos) {\n    var secret = getSecret(this);\n    var info = secret.infos[pos.line - 1];\n    var indent = Math.max(info.indent, 0);\n\n    var diff = pos.column - indent;\n    if (diff <= 0) {\n        // If pos.column does not exceed the indentation amount, then\n        // there must be only whitespace before it.\n        return true;\n    }\n\n    var start = info.sliceStart;\n    var end = Math.min(start + diff, info.sliceEnd);\n    var prefix = info.line.slice(start, end);\n\n    return isOnlyWhitespace(prefix);\n};\n\nLp.getLineLength = function(line) {\n    var secret = getSecret(this),\n        info = secret.infos[line - 1];\n    return this.getIndentAt(line) + info.sliceEnd - info.sliceStart;\n};\n\nLp.nextPos = function(pos, skipSpaces) {\n    var l = Math.max(pos.line, 0),\n        c = Math.max(pos.column, 0);\n\n    if (c < this.getLineLength(l)) {\n        pos.column += 1;\n\n        return skipSpaces\n            ? !!this.skipSpaces(pos, false, true)\n            : true;\n    }\n\n    if (l < this.length) {\n        pos.line += 1;\n        pos.column = 0;\n\n        return skipSpaces\n            ? !!this.skipSpaces(pos, false, true)\n            : true;\n    }\n\n    return false;\n};\n\nLp.prevPos = function(pos, skipSpaces) {\n    var l = pos.line,\n        c = pos.column;\n\n    if (c < 1) {\n        l -= 1;\n\n        if (l < 1)\n            return false;\n\n        c = this.getLineLength(l);\n\n    } else {\n        c = Math.min(c - 1, this.getLineLength(l));\n    }\n\n    pos.line = l;\n    pos.column = c;\n\n    return skipSpaces\n        ? !!this.skipSpaces(pos, true, true)\n        : true;\n};\n\nLp.firstPos = function() {\n    // Trivial, but provided for completeness.\n    return { line: 1, column: 0 };\n};\n\nLp.lastPos = function() {\n    return {\n        line: this.length,\n        column: this.getLineLength(this.length)\n    };\n};\n\nLp.skipSpaces = function(pos, backward, modifyInPlace) {\n    if (pos) {\n        pos = modifyInPlace ? pos : {\n            line: pos.line,\n            column: pos.column\n        };\n    } else if (backward) {\n        pos = this.lastPos();\n    } else {\n        pos = this.firstPos();\n    }\n\n    if (backward) {\n        while (this.prevPos(pos)) {\n            if (!isOnlyWhitespace(this.charAt(pos)) &&\n                this.nextPos(pos)) {\n                return pos;\n            }\n        }\n\n        return null;\n\n    } else {\n        while (isOnlyWhitespace(this.charAt(pos))) {\n            if (!this.nextPos(pos)) {\n                return null;\n            }\n        }\n\n        return pos;\n    }\n};\n\nLp.trimLeft = function() {\n    var pos = this.skipSpaces(this.firstPos(), false, true);\n    return pos ? this.slice(pos) : emptyLines;\n};\n\nLp.trimRight = function() {\n    var pos = this.skipSpaces(this.lastPos(), true, true);\n    return pos ? this.slice(this.firstPos(), pos) : emptyLines;\n};\n\nLp.trim = function() {\n    var start = this.skipSpaces(this.firstPos(), false, true);\n    if (start === null)\n        return emptyLines;\n\n    var end = this.skipSpaces(this.lastPos(), true, true);\n    assert.notStrictEqual(end, null);\n\n    return this.slice(start, end);\n};\n\nLp.eachPos = function(callback, startPos, skipSpaces) {\n    var pos = this.firstPos();\n\n    if (startPos) {\n        pos.line = startPos.line,\n        pos.column = startPos.column\n    }\n\n    if (skipSpaces && !this.skipSpaces(pos, false, true)) {\n        return; // Encountered nothing but spaces.\n    }\n\n    do callback.call(this, pos);\n    while (this.nextPos(pos, skipSpaces));\n};\n\nLp.bootstrapSlice = function(start, end) {\n    var strings = this.toString().split(\n        lineTerminatorSeqExp\n    ).slice(\n        start.line - 1,\n        end.line\n    );\n\n    strings.push(strings.pop().slice(0, end.column));\n    strings[0] = strings[0].slice(start.column);\n\n    return fromString(strings.join(\"\\n\"));\n};\n\nLp.slice = function(start, end) {\n    if (!end) {\n        if (!start) {\n            // The client seems to want a copy of this Lines object, but\n            // Lines objects are immutable, so it's perfectly adequate to\n            // return the same object.\n            return this;\n        }\n\n        // Slice to the end if no end position was provided.\n        end = this.lastPos();\n    }\n\n    var secret = getSecret(this);\n    var sliced = secret.infos.slice(start.line - 1, end.line);\n\n    if (start.line === end.line) {\n        sliced[0] = sliceInfo(sliced[0], start.column, end.column);\n    } else {\n        assert.ok(start.line < end.line);\n        sliced[0] = sliceInfo(sliced[0], start.column);\n        sliced.push(sliceInfo(sliced.pop(), 0, end.column));\n    }\n\n    var lines = new Lines(sliced);\n\n    if (secret.mappings.length > 0) {\n        var newMappings = getSecret(lines).mappings;\n        assert.strictEqual(newMappings.length, 0);\n        secret.mappings.forEach(function(mapping) {\n            var sliced = mapping.slice(this, start, end);\n            if (sliced) {\n                newMappings.push(sliced);\n            }\n        }, this);\n    }\n\n    return lines;\n};\n\nfunction sliceInfo(info, startCol, endCol) {\n    var sliceStart = info.sliceStart;\n    var sliceEnd = info.sliceEnd;\n    var indent = Math.max(info.indent, 0);\n    var lineLength = indent + sliceEnd - sliceStart;\n\n    if (typeof endCol === \"undefined\") {\n        endCol = lineLength;\n    }\n\n    startCol = Math.max(startCol, 0);\n    endCol = Math.min(endCol, lineLength);\n    endCol = Math.max(endCol, startCol);\n\n    if (endCol < indent) {\n        indent = endCol;\n        sliceEnd = sliceStart;\n    } else {\n        sliceEnd -= lineLength - endCol;\n    }\n\n    lineLength = endCol;\n    lineLength -= startCol;\n\n    if (startCol < indent) {\n        indent -= startCol;\n    } else {\n        startCol -= indent;\n        indent = 0;\n        sliceStart += startCol;\n    }\n\n    assert.ok(indent >= 0);\n    assert.ok(sliceStart <= sliceEnd);\n    assert.strictEqual(lineLength, indent + sliceEnd - sliceStart);\n\n    if (info.indent === indent &&\n        info.sliceStart === sliceStart &&\n        info.sliceEnd === sliceEnd) {\n        return info;\n    }\n\n    return {\n        line: info.line,\n        indent: indent,\n        sliceStart: sliceStart,\n        sliceEnd: sliceEnd\n    };\n}\n\nLp.bootstrapSliceString = function(start, end, options) {\n    return this.slice(start, end).toString(options);\n};\n\nLp.sliceString = function(start, end, options) {\n    if (!end) {\n        if (!start) {\n            // The client seems to want a copy of this Lines object, but\n            // Lines objects are immutable, so it's perfectly adequate to\n            // return the same object.\n            return this;\n        }\n\n        // Slice to the end if no end position was provided.\n        end = this.lastPos();\n    }\n\n    options = normalizeOptions(options);\n\n    var infos = getSecret(this).infos;\n    var parts = [];\n    var tabWidth = options.tabWidth;\n\n    for (var line = start.line; line <= end.line; ++line) {\n        var info = infos[line - 1];\n\n        if (line === start.line) {\n            if (line === end.line) {\n                info = sliceInfo(info, start.column, end.column);\n            } else {\n                info = sliceInfo(info, start.column);\n            }\n        } else if (line === end.line) {\n            info = sliceInfo(info, 0, end.column);\n        }\n\n        var indent = Math.max(info.indent, 0);\n\n        var before = info.line.slice(0, info.sliceStart);\n        if (options.reuseWhitespace &&\n            isOnlyWhitespace(before) &&\n            countSpaces(before, options.tabWidth) === indent) {\n            // Reuse original spaces if the indentation is correct.\n            parts.push(info.line.slice(0, info.sliceEnd));\n            continue;\n        }\n\n        var tabs = 0;\n        var spaces = indent;\n\n        if (options.useTabs) {\n            tabs = Math.floor(indent / tabWidth);\n            spaces -= tabs * tabWidth;\n        }\n\n        var result = \"\";\n\n        if (tabs > 0) {\n            result += new Array(tabs + 1).join(\"\\t\");\n        }\n\n        if (spaces > 0) {\n            result += new Array(spaces + 1).join(\" \");\n        }\n\n        result += info.line.slice(info.sliceStart, info.sliceEnd);\n\n        parts.push(result);\n    }\n\n    return parts.join(options.lineTerminator);\n};\n\nLp.isEmpty = function() {\n    return this.length < 2 && this.getLineLength(1) < 1;\n};\n\nLp.join = function(elements) {\n    var separator = this;\n    var separatorSecret = getSecret(separator);\n    var infos = [];\n    var mappings = [];\n    var prevInfo;\n\n    function appendSecret(secret) {\n        if (secret === null)\n            return;\n\n        if (prevInfo) {\n            var info = secret.infos[0];\n            var indent = new Array(info.indent + 1).join(\" \");\n            var prevLine = infos.length;\n            var prevColumn = Math.max(prevInfo.indent, 0) +\n                prevInfo.sliceEnd - prevInfo.sliceStart;\n\n            prevInfo.line = prevInfo.line.slice(\n                0, prevInfo.sliceEnd) + indent + info.line.slice(\n                    info.sliceStart, info.sliceEnd);\n\n            prevInfo.sliceEnd = prevInfo.line.length;\n\n            if (secret.mappings.length > 0) {\n                secret.mappings.forEach(function(mapping) {\n                    mappings.push(mapping.add(prevLine, prevColumn));\n                });\n            }\n\n        } else if (secret.mappings.length > 0) {\n            mappings.push.apply(mappings, secret.mappings);\n        }\n\n        secret.infos.forEach(function(info, i) {\n            if (!prevInfo || i > 0) {\n                prevInfo = copyLineInfo(info);\n                infos.push(prevInfo);\n            }\n        });\n    }\n\n    function appendWithSeparator(secret, i) {\n        if (i > 0)\n            appendSecret(separatorSecret);\n        appendSecret(secret);\n    }\n\n    elements.map(function(elem) {\n        var lines = fromString(elem);\n        if (lines.isEmpty())\n            return null;\n        return getSecret(lines);\n    }).forEach(separator.isEmpty()\n               ? appendSecret\n               : appendWithSeparator);\n\n    if (infos.length < 1)\n        return emptyLines;\n\n    var lines = new Lines(infos);\n\n    getSecret(lines).mappings = mappings;\n\n    return lines;\n};\n\nexports.concat = function(elements) {\n    return emptyLines.join(elements);\n};\n\nLp.concat = function(other) {\n    var args = arguments,\n        list = [this];\n    list.push.apply(list, args);\n    assert.strictEqual(list.length, args.length + 1);\n    return emptyLines.join(list);\n};\n\n// The emptyLines object needs to be created all the way down here so that\n// Lines.prototype will be fully populated.\nvar emptyLines = fromString(\"\");\n"]}