{"version":3,"sources":["database.js"],"names":[],"mappings":"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","file":"database-compiled.js","sourcesContent":["\"use strict\";\n\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar _ = require(\"lodash\"),\n    debug = require(\"debug\")(\"robe-db\"),\n    Class = require(\"class-extend\"),\n    Q = require(\"bluebird\");\n\nvar Collection = require(\"./collection\"),\n    Oplog = require(\"./oplog\");\n\n\n\n/**\n * Represents a database connection.\n */\nvar Database = (function () {\n  /**\n   * Constructor.\n   * @param  {Object} db Mongoskin db connection.\n   */\n  function Database(db) {\n    _classCallCheck(this, Database);\n\n    this.db = db;\n  }\n\n  _prototypeProperties(Database, null, {\n    oplog: {\n\n\n      /**\n       * Get oplog watcher.\n       *\n       * This will create and start the watcher if not already done so.\n       */\n      value: function* oplog() {\n        if (!this._oplog) {\n          this._oplog = new Oplog(this);\n        }\n\n        return this._oplog;\n      },\n      writable: true,\n      configurable: true\n    },\n    close: {\n\n\n\n      /**\n       * Close this database connection.\n       * @return {Promise}\n       */\n      value: function close() {\n        var self = this;\n\n        debug(\"close\");\n\n        return Q[\"try\"](function () {\n          if (self._oplog) {\n            return self._oplog.stop();\n          }\n        }).then(function closeDb() {\n          if (2 === _.deepGet(self.db, \"driver._state\")) {\n            return Q.promisify(self.db.close, self.db)();\n          }\n        });\n      },\n      writable: true,\n      configurable: true\n    },\n    collection: {\n\n\n      /**\n       * Fetch a collection from the db.\n       *\n       * @param {Object} [options] Additional options.\n       * @param {Object} [options.schema] Collection schema.\n       * \n       * @return {Collection}\n       */\n      value: function collection(name) {\n        var options = arguments[1] === undefined ? {} : arguments[1];\n        return new Collection(this, this.db.get(name), options);\n      },\n      writable: true,\n      configurable: true\n    }\n  });\n\n  return Database;\n})();\n\nDatabase.extend = Class.extend;\n\n\n\nmodule.exports = Database;"]}