{"version":3,"sources":["oplog.js"],"names":[],"mappings":"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","file":"oplog-compiled.js","sourcesContent":["\"use strict\";\n\n\nvar _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar _ = require(\"lodash\"),\n    mongo = require(\"mongoskin\"),\n    debug = require(\"debug\")(\"robe-oplog\"),\n    EventEmitter2 = require(\"eventemitter2\").EventEmitter2,\n    Class = require(\"class-extend\"),\n    Q = require(\"bluebird\");\n\n\n\n/**\n * Represents the oplog.\n */\nvar Oplog = (function (EventEmitter2) {\n  /**\n   * Constructor.\n   *\n   * @param  {Database} robeDb The underlying db.\n   */\n  function Oplog(robeDb) {\n    _classCallCheck(this, Oplog);\n\n    _get(Object.getPrototypeOf(Oplog.prototype), \"constructor\", this).call(this, {\n      wildcard: true,\n      delimiter: \":\"\n    });\n\n    this.robeDb = robeDb;\n    this.paused = false;\n    this.active = false;\n    this.watchers = [];\n\n    var self = this;\n    [\"_onData\", \"_onError\", \"_onEnded\"].forEach(function (m) {\n      self[m] = _.bind(self[m], self);\n    });\n  }\n\n  _inherits(Oplog, EventEmitter2);\n\n  _prototypeProperties(Oplog, null, {\n    stop: {\n\n\n\n      /**\n       * Stop watching oplog.\n       *\n       * @return {Promise}\n       */\n      value: function stop() {\n        var self = this;\n\n        debug(\"Stop oplog\");\n\n        self.active = false;\n\n        return new Q(function (resolve, reject) {\n          if (!self.cursor) {\n            return resolve();\n          }\n\n          self.cursor.close(function (err) {\n            if (err) return reject(err);\n\n            resolve();\n          });\n        }).then(function () {\n          self.cursor = null;\n\n          if (self.db) {\n            debug(\"Close db connection\");\n\n            return new Q(function (resolve, reject) {\n              self.db.close(function (err) {\n                if (err) return reject(err);\n\n                self.db = null;\n\n                resolve();\n              });\n            });\n          }\n        });\n      },\n      writable: true,\n      configurable: true\n    },\n    _resolveServerDb: {\n      value: function _resolveServerDb() {\n        var self = this;\n\n        // find out master server\n        var serverConfig = _.get(self.robeDb.db, \"driver._native.serverConfig\", {});\n\n        var masterServer = _.find(serverConfig.servers || [], function (s) {\n          return _.deepGet(s, \"isMasterDoc.ismaster\");\n        });\n\n        if (!masterServer) {\n          throw new Error(\"No MASTER server found for oplog\");\n        }\n\n        self.databaseName = masterServer.db.databaseName;\n        self.hostPort = masterServer.host + \":\" + masterServer.port;\n\n        debug(\"Resolved db: \" + self.hostPort + \"/\" + self.databaseName);\n      },\n      writable: true,\n      configurable: true\n    },\n    _connectToServer: {\n\n\n\n      /**\n       * Connect to master server.\n       * @return {Promise}\n       */\n      value: function _connectToServer() {\n        var self = this;\n\n        return Q[\"try\"](function () {\n          if (self.db) {\n            return;\n          } else {\n            self._resolveServerDb();\n\n            debug(\"Connect to db \" + self.hostPort);\n\n            self.db = mongo.db(\"mongodb://\" + self.hostPort + \"/local\", {\n              native_parser: true\n            });\n\n            return new Q(function (resolve, reject) {\n              self.db.open(function (err) {\n                if (err) return reject(err);\n\n                resolve();\n              });\n            });\n          }\n        });\n      },\n      writable: true,\n      configurable: true\n    },\n    pause: {\n\n\n      /**\n       * Pause the oplog.\n       */\n      value: function pause() {\n        debug(\"Pause oplog\");\n\n        this.paused = true;\n      },\n      writable: true,\n      configurable: true\n    },\n    resume: {\n\n\n\n      /**\n       * Resume the oplog.\n       */\n      value: function resume() {\n        debug(\"Resume oplog\");\n\n        this.paused = false;\n      },\n      writable: true,\n      configurable: true\n    },\n    start: {\n\n\n\n      /**\n       * Start watching the oplog.\n       *\n       * @see  https://blog.compose.io/the-mongodb-oplog-and-node-js/\n       *\n       * @return {Promise}\n       */\n      value: function start() {\n        var self = this;\n\n        // already started?\n        if (self.active) {\n          return Q.resolve();\n        } else {\n          self.active = true;\n        }\n\n        return self._connectToServer().then(function () {\n          debug(\"Start watching oplog\");\n\n          var oplog = self.db.collection(\"oplog.rs\");\n\n          // get highest current timestamp\n          return Q.promisify(oplog.find, oplog)({}, {\n            fields: {\n              ts: 1\n            },\n            sort: {\n              $natural: -1\n            },\n            limit: 1\n          }).then(function (results) {\n            var lastOplogTime = _.deepGet(results, \"0.ts\");\n\n            // if last ts not available then set to current time\n            if (!lastOplogTime) {\n              lastOplogTime = new mongo.Timestamp(0, Math.floor(Date.now() / 1000 - 1));\n            }\n\n            debug(\"Watching for events newer than \" + lastOplogTime.toString());\n\n            // use oplog.col._native to access lower-level native collection object\n            var cursor = self.cursor = oplog.find({\n              ts: {\n                $gte: lastOplogTime\n              }\n            }, {\n              tailable: true,\n              awaitdata: true,\n              oplogReplay: true,\n              numberOfRetries: -1,\n              timeout: false });\n\n            var stream = self.cursor.stream();\n\n            stream.on(\"data\", self._onData);\n            stream.on(\"error\", self._onError);\n            stream.on(\"end\", self._onEnded);\n\n            debug(\"Cursor started\");\n          });\n        });\n      },\n      writable: true,\n      configurable: true\n    },\n    _onError: {\n\n\n      /**\n       * Handle error\n       */\n      value: function _onError(err) {\n        debug(\"Cursor error: \" + err.message);\n\n        this.emit(\"error\", err);\n      },\n      writable: true,\n      configurable: true\n    },\n    _onEnded: {\n\n\n      /** \n       * Handle oplog stream ended.\n       */\n      value: function _onEnded() {\n        var self = this;\n\n        debug(\"Cursor ended\");\n\n        // if cursor still active\n        if (self.active) {\n          this.cursor = null;\n\n          Q.delay(1000).then(function () {\n            debug(\"Restarting cursor\");\n\n            self.start()[\"catch\"](console.error);\n          });\n        }\n      },\n      writable: true,\n      configurable: true\n    },\n    _onData: {\n\n\n      /**\n       * Handle new oplog data.\n       */\n      value: function _onData(data) {\n        debug(\"Cursor data: \" + JSON.stringify(data));\n\n        if (this.paused) {\n          debug(\"Ignore data because oplog is paused\");\n\n          return;\n        }\n\n        var ns = data.ns.split(\".\"),\n            dbName = ns[0],\n            colName = ns[1];\n\n        // only want events for this db\n        if (this.databaseName !== dbName) {\n          debug(\"Ignoring data for db: \" + dbName);\n\n          return;\n        }\n\n        var opType = null;\n        switch (data.op) {\n          case \"i\":\n            opType = \"insert\";\n            break;\n          case \"d\":\n            opType = \"delete\";\n            break;\n          case \"u\":\n            opType = \"update\";\n            break;\n          default:\n            debug(\"Ignoring op: \" + data.op);\n            return;\n        }\n\n        this.emit([colName, opType], colName, opType, data.o);\n      },\n      writable: true,\n      configurable: true\n    }\n  });\n\n  return Oplog;\n})(EventEmitter2);\n\n\n\n\nOplog.extend = Class.extend;\n\nmodule.exports = Oplog;"]}