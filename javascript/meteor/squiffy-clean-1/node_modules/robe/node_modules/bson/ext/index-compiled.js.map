{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,IAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,IAAI;;AAEH,KAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,KAAK,EAAE;AACvD,MAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;EACpC,MAAM,IAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,MAAM,EAAE;AAC/D,MAAI,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;EACrC,MAAM;AACL,MAAI,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;EACzC;CACD,CAAC,OAAM,GAAG,EAAE;;AAEZ,KAAI;AACH,MAAI,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;EACxC,CAAC,OAAO,GAAG,EAAE;AACb,SAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;AAChB,SAAO,CAAC,KAAK,CAAC,mEAAmE,CAAC,CAAC;AACnF,MAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;EACnC;CACD;;AAED,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC;AAChD,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC,QAAQ,CAAC;AAC5D,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;AACpD,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC;AAChD,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC;AAC/D,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC;AACtD,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC;AACtD,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC;AACvD,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC;AACvD,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,MAAM;;;AAAC,AAGtD,OAAO,CAAC,IAAI,CAAC,2BAA2B,GAAG,CAAC,CAAC;AAC7C,OAAO,CAAC,IAAI,CAAC,4BAA4B,GAAG,CAAC,CAAC;AAC9C,OAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,CAAC,CAAC;AAChD,OAAO,CAAC,IAAI,CAAC,wBAAwB,GAAG,CAAC,CAAC;AAC1C,OAAO,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;AACzC,OAAO,CAAC,IAAI,CAAC,gCAAgC,GAAG,GAAG,CAAC","file":"index-compiled.js","sourcesContent":["var bson = null;\n\ntry {\n\t// Load the precompiled win32 binary\n\tif(process.platform == \"win32\" && process.arch == \"x64\") {\n\t  bson = require('./win32/x64/bson');  \n\t} else if(process.platform == \"win32\" && process.arch == \"ia32\") {\n\t  bson = require('./win32/ia32/bson');  \n\t} else {\n\t  bson = require('../build/Release/bson');  \n\t}\t\n} catch(err) {\n\t// Attempt to load the release bson version\n\ttry {\n\t\tbson = require('../build/Release/bson');\n\t} catch (err) {\n\t\tconsole.dir(err)\n\t\tconsole.error(\"js-bson: Failed to load c++ bson extension, using pure JS version\");\n\t\tbson = require('../lib/bson/bson');\n\t}\n}\n\nexports.BSON = bson.BSON;\nexports.Long = require('../lib/bson/long').Long;\nexports.ObjectID = require('../lib/bson/objectid').ObjectID;\nexports.DBRef = require('../lib/bson/db_ref').DBRef;\nexports.Code = require('../lib/bson/code').Code;\nexports.Timestamp = require('../lib/bson/timestamp').Timestamp;\nexports.Binary = require('../lib/bson/binary').Binary;\nexports.Double = require('../lib/bson/double').Double;\nexports.MaxKey = require('../lib/bson/max_key').MaxKey;\nexports.MinKey = require('../lib/bson/min_key').MinKey;\nexports.Symbol = require('../lib/bson/symbol').Symbol;\n\n// Just add constants tot he Native BSON parser\nexports.BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\nexports.BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\nexports.BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\nexports.BSON.BSON_BINARY_SUBTYPE_UUID = 3;\nexports.BSON.BSON_BINARY_SUBTYPE_MD5 = 4;\nexports.BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n"]}