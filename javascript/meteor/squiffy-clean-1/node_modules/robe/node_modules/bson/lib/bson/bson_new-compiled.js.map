{"version":3,"sources":["bson_new.js"],"names":[],"mappings":"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","file":"bson_new-compiled.js","sourcesContent":["var writeIEEE754 = require('./float_parser').writeIEEE754\n\t, Long = require('./long').Long\n  , Double = require('./double').Double\n  , Timestamp = require('./timestamp').Timestamp\n  , ObjectID = require('./objectid').ObjectID\n  , Symbol = require('./symbol').Symbol\n  , Code = require('./code').Code\n  , MinKey = require('./min_key').MinKey\n  , MaxKey = require('./max_key').MaxKey\n  , DBRef = require('./db_ref').DBRef\n  , Binary = require('./binary').Binary\n  , BinaryParser = require('./binary_parser').BinaryParser;\n\n// Max Document Buffer size\nvar buffer = new Buffer(1024 * 1024 * 16);\n\nvar checkKey = function checkKey (key, dollarsAndDotsOk) {\n  if (!key.length) return;\n  // Check if we have a legal key for the object\n  if (!!~key.indexOf(\"\\x00\")) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error(\"key \" + key + \" must not contain null bytes\");\n  }\n  if (!dollarsAndDotsOk) {\n    if('$' == key[0]) {\n      throw Error(\"key \" + key + \" must not start with '$'\");\n    } else if (!!~key.indexOf('.')) {\n      throw Error(\"key \" + key + \" must not contain '.'\");\n    }\n  }\n};\n\nvar serializeString = function(key, value, index) {\n  // Encode String type\n  buffer[index++] = BSON.BSON_DATA_STRING;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n\n  // Calculate size\n  var size = Buffer.byteLength(value) + 1;\n  // Write the size of the string to buffer\n  buffer[index + 3] = (size >> 24) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index] = size & 0xff;\n  // Ajust the index\n  index = index + 4;\n  // Write the string\n  buffer.write(value, index, 'utf8');\n  // Update index\n  index = index + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeNumber = function(key, value, index) {\n  // We have an integer value\n  if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n    // If the value fits in 32 bits encode as int, if it fits in a double\n    // encode it as a double, otherwise long\n    if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n      // Set int type 32 bits or less\n      buffer[index++] = BSON.BSON_DATA_INT;\n      // Number of written bytes\n      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write the int value\n      buffer[index++] = value & 0xff;\n      buffer[index++] = (value >> 8) & 0xff;\n      buffer[index++] = (value >> 16) & 0xff;\n      buffer[index++] = (value >> 24) & 0xff;\n    } else if(value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n      // Encode as double\n      buffer[index++] = BSON.BSON_DATA_NUMBER;\n      // Number of written bytes\n      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write float\n      writeIEEE754(buffer, value, index, 'little', 52, 8);\n      // Ajust index\n      index = index + 8;\n    } else {\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_LONG;\n      // Number of written bytes\n      var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      var longVal = Long.fromNumber(value);\n      var lowBits = longVal.getLowBits();\n      var highBits = longVal.getHighBits();\n      // Encode low bits\n      buffer[index++] = lowBits & 0xff;\n      buffer[index++] = (lowBits >> 8) & 0xff;\n      buffer[index++] = (lowBits >> 16) & 0xff;\n      buffer[index++] = (lowBits >> 24) & 0xff;\n      // Encode high bits\n      buffer[index++] = highBits & 0xff;\n      buffer[index++] = (highBits >> 8) & 0xff;\n      buffer[index++] = (highBits >> 16) & 0xff;\n      buffer[index++] = (highBits >> 24) & 0xff;\n    }\n  } else {\n    // Encode as double\n    buffer[index++] = BSON.BSON_DATA_NUMBER;\n    // Number of written bytes\n    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value, index, 'little', 52, 8);\n    // Ajust index\n    index = index + 8;\n  }\n\n\treturn index;\n}\n\nvar serializeUndefined = function(key, value, index) {\n  // Set long type\n  buffer[index++] = BSON.BSON_DATA_NULL;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\treturn index;\n}\n\nvar serializeBoolean = function(key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n\treturn index;\t\t\n}\n\nvar serializeDate = function(key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_DATE;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  var dateInMilis = Long.fromNumber(value.getTime());\n  var lowBits = dateInMilis.getLowBits();\n  var highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n\treturn index;\t\n}\n\nvar serializeRegExp = function(key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the regular expression string\n  buffer.write(value.source, index, 'utf8');\n  // Adjust the index\n  index = index + Buffer.byteLength(value.source);\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if(value.global) buffer[index++] = 0x73; // s\n  if(value.ignoreCase) buffer[index++] = 0x69; // i\n  if(value.multiline) buffer[index++] = 0x6d; // m\n  // Add ending zero\n  buffer[index++] = 0x00;\n\treturn index;\t\n}\n\nvar serializeMinMax = function(key, value, index) {\n  // Write the type of either min or max key\n  if(value === null) {\n    buffer[index++] = BSON.BSON_DATA_NULL;\n  } else if(value instanceof MinKey) {\n    buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nvar serializeObjectId = function(key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OID;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  for(var j = 0; j < 12; j++) {\n  \tbuffer[index + j] = value.binId[j];\n  }\n\n  // Ajust index\n  index = index + 12;\n\treturn index;\t\n}\n\nvar serializeBuffer = function(key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  var size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  value.copy(buffer, index, 0, size);\n  // Adjust the index\n  index = index + size;\n\treturn index;\t\n}\n\nvar serializeObject = function(key, value, index, checkKeys, depth) {\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  var endIndex = serializeInto(value, checkKeys, index, depth + 1);\n  // Write size\n  var size = endIndex - index;\n  return endIndex;\n}\n\nvar serializeLong = function(key, value, index) {\n  // Write the type\n  buffer[index++] = value instanceof Long ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  var lowBits = value.getLowBits();\n  var highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n\treturn index;\t\n}\n\nvar serializeDouble = function(key, value, index) {\n  // Encode as double\n  buffer[index++] = BSON.BSON_DATA_NUMBER;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write float\n  writeIEEE754(buffer, value, index, 'little', 52, 8);\n  // Ajust index\n  index = index + 8;\n\treturn index;\t\n}\n\nvar serializeCode = function(key, value, index, checkKeys, depth) {\n  if(value.scope != null && Object.keys(value.scope).length > 0) {\n    // Write the type\n    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    var startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();\n    var codeSize = Buffer.byteLength(functionString) + 1;\n    // Index adjustment\n    index = index + 4;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write string into buffer\n    buffer.write(functionString, index + 4, 'utf8');\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    // \n    // Serialize the scope value\n    var endIndex = serializeInto(value.scope, checkKeys, index, depth + 1)\n    index = endIndex - 1;\n\n    // Writ the total\n    var totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_CODE;\n    // Number of written bytes\n    var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    var functionString = value.code.toString();\n    // Function Size\n    var size = Buffer.byteLength(functionString) + 1;\n    // Write the size of the string to buffer\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    // Write the string\n    buffer.write(functionString, index, 'utf8');\n    // Update index\n    index = index + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n\treturn index;\n}\n\nvar serializeBinary = function(key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  var data = value.value(true);\n  // Calculate size\n  var size = value.position;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  data.copy(buffer, index, 0, value.position);\n  // Adjust the index\n  index = index + value.position;\n\treturn index;\t\n}\n\nvar serializeSymbol = function(key, value, index) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Calculate size\n  var size = Buffer.byteLength(value.value) + 1;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the string\n  buffer.write(value.value, index, 'utf8');\n  // Update index\n  index = index + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n\treturn index;\t\n}\n\nvar serializeDBRef = function(key, value, index, depth) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = buffer.write(key, index, 'utf8');\n  \n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  \n  var startIndex = index;\n  var endIndex;\n\n  // Serialize object\n  if(null != value.db) {\n  \tendIndex = serializeInto({\n        '$ref': value.namespace\n      , '$id' : value.oid\n      , '$db' : value.db\n    }, false, index, depth + 1);\n  } else {\n  \tendIndex = serializeInto({\n        '$ref': value.namespace\n      , '$id' : value.oid\n    }, false, index, depth + 1);\n  }\n\n  // Calculate object size\n  var size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n}\n\nvar BSON = function() {\t\n\tthis.buffer = buffer;\n}\n\nBSON.prototype.serialize = function serialize(object, checkKeys, index) {\n\tvar finishedBuffer = new Buffer(serializeInto(object, checkKeys, index || 0, 0));\n\tthis.buffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n\treturn finishedBuffer;\n}\n\nvar serializeInto = function serializeInto(object, checkKeys, startingIndex, depth) {\n\tstartingIndex = startingIndex || 0;\n\n\t// Start place to serialize into\n\tvar index = startingIndex + 4;\n\tvar self = this;\n\n\t// Special case isArray\n\tif(Array.isArray(object)) {\n\t\t// Get object keys\n\t\tfor(var i = 0; i < object.length; i++) {\n\t\t\tvar key = \"\" + i;\n\t\t\tvar type = typeof object[i];\n\n\t    // Check the key and throw error if it's illegal\n\t    if(key != '$db' && key != '$ref' && key != '$id') {\n\t      checkKey(key, !checkKeys);\n\t    }\n\n\t\t\tif(type == 'string') {\n\t\t\t\tindex = serializeString(key, object[i], index);\n\t\t\t} else if(type == 'number') {\n\t\t\t\tindex = serializeNumber(key, object[i], index);\n\t    } else if(type == 'undefined') {\n\t    \tindex = serializeUndefined(key, object[i], index);\n\t    } else if(type == 'boolean') {\n\t    \tindex = serializeBoolean(key, object[i], index);\n\t    } else if(object[i] instanceof Date) {\n\t    \tindex = serializeDate(key, object[i], index);\n\t    } else if(object[i] instanceof RegExp || Object.prototype.toString.call(object[i]) === '[object RegExp]') {\n\t    \tindex = serializeRegExp(key, object[i], index);\n\t    } else if(object[i]['_bsontype'] == 'MinKey' || object[i]['_bsontype'] == 'MaxKey') {\n\t    \tindex = serializeMinMax(key, object[i], index);\n\t    } else if(object[i]['_bsontype'] == 'ObjectID') {\n\t    \tindex = serializeObjectId(key, object[i], index);\n\t    } else if(Buffer.isBuffer(object[i])) {\n\t    \tindex = serializeBuffer(key, object[i], index);\n\t\t\t} else if(type == 'object' && object[i]['_bsontype'] == null) {\n\t\t\t\tindex = serializeObject(key, object[i], index, checkKeys, depth);\n\t    } else if(object[i]['_bsontype'] == 'Long' || object[i]['_bsontype'] == 'Timestamp') {\n\t    \tindex = serializeLong(key, object[i], index);\n\t    } else if(object[i]['_bsontype'] == 'Double') {\n\t    \tindex = serializeDouble(key, object[i], index);\n\t    } else if(object[i]['_bsontype'] == 'Code') {\n\t    \tindex = serializeCode(key, object[i], index, checkKeys, depth);\n\t    } else if(object[i]['_bsontype'] == 'Binary') {\n\t    \tindex = serializeBinary(key, object[i], index);\n\t    } else if(object[i]['_bsontype'] == 'Symbol') {\n\t    \tindex = serializeSymbol(key, object[i], index);\n\t    } else if(object[i]['_bsontype'] == 'DBRef') {\n\t    \tindex = serializeDBRef(key, object[i], index, depth);\n\t    }\n\t  }\n\t} else {\n\t\tvar keys = Object.keys(object);\n\t\tfor(var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar type = typeof object[key];\n\n\t    // Check the key and throw error if it's illegal\n\t    if(key != '$db' && key != '$ref' && key != '$id') {\n\t      checkKey(key, !checkKeys);\n\t    }\n\n\t\t\tif(type == 'string') {\n\t\t\t\tindex = serializeString(key, object[key], index);\n\t\t\t} else if(type == 'number') {\n\t\t\t\tindex = serializeNumber(key, object[key], index);\n\t    } else if(type == 'undefined') {\n\t    \tindex = serializeUndefined(key, object[key], index);\n\t    } else if(type == 'boolean') {\n\t    \tindex = serializeBoolean(key, object[key], index);\n\t    } else if(object[key] instanceof Date) {\n\t    \tindex = serializeDate(key, object[key], index);\n\t    } else if(object[key] instanceof RegExp || Object.prototype.toString.call(object[key]) === '[object RegExp]') {\n\t    \tindex = serializeRegExp(key, object[key], index);\n\t    } else if(object[key]['_bsontype'] == 'MinKey' || object[key]['_bsontype'] == 'MaxKey') {\n\t    \tindex = serializeMinMax(key, object[key], index);\n\t    } else if(object[key]['_bsontype'] == 'ObjectID') {\n\t    \tindex = serializeObjectId(key, object[key], index);\n\t    } else if(Buffer.isBuffer(object[key])) {\n\t    \tindex = serializeBuffer(key, object[key], index);\n\t\t\t} else if(type == 'object' && object[key]['_bsontype'] == null) {\n\t\t\t\tindex = serializeObject(key, object[key], index, checkKeys, depth);\n\t    } else if(object[key]['_bsontype'] == 'Long' || object[key]['_bsontype'] == 'Timestamp') {\n\t    \tindex = serializeLong(key, object[key], index);\n\t    } else if(object[key]['_bsontype'] == 'Double') {\n\t    \tindex = serializeDouble(key, object[key], index);\n\t    } else if(object[key]['_bsontype'] == 'Code') {\n\t    \tindex = serializeCode(key, object[key], index, checkKeys, depth);\n\t    } else if(object[key]['_bsontype'] == 'Binary') {\n\t    \tindex = serializeBinary(key, object[key], index);\n\t    } else if(object[key]['_bsontype'] == 'Symbol') {\n\t    \tindex = serializeSymbol(key, object[key], index);\n\t    } else if(object[key]['_bsontype'] == 'DBRef') {\n\t    \tindex = serializeDBRef(key, object[key], index, depth);\n\t    }\n\t\t}\n\t}\n\n\t// Final padding byte for object\n\tbuffer[index++] = 0x00;\n\n\t// Final size\n\tvar size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n}\n\n/**\n * @ignore\n * @api private\n */\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// Return BSON\nexports.BSON = BSON;"]}