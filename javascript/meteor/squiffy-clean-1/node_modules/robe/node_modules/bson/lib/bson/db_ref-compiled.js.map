{"version":3,"sources":["db_ref.js"],"names":[],"mappings":";;;;;;;;;AASA,SAAS,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE;AACjC,MAAG,EAAE,IAAI,YAAY,KAAK,CAAA,AAAC,EAAE,OAAO,IAAI,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;;AAElE,MAAI,CAAC,SAAS,GAAG,OAAO,CAAC;AACzB,MAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,MAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,MAAI,CAAC,EAAE,GAAG,EAAE,CAAC;CACd;;;;;;AAAC,AAMF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AAClC,SAAO;AACL,UAAM,EAAC,IAAI,CAAC,SAAS;AACrB,SAAK,EAAC,IAAI,CAAC,GAAG;AACd,SAAK,EAAC,IAAI,CAAC,EAAE,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE;GACrC,CAAC;CACH,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;AACvB,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC","file":"db_ref-compiled.js","sourcesContent":["/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {string} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {string} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nfunction DBRef(namespace, oid, db) {\n  if(!(this instanceof DBRef)) return new DBRef(namespace, oid, db);\n  \n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n};\n\n/**\n * @ignore\n * @api private\n */\nDBRef.prototype.toJSON = function() {\n  return {\n    '$ref':this.namespace,\n    '$id':this.oid,\n    '$db':this.db == null ? '' : this.db\n  };\n}\n\nmodule.exports = DBRef;\nmodule.exports.DBRef = DBRef;"]}