{"version":3,"sources":["double.js"],"names":[],"mappings":";;;;;;;AAOA,SAAS,MAAM,CAAC,KAAK,EAAE;AACrB,MAAG,EAAE,IAAI,YAAY,MAAM,CAAA,AAAC,EAAE,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;;AAEvD,MAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,MAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACpB;;;;;;;;AAAA,AAQD,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AACpC,SAAO,IAAI,CAAC,KAAK,CAAC;CACnB;;;;;AAAC,AAKF,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AACnC,SAAO,IAAI,CAAC,KAAK,CAAC;CACnB,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;AACxB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC","file":"double-compiled.js","sourcesContent":["/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if(!(this instanceof Double)) return new Double(value);\n  \n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function() {\n  return this.value;\n}\n\nmodule.exports = Double;\nmodule.exports.Double = Double;"]}