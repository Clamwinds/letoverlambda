{"version":3,"sources":["symbol.js"],"names":[],"mappings":";;;;;;;;AAQA,SAAS,MAAM,CAAC,KAAK,EAAE;AACrB,MAAG,EAAE,IAAI,YAAY,MAAM,CAAA,AAAC,EAAE,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;AACvD,MAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,MAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACpB;;;;;;;;AAAA,AAQD,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AACpC,SAAO,IAAI,CAAC,KAAK,CAAC;CACnB;;;;;AAAC,AAKF,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAW;AACrC,SAAO,IAAI,CAAC,KAAK,CAAC;CACnB;;;;;AAAA,AAKD,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AACpC,SAAO,IAAI,CAAC,KAAK,CAAC;CACnB;;;;;AAAA,AAKD,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AACnC,SAAO,IAAI,CAAC,KAAK,CAAC;CACnB,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;AACxB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC","file":"symbol-compiled.js","sourcesContent":["/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {string} value the string representing the symbol.\n * @return {Symbol}\n */\nfunction Symbol(value) {\n  if(!(this instanceof Symbol)) return new Symbol(value);\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toString = function() {\n  return this.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.inspect = function() {\n  return this.value;\n}\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return this.value;\n}\n\nmodule.exports = Symbol;\nmodule.exports.Symbol = Symbol;"]}