{"version":3,"sources":["mongodb.js"],"names":[],"mappings":"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","file":"mongodb-compiled.js","sourcesContent":["var format = require('util').format;\n\nvar MongoAuthProcess = function(host, port, service_name) {  \n  // Check what system we are on\n  if(process.platform == 'win32') {\n    this._processor = new Win32MongoProcessor(host, port, service_name);\n  } else {\n    this._processor = new UnixMongoProcessor(host, port, service_name);\n  }\n}\n\nMongoAuthProcess.prototype.init = function(username, password, callback) {\n  this._processor.init(username, password, callback);\n}\n\nMongoAuthProcess.prototype.transition = function(payload, callback) {\n  this._processor.transition(payload, callback);\n}\n\n/*******************************************************************\n *\n * Win32 SSIP Processor for MongoDB\n *\n *******************************************************************/\nvar Win32MongoProcessor = function(host, port, service_name) {\n  this.host = host;\n  this.port = port  \n  // SSIP classes\n  this.ssip = require(\"../kerberos\").SSIP;\n  // Set up first transition\n  this._transition = Win32MongoProcessor.first_transition(this);\n  // Set up service name\n  service_name = service_name || \"mongodb\";\n  // Set up target\n  this.target = format(\"%s/%s\", service_name, host);\n  // Number of retries\n  this.retries = 10;\n}\n\nWin32MongoProcessor.prototype.init = function(username, password, callback) {\n  var self = this;\n  // Save the values used later\n  this.username = username;\n  this.password = password;\n  // Aquire credentials\n  this.ssip.SecurityCredentials.aquire_kerberos(username, password, function(err, security_credentials) {\n    if(err) return callback(err);\n    // Save credentials\n    self.security_credentials = security_credentials;\n    // Callback with success\n    callback(null);\n  });\n}\n\nWin32MongoProcessor.prototype.transition = function(payload, callback) {\n  if(this._transition == null) return callback(new Error(\"Transition finished\"));\n  this._transition(payload, callback);\n}\n\nWin32MongoProcessor.first_transition = function(self) {\n  return function(payload, callback) {    \n    self.ssip.SecurityContext.initialize(\n      self.security_credentials, \n      self.target, \n      payload, function(err, security_context) {   \n        if(err) return callback(err);\n        \n        // If no context try again until we have no more retries\n        if(!security_context.hasContext) {\n          if(self.retries == 0) return callback(new Error(\"Failed to initialize security context\"));\n          // Update the number of retries\n          self.retries = self.retries - 1;\n          // Set next transition\n          return self.transition(payload, callback);\n        }\n\n        // Set next transition\n        self._transition = Win32MongoProcessor.second_transition(self);\n        self.security_context = security_context;\n        // Return the payload\n        callback(null, security_context.payload);\n    });\n  }\n}\n\nWin32MongoProcessor.second_transition = function(self) {\n  return function(payload, callback) {    \n    // Perform a step\n    self.security_context.initialize(self.target, payload, function(err, security_context) {\n      if(err) return callback(err);\n\n      // If no context try again until we have no more retries\n      if(!security_context.hasContext) {\n        if(self.retries == 0) return callback(new Error(\"Failed to initialize security context\"));\n        // Update the number of retries\n        self.retries = self.retries - 1;\n        // Set next transition\n        self._transition = Win32MongoProcessor.first_transition(self);\n        // Retry\n        return self.transition(payload, callback);\n      }\n\n      // Set next transition\n      self._transition = Win32MongoProcessor.third_transition(self);\n      // Return the payload\n      callback(null, security_context.payload);\n    });\n  }  \n}\n\nWin32MongoProcessor.third_transition = function(self) {\n  return function(payload, callback) {   \n    var messageLength = 0;\n    // Get the raw bytes\n    var encryptedBytes = new Buffer(payload, 'base64');\n    var encryptedMessage = new Buffer(messageLength);\n    // Copy first byte\n    encryptedBytes.copy(encryptedMessage, 0, 0, messageLength);\n    // Set up trailer\n    var securityTrailerLength = encryptedBytes.length - messageLength;\n    var securityTrailer = new Buffer(securityTrailerLength);\n    // Copy the bytes\n    encryptedBytes.copy(securityTrailer, 0, messageLength, securityTrailerLength);\n\n    // Types used\n    var SecurityBuffer = self.ssip.SecurityBuffer;\n    var SecurityBufferDescriptor = self.ssip.SecurityBufferDescriptor;\n\n    // Set up security buffers\n    var buffers = [\n        new SecurityBuffer(SecurityBuffer.DATA, encryptedBytes)\n      , new SecurityBuffer(SecurityBuffer.STREAM, securityTrailer)\n    ];\n\n    // Set up the descriptor\n    var descriptor = new SecurityBufferDescriptor(buffers);\n\n    // Decrypt the data\n    self.security_context.decryptMessage(descriptor, function(err, security_context) {\n      if(err) return callback(err);\n\n      var length = 4;\n      if(self.username != null) {\n        length += self.username.length;          \n      }\n\n      var bytesReceivedFromServer = new Buffer(length);\n      bytesReceivedFromServer[0] = 0x01;  // NO_PROTECTION\n      bytesReceivedFromServer[1] = 0x00;  // NO_PROTECTION\n      bytesReceivedFromServer[2] = 0x00;  // NO_PROTECTION\n      bytesReceivedFromServer[3] = 0x00;  // NO_PROTECTION        \n\n      if(self.username != null) {\n        var authorization_id_bytes = new Buffer(self.username, 'utf8');\n        authorization_id_bytes.copy(bytesReceivedFromServer, 4, 0);\n      }\n\n      self.security_context.queryContextAttributes(0x00, function(err, sizes) {\n        if(err) return callback(err);\n\n        var buffers = [\n            new SecurityBuffer(SecurityBuffer.TOKEN, new Buffer(sizes.securityTrailer))\n          , new SecurityBuffer(SecurityBuffer.DATA, bytesReceivedFromServer)\n          , new SecurityBuffer(SecurityBuffer.PADDING, new Buffer(sizes.blockSize))\n        ]\n\n        var descriptor = new SecurityBufferDescriptor(buffers);\n\n        self.security_context.encryptMessage(descriptor, 0x80000001, function(err, security_context) {\n          if(err) return callback(err);\n          callback(null, security_context.payload);\n        });\n      });\n    });\n  }  \n}\n\n/*******************************************************************\n *\n * UNIX MIT Kerberos processor\n *\n *******************************************************************/\nvar UnixMongoProcessor = function(host, port, service_name) {\n  this.host = host;\n  this.port = port  \n  // SSIP classes\n  this.Kerberos = require(\"../kerberos\").Kerberos;\n  this.kerberos = new this.Kerberos();\n  service_name = service_name || \"mongodb\";\n  // Set up first transition\n  this._transition = UnixMongoProcessor.first_transition(this);\n  // Set up target\n  this.target = format(\"%s@%s\", service_name, host);\n  // Number of retries\n  this.retries = 10;\n}\n\nUnixMongoProcessor.prototype.init = function(username, password, callback) {\n  var self = this;\n  this.username = username;\n  this.password = password;\n  // Call client initiate\n  this.kerberos.authGSSClientInit(\n      self.target\n    , this.Kerberos.GSS_C_MUTUAL_FLAG, function(err, context) {\n      self.context = context;\n      // Return the context\n      callback(null, context);\n  });\n}\n\nUnixMongoProcessor.prototype.transition = function(payload, callback) {\n  if(this._transition == null) return callback(new Error(\"Transition finished\"));\n  this._transition(payload, callback);\n}\n\nUnixMongoProcessor.first_transition = function(self) {\n  return function(payload, callback) {    \n    self.kerberos.authGSSClientStep(self.context, '', function(err, result) {\n      if(err) return callback(err);\n      // Set up the next step\n      self._transition = UnixMongoProcessor.second_transition(self);\n      // Return the payload\n      callback(null, self.context.response);\n    })\n  }\n}\n\nUnixMongoProcessor.second_transition = function(self) {\n  return function(payload, callback) {    \n    self.kerberos.authGSSClientStep(self.context, payload, function(err, result) {\n      if(err && self.retries == 0) return callback(err);\n      // Attempt to re-establish a context\n      if(err) {\n        // Adjust the number of retries\n        self.retries = self.retries - 1;\n        // Call same step again\n        return self.transition(payload, callback);\n      }\n      \n      // Set up the next step\n      self._transition = UnixMongoProcessor.third_transition(self);\n      // Return the payload\n      callback(null, self.context.response || '');\n    });\n  }\n}\n\nUnixMongoProcessor.third_transition = function(self) {\n  return function(payload, callback) {    \n    // GSS Client Unwrap\n    self.kerberos.authGSSClientUnwrap(self.context, payload, function(err, result) {\n      if(err) return callback(err, false);\n      \n      // Wrap the response\n      self.kerberos.authGSSClientWrap(self.context, self.context.response, self.username, function(err, result) {\n        if(err) return callback(err, false);\n        // Set up the next step\n        self._transition = UnixMongoProcessor.fourth_transition(self);\n        // Return the payload\n        callback(null, self.context.response);\n      });\n    });\n  }\n}\n\nUnixMongoProcessor.fourth_transition = function(self) {\n  return function(payload, callback) {    \n    // Clean up context\n    self.kerberos.authGSSClientClean(self.context, function(err, result) {\n      if(err) return callback(err, false);\n      // Set the transition to null\n      self._transition = null;\n      // Callback with valid authentication\n      callback(null, true);\n    });\n  }\n}\n\n// Set the process\nexports.MongoAuthProcess = MongoAuthProcess;"]}