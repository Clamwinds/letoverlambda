{"version":3,"sources":["core.js"],"names":[],"mappings":"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","file":"core-compiled.js","sourcesContent":["var InsertCommand = require('../commands/insert_command').InsertCommand\n  , DeleteCommand = require('../commands/delete_command').DeleteCommand\n  , UpdateCommand = require('../commands/update_command').UpdateCommand\n  , DbCommand = require('../commands/db_command').DbCommand\n  , utils = require('../utils')\n  , hasWriteCommands = require('../utils').hasWriteCommands\n  , shared = require('./shared');\n\n/**\n * Precompiled regexes\n * @ignore\n **/\nvar eErrorMessages = /No matching object found/;\n\n// ***************************************************\n// Insert function\n// ***************************************************\nvar insert = function insert (docs, options, callback) {\n  if ('function' === typeof options) callback = options, options = {};\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // Get a connection\n  var connection = this.db.serverConfig.checkoutWriter();\n  if(connection instanceof Error && connection.code == -5000) return callback(connection);\n  var useLegacyOps = options.useLegacyOps == null || options.useLegacyOps == false ? false : true;\n  // If we support write commands let's perform the insert using it  \n  if(!useLegacyOps && hasWriteCommands(connection) \n    && !Buffer.isBuffer(docs) \n    && !(Array.isArray(docs) && docs.length > 0 && Buffer.isBuffer(docs[0]))) {\n      insertWithWriteCommands(this, Array.isArray(docs) ? docs : [docs], options, callback);\n      return this\n  } \n\n  // Backwards compatibility\n  insertAll(this, Array.isArray(docs) ? docs : [docs], options, callback);\n  return this;\n};\n\n//\n// Uses the new write commands available from 2.6 >\n//\nvar insertWithWriteCommands = function(self, docs, options, callback) {\n  // Get the intended namespace for the operation\n  var namespace = self.collectionName;\n\n  // Ensure we have no \\x00 bytes in the name causing wrong parsing\n  if(!!~namespace.indexOf(\"\\x00\")) {\n    return callback(new Error(\"namespace cannot contain a null character\"), null);\n  }\n\n  // Check if we have passed in continue on error\n  var continueOnError = typeof options['keepGoing'] == 'boolean' \n    ? options['keepGoing'] : false;\n  continueOnError = typeof options['continueOnError'] == 'boolean' \n    ? options['continueOnError'] : continueOnError;\n\n  // Do we serialzie functions\n  var serializeFunctions = typeof options.serializeFunctions != 'boolean' \n    ? self.serializeFunctions : options.serializeFunctions;\n\n  // Checkout a write connection\n  var connection = self.db.serverConfig.checkoutWriter();  \n  if(connection instanceof Error && connection.code == -5000) return callback(connection);\n\n  // Do we return the actual result document\n  var fullResult = typeof options.fullResult == 'boolean' ? options.fullResult : false;\n\n  // Collect errorOptions\n  var errorOptions = shared._getWriteConcern(self, options);\n\n  // If we have a write command with no callback and w:0 fail\n  if(errorOptions.w && errorOptions.w != 0 && callback == null) {\n    throw new Error(\"writeConcern requires callback\")\n  }\n\n  // Add the documents and decorate them with id's if they have none\n  for(var index = 0, len = docs.length; index < len; ++index) {\n    var doc = docs[index];\n\n    // Add id to each document if it's not already defined\n    if (!(Buffer.isBuffer(doc))\n      && doc['_id'] == null\n      && self.db.forceServerObjectId != true\n      && options.forceServerObjectId != true) {\n        doc['_id'] = self.pkFactory.createPk();\n    }\n  }\n\n  // Single document write\n  if(docs.length == 1) {\n    // Create the write command\n    var write_command = {\n        insert: namespace\n      , writeConcern: errorOptions\n      , ordered: !continueOnError\n      , documents: docs\n    }\n\n    // Execute the write command\n    return self.db.command(write_command\n      , { connection:connection\n        , checkKeys: typeof options.checkKeys == 'boolean' ? options.checkKeys : true\n        , serializeFunctions: serializeFunctions\n        , writeCommand: true }\n      , function(err, result) {  \n        if(errorOptions.w == 0 && typeof callback == 'function') return callback(null, null);\n        if(errorOptions.w == 0) return;\n        if(callback == null) return;\n        if(err != null) {\n          return callback(err, null);\n        }\n\n        // Result has an error\n        if(!result.ok || Array.isArray(result.writeErrors) && result.writeErrors.length > 0) {\n          var error = utils.toError(result.writeErrors[0].errmsg);\n          error.code = result.writeErrors[0].code;\n          error.err = result.writeErrors[0].errmsg;\n          error.message = result.writeErrors[0].errmsg;\n\n          if (fullResult) return callback(error, result != null ? result : null);\n          // Return the error\n          return callback(error, null);\n        }\n\n        if(fullResult) return callback(null, result);\n        // Return the results for a whole batch\n        callback(null, docs)\n    });    \n  } else {\n    try {\n      // Multiple document write (use bulk)\n      var bulk = !continueOnError ? self.initializeOrderedBulkOp() : self.initializeUnorderedBulkOp();\n      // Add all the documents\n      for(var i = 0; i < docs.length;i++) {\n        bulk.insert(docs[i]);\n      }\n\n      // Execute the command\n      bulk.execute(errorOptions, function(err, result) {\n        if(errorOptions.w == 0 && typeof callback == 'function') return callback(null, null);\n        if(errorOptions.w == 0) return;\n        if(callback == null) return;\n        if(err) return callback(err, null);\n        if(result.hasWriteErrors()) {\n          var error = result.getWriteErrors()[0];\n          error.code = result.getWriteErrors()[0].code;\n          error.err = result.getWriteErrors()[0].errmsg;\n          error.message = result.getWriteErrors()[0].errmsg;\n          \n          if (fullResult) return callback(error, result != null ? result : null);\n          // Return the error\n          return callback(error, null);\n        }\n\n        if(fullResult) return callback(null, result != null ? result : null);\n        // Return the results for a whole batch\n        callback(null, docs)\n      });\n    } catch(err) {\n      callback(utils.toError(err), null);\n    }\n  }\n}\n\n//\n// Uses pre 2.6 OP_INSERT wire protocol\n//\nvar insertAll = function insertAll (self, docs, options, callback) {\n  if('function' === typeof options) callback = options, options = {};\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // Insert options (flags for insert)\n  var insertFlags = {};\n  // If we have a mongodb version >= 1.9.1 support keepGoing attribute\n  if(options['keepGoing'] != null) {\n    insertFlags['keepGoing'] = options['keepGoing'];\n  }\n\n  // If we have a mongodb version >= 1.9.1 support keepGoing attribute\n  if(options['continueOnError'] != null) {\n    insertFlags['continueOnError'] = options['continueOnError'];\n  }\n\n  // DbName\n  var dbName = options['dbName'];\n  // If no dbname defined use the db one\n  if(dbName == null) {\n    dbName = self.db.databaseName;\n  }\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  if(options['serializeFunctions'] != null) {\n    insertFlags['serializeFunctions'] = options['serializeFunctions'];\n  } else {\n    insertFlags['serializeFunctions'] = self.serializeFunctions;\n  }\n\n  // Get checkKeys value\n  var checkKeys = typeof options.checkKeys != 'boolean' ? true : options.checkKeys;\n\n  // Do we return the actual result document\n  var fullResult = typeof options.fullResult == 'boolean' ? options.fullResult : false;\n\n  // Pass in options\n  var insertCommand = new InsertCommand(\n      self.db\n    , dbName + \".\" + self.collectionName, checkKeys, insertFlags);\n\n  // Add the documents and decorate them with id's if they have none\n  for(var index = 0, len = docs.length; index < len; ++index) {\n    var doc = docs[index];\n\n    // Add id to each document if it's not already defined\n    if (!(Buffer.isBuffer(doc))\n      && doc['_id'] == null\n      && self.db.forceServerObjectId != true\n      && options.forceServerObjectId != true) {\n        doc['_id'] = self.pkFactory.createPk();\n    }\n\n    insertCommand.add(doc);\n  }\n\n  // Collect errorOptions\n  var errorOptions = shared._getWriteConcern(self, options);\n  // Default command options\n  var commandOptions = {};\n  // If safe is defined check for error message\n  if(shared._hasWriteConcern(errorOptions) && typeof callback == 'function') {\n    // Set safe option\n    commandOptions['safe'] = errorOptions;\n    // If we have an error option\n    if(typeof errorOptions == 'object') {\n      var keys = Object.keys(errorOptions);\n      for(var i = 0; i < keys.length; i++) {\n        commandOptions[keys[i]] = errorOptions[keys[i]];\n      }\n    }\n\n    // If we have a passed in connection use it\n    if(options.connection) {\n      commandOptions.connection = options.connection;\n    }\n\n    // Execute command with safe options (rolls up both command and safe command into one and executes them on the same connection)\n    self.db._executeInsertCommand(insertCommand, commandOptions, handleWriteResults(function (err, results) {\n      if(err) return callback(err, null);\n      if(results == null) return callback(new Error(\"command failed to return result\"));\n      if(fullResult) return callback(null, results);\n      callback(null, docs);\n    }));\n  } else if(shared._hasWriteConcern(errorOptions) && callback == null) {\n    throw new Error(\"Cannot use a writeConcern without a provided callback\");\n  } else {\n    // Execute the call without a write concern\n    var result = self.db._executeInsertCommand(insertCommand, commandOptions);\n    // If no callback just return\n    if(!callback) return;\n    // If error return error\n    if(result instanceof Error) {\n      return callback(result);\n    }\n\n    // Otherwise just return\n    return callback(null, docs);\n  }\n};\n\n// ***************************************************\n// Remove function\n// ***************************************************\nvar removeWithWriteCommands = function(self, selector, options, callback) {\n  if('function' === typeof selector) {\n    callback = selector;\n    selector = options = {};\n  } else if ('function' === typeof options) {\n    callback = options;\n    options = {};\n  }\n\n  // Get the intended namespace for the operation\n  var namespace = self.collectionName;\n\n  // Ensure we have no \\x00 bytes in the name causing wrong parsing\n  if(!!~namespace.indexOf(\"\\x00\")) {\n    return callback(new Error(\"namespace cannot contain a null character\"), null);\n  }\n\n  // Set default empty selector if none\n  selector = selector == null ? {} : selector;\n\n  // Check if we have passed in continue on error\n  var continueOnError = typeof options['keepGoing'] == 'boolean' \n    ? options['keepGoing'] : false;\n  continueOnError = typeof options['continueOnError'] == 'boolean' \n    ? options['continueOnError'] : continueOnError;\n\n  // Do we serialzie functions\n  var serializeFunctions = typeof options.serializeFunctions != 'boolean' \n    ? self.serializeFunctions : options.serializeFunctions;\n\n  // Checkout a write connection\n  var connection = self.db.serverConfig.checkoutWriter();  \n  if(connection instanceof Error && connection.code == -5000) return callback(connection);\n\n  // Figure out the value of top\n  var limit = options.single == true ? 1 : 0;\n  var upsert = typeof options.upsert == 'boolean' ? options.upsert : false;\n\n  // Do we return the actual result document\n  var fullResult = typeof options.fullResult == 'boolean' ? options.fullResult : false;\n\n  // Collect errorOptions\n  var errorOptions = shared._getWriteConcern(self, options);\n\n  // If we have a write command with no callback and w:0 fail\n  if(errorOptions.w && errorOptions.w != 0 && callback == null) {\n    throw new Error(\"writeConcern requires callback\")\n  }\n\n  // Create the write command\n  var write_command = {\n    delete: namespace,\n    writeConcern: errorOptions,\n    ordered: !continueOnError,\n    deletes: [{\n      q : selector,\n      limit: limit\n    }]\n  }\n\n  // Execute the write command\n  self.db.command(write_command\n    , { connection:connection\n      , checkKeys: false\n      , serializeFunctions: serializeFunctions\n      , writeCommand: true }\n    , function(err, result) {  \n      if(errorOptions.w == 0 && typeof callback == 'function') return callback(null, null);\n      if(errorOptions.w == 0) return;\n      if(callback == null) return;\n      if(err != null) {\n        return callback(err, null);\n      }\n\n      // Result has an error\n      if(!result.ok || Array.isArray(result.writeErrors) && result.writeErrors.length > 0) {\n        var error = utils.toError(result.writeErrors[0].errmsg);\n        error.code = result.writeErrors[0].code;\n        error.err = result.writeErrors[0].errmsg;\n        error.message = result.writeErrors[0].errmsg;\n        // Return the error\n        return callback(error, null);\n      }\n      \n      if(fullResult) return callback(null, result);\n      // Backward compatibility format\n      var r = backWardsCompatibiltyResults(result, 'remove');      \n      // Return the results for a whole batch\n      callback(null, r.n, r)\n  });\n}\n\nvar remove = function remove(selector, options, callback) {\n  if('function' === typeof options) callback = options, options = null;\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // Get a connection\n  var connection = this.db.serverConfig.checkoutWriter();\n  if(connection instanceof Error && connection.code == -5000) return callback(connection);\n  var useLegacyOps = options.useLegacyOps == null || options.useLegacyOps == false ? false : true;\n\n  // If we support write commands let's perform the insert using it  \n  if(!useLegacyOps && hasWriteCommands(connection) && !Buffer.isBuffer(selector)) {\n    return removeWithWriteCommands(this, selector, options, callback);\n  }\n\n  if ('function' === typeof selector) {\n    callback = selector;\n    selector = options = {};\n  } else if ('function' === typeof options) {\n    callback = options;\n    options = {};\n  }\n\n  // Ensure options\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n  // Ensure we have at least an empty selector\n  selector = selector == null ? {} : selector;\n  // Set up flags for the command, if we have a single document remove\n  var flags = 0 | (options.single ? 1 : 0);\n\n  // Do we return the actual result document\n  var fullResult = typeof options.fullResult == 'boolean' ? options.fullResult : false;\n\n  // DbName\n  var dbName = options['dbName'];\n  // If no dbname defined use the db one\n  if(dbName == null) {\n    dbName = this.db.databaseName;\n  }\n\n  // Create a delete command\n  var deleteCommand = new DeleteCommand(\n      this.db\n    , dbName + \".\" + this.collectionName\n    , selector\n    , flags);\n\n  var self = this;\n  var errorOptions = shared._getWriteConcern(self, options);\n\n  // Execute the command, do not add a callback as it's async\n  if(shared._hasWriteConcern(errorOptions) && typeof callback == 'function') {\n    // Insert options\n    var commandOptions = {};\n    // Set safe option\n    commandOptions['safe'] = true;\n    // If we have an error option\n    if(typeof errorOptions == 'object') {\n      var keys = Object.keys(errorOptions);\n      for(var i = 0; i < keys.length; i++) {\n        commandOptions[keys[i]] = errorOptions[keys[i]];\n      }\n    }\n\n    // If we have a passed in connection use it\n    if(options.connection) {\n      commandOptions.connection = options.connection;\n    }\n\n    // Execute command with safe options (rolls up both command and safe command into one and executes them on the same connection)\n    this.db._executeRemoveCommand(deleteCommand, commandOptions, handleWriteResults(function (err, results) {\n      if(err) return callback(err, null);\n      if(results == null) return callback(new Error(\"command failed to return result\"));\n      if(fullResult) return callback(null, results);\n      callback(null, results[0].n);\n    }));\n  } else if(shared._hasWriteConcern(errorOptions) && callback == null) {\n    throw new Error(\"Cannot use a writeConcern without a provided callback\");\n  } else {\n    var result = this.db._executeRemoveCommand(deleteCommand);\n    // If no callback just return\n    if (!callback) return;\n    // If error return error\n    if (result instanceof Error) {\n      return callback(result);\n    }\n    // Otherwise just return\n    return callback();\n  }\n};\n\n// ***************************************************\n// Save function\n// ***************************************************\nvar save = function save(doc, options, callback) {\n  if('function' === typeof options) callback = options, options = null;\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n  // Throw an error if attempting to perform a bulk operation\n  if(Array.isArray(doc)) throw new Error(\"doc parameter must be a single document\");\n  // Extract the id, if we have one we need to do a update command\n  var id = doc['_id'];\n  var commandOptions = shared._getWriteConcern(this, options);\n  if(options.connection) commandOptions.connection = options.connection;\n  if(typeof options.fullResult == 'boolean') commandOptions.fullResult = options.fullResult;\n\n  if(id != null) {\n    commandOptions.upsert = true;\n    this.update({ _id: id }, doc, commandOptions, callback);\n  } else {\n    this.insert(doc, commandOptions, callback && function (err, docs) {\n      if(err) return callback(err, null);\n\n      if(Array.isArray(docs)) {\n        callback(err, docs[0]);\n      } else {\n        callback(err, docs);\n      }\n    });\n  }\n};\n\n// ***************************************************\n// Update document function\n// ***************************************************\nvar updateWithWriteCommands = function(self, selector, document, options, callback) {\n  if('function' === typeof options) callback = options, options = null;\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // Get the intended namespace for the operation\n  var namespace = self.collectionName;\n\n  // Ensure we have no \\x00 bytes in the name causing wrong parsing\n  if(!!~namespace.indexOf(\"\\x00\")) {\n    return callback(new Error(\"namespace cannot contain a null character\"), null);\n  }\n\n  // If we are not providing a selector or document throw\n  if(selector == null || typeof selector != 'object') \n    return callback(new Error(\"selector must be a valid JavaScript object\"));\n  if(document == null || typeof document != 'object') \n    return callback(new Error(\"document must be a valid JavaScript object\"));    \n\n  // Check if we have passed in continue on error\n  var continueOnError = typeof options['keepGoing'] == 'boolean' \n    ? options['keepGoing'] : false;\n  continueOnError = typeof options['continueOnError'] == 'boolean' \n    ? options['continueOnError'] : continueOnError;\n\n  // Do we serialzie functions\n  var serializeFunctions = typeof options.serializeFunctions != 'boolean' \n    ? self.serializeFunctions : options.serializeFunctions;\n\n  // Checkout a write connection\n  var connection = self.db.serverConfig.checkoutWriter();  \n  if(connection instanceof Error && connection.code == -5000) return callback(connection);\n\n  // Figure out the value of top\n  var multi = typeof options.multi == 'boolean' ? options.multi : false;\n  var upsert = typeof options.upsert == 'boolean' ? options.upsert : false;\n\n  // Do we return the actual result document\n  var fullResult = typeof options.fullResult == 'boolean' ? options.fullResult : false;\n\n  // Collect errorOptions\n  var errorOptions = shared._getWriteConcern(self, options);\n\n  // If we have a write command with no callback and w:0 fail\n  if(errorOptions.w && errorOptions.w != 0 && callback == null) {\n    throw new Error(\"writeConcern requires callback\")\n  }\n\n  // Create the write command\n  var write_command = {\n    update: namespace,\n    writeConcern: errorOptions,\n    ordered: !continueOnError,\n    updates: [{\n      q : selector,\n      u: document,\n      multi: multi,\n      upsert: upsert\n    }]\n  }\n\n  // Check if we have a checkKeys override\n  var checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys : false;\n\n  // Execute the write command\n  self.db.command(write_command\n    , { connection:connection\n      , checkKeys: checkKeys\n      , serializeFunctions: serializeFunctions\n      , writeCommand: true }\n    , function(err, result) { \n      if(errorOptions.w == 0 && typeof callback == 'function') return callback(null, null);\n      if(errorOptions.w == 0) return;\n      if(callback == null) return;\n\n      if(errorOptions.w == 0 && typeof callback == 'function') return callback(null, null);\n      if(errorOptions.w == 0) return;\n      if(callback == null) return;\n      if(err != null) {\n        return callback(err, null);\n      }\n\n      // Result has an error\n      if(!result.ok || Array.isArray(result.writeErrors) && result.writeErrors.length > 0) {\n        var error = utils.toError(result.writeErrors[0].errmsg);\n        error.code = result.writeErrors[0].code;\n        error.err = result.writeErrors[0].errmsg;\n        error.message = result.writeErrors[0].errmsg;\n        return callback(error, null);\n      }\n      \n      if(fullResult) return callback(null, result);\n      // Backward compatibility format\n      var r = backWardsCompatibiltyResults(result, 'update');\n      // Return the results for a whole batch\n      callback(null, r.n, r)\n  });\n}\n\nvar backWardsCompatibiltyResults = function(result, op) {\n  // Upserted\n  var upsertedValue = null;\n  var finalResult = null;\n  var updatedExisting = true;\n\n  // We have a single document upserted result\n  if(Array.isArray(result.upserted) || result.upserted != null) {\n    updatedExisting = false;\n    upsertedValue = result.upserted;\n  }\n\n  // Final result\n  if(op == 'remove' || op == 'insert') {\n    finalResult = {ok: true, n: result.n}\n  } else {\n    finalResult = {ok: true, n: result.n, updatedExisting: updatedExisting}\n  }\n\n  if(upsertedValue != null) finalResult.upserted = upsertedValue;\n  return finalResult;\n}\n\nvar handleWriteResults = function handleWriteResults(callback) {\n  return function(err, error) {\n    var documents = error && error.documents;\n    if(!callback) return;\n    // We have an error\n    if(err) return callback(err, null);\n    // If no document something is terribly wrong\n    if(error == null) return callback(utils.toError(\"MongoDB did not return a response\"));\n    // Handle the case where no result was returned\n    if(error != null && documents == null) {\n      if(typeof error.err == 'string') {\n        return callback(utils.toError(error.err));  \n      } else if(typeof error.errmsg == 'string') {\n        return callback(utils.toError(error.errmsg));          \n      } else {\n        return callback(utils.toError(\"Unknown MongoDB error\"));\n      }\n    }\n\n    // Handler normal cases\n    if(documents[0].err || documents[0].errmsg) {\n      callback(utils.toError(documents[0]));\n    } else if(documents[0].jnote || documents[0].wtimeout) {\n      callback(utils.toError(documents[0]));\n    } else {\n      callback(err, documents);\n    }\n  }\n}\n\nvar update = function update(selector, document, options, callback) {\n  if('function' === typeof options) callback = options, options = null;\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // Get a connection\n  var connection = options.connection || this.db.serverConfig.checkoutWriter();\n  if(connection instanceof Error && connection.code == -5000) return callback(connection);\n  var useLegacyOps = options.useLegacyOps == null || options.useLegacyOps == false ? false : true;\n  // If we support write commands let's perform the insert using it  \n  if(!useLegacyOps && hasWriteCommands(connection) && !Buffer.isBuffer(selector) && !Buffer.isBuffer(document)) {\n    return updateWithWriteCommands(this, selector, document, options, callback);\n  }\n\n  // DbName\n  var dbName = options['dbName'];\n  // If no dbname defined use the db one\n  if(dbName == null) {\n    dbName = this.db.databaseName;\n  }\n\n  // If we are not providing a selector or document throw\n  if(selector == null || typeof selector != 'object') return callback(new Error(\"selector must be a valid JavaScript object\"));\n  if(document == null || typeof document != 'object') return callback(new Error(\"document must be a valid JavaScript object\"));\n\n  // Do we return the actual result document\n  var fullResult = typeof options.fullResult == 'boolean' ? options.fullResult : false;\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  if(options['serializeFunctions'] != null) {\n    options['serializeFunctions'] = options['serializeFunctions'];\n  } else {\n    options['serializeFunctions'] = this.serializeFunctions;\n  }\n\n  // Build the options command\n  var updateCommand = new UpdateCommand(\n      this.db\n    , dbName + \".\" + this.collectionName\n    , selector\n    , document\n    , options);\n\n  var self = this;\n  // Unpack the error options if any\n  var errorOptions = shared._getWriteConcern(this, options);\n  // If safe is defined check for error message\n  if(shared._hasWriteConcern(errorOptions) && typeof callback == 'function') {\n    // Insert options\n    var commandOptions = {};\n    // Set safe option\n    commandOptions['safe'] = errorOptions;\n    // If we have an error option\n    if(typeof errorOptions == 'object') {\n      var keys = Object.keys(errorOptions);\n      for(var i = 0; i < keys.length; i++) {\n        commandOptions[keys[i]] = errorOptions[keys[i]];\n      }\n    }\n\n    // If we have a passed in connection use it\n    if(options.connection) {\n      commandOptions.connection = options.connection;\n    }\n\n    // Execute command with safe options (rolls up both command and safe command into one and executes them on the same connection)\n    this.db._executeUpdateCommand(updateCommand, commandOptions, handleWriteResults(function(err, results) {\n      if(err) return callback(err, null);\n      if(results == null) return callback(new Error(\"command failed to return result\"));\n      if(fullResult) return callback(null, results);\n      callback(null, results[0].n, results[0]);\n    }));\n  } else if(shared._hasWriteConcern(errorOptions) && callback == null) {\n    throw new Error(\"Cannot use a writeConcern without a provided callback\");\n  } else {\n    // Execute update\n    var result = this.db._executeUpdateCommand(updateCommand);\n    // If no callback just return\n    if (!callback) return;\n    // If error return error\n    if (result instanceof Error) {\n      return callback(result);\n    }\n    \n    // Otherwise just return\n    return callback();\n  }\n};\n\n// ***************************************************\n// findAndModify function\n// ***************************************************\nvar findAndModify = function findAndModify (query, sort, doc, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  sort = args.length ? args.shift() || [] : [];\n  doc = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n  var self = this;\n\n  var queryObject = {\n     'findandmodify': this.collectionName\n   , 'query': query\n  };\n\n  sort = utils.formattedOrderClause(sort);\n  if (sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? 1 : 0;\n  queryObject.remove = options.remove ? 1 : 0;\n  queryObject.upsert = options.upsert ? 1 : 0;\n\n  if (options.fields) {\n    queryObject.fields = options.fields;\n  }\n\n  if (doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  // Checkout a write connection\n  options.connection = self.db.serverConfig.checkoutWriter();  \n  if(options.connection instanceof Error && options.connection.code == -5000) return callback(options.connection);\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  if(options['serializeFunctions'] != null) {\n    options['serializeFunctions'] = options['serializeFunctions'];\n  } else {\n    options['serializeFunctions'] = this.serializeFunctions;\n  }\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Execute the command\n  this.db.command(queryObject\n    , options, function(err, result) {\n      if(err) return callback(err, null);\n      return callback(null, result.value, result);\n  });\n}\n\n// ***************************************************\n// findAndRemove function\n// ***************************************************\nvar findAndRemove = function(query, sort, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  sort = args.length ? args.shift() || [] : [];\n  options = args.length ? args.shift() || {} : {};\n  // Add the remove option\n  options['remove'] = true;\n  // Execute the callback\n  this.findAndModify(query, sort, null, options, callback);\n}\n\n// Map methods\nexports.insert = insert;\nexports.remove = remove;\nexports.save = save;\nexports.update = update;\nexports.findAndModify = findAndModify;\nexports.findAndRemove = findAndRemove;\n"]}