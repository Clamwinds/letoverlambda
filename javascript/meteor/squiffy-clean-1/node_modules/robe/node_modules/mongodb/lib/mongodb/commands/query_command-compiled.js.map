{"version":3,"sources":["query_command.js"],"names":[],"mappings":"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","file":"query_command-compiled.js","sourcesContent":["var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits;\n\n/**\n  Insert Document Command\n**/\nvar QueryCommand = exports.QueryCommand = function(db, collectionName, queryOptions, numberToSkip, numberToReturn, query, returnFieldSelector, options) {\n  BaseCommand.call(this);\n\n  // Validate correctness off the selector\n  var object = query,\n    object_size;\n  if(Buffer.isBuffer(object)) {\n    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) {\n      var error = new Error(\"query selector raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  object = returnFieldSelector;\n  if(Buffer.isBuffer(object)) {\n    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) {\n      var error = new Error(\"query fields raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Make sure we don't get a null exception\n  options = options == null ? {} : options;\n  // Set up options\n  this.collectionName = collectionName;\n  this.queryOptions = queryOptions;\n  this.numberToSkip = numberToSkip;\n  this.numberToReturn = numberToReturn;\n\n  // Ensure we have no null query\n  query = query == null ? {} : query;\n  // Wrap query in the $query parameter so we can add read preferences for mongos\n  this.query = query;\n  this.returnFieldSelector = returnFieldSelector;\n  this.db = db;\n\n  // Force the slave ok flag to be set if we are not using primary read preference\n  if(this.db && this.db.slaveOk) {\n    this.queryOptions |= QueryCommand.OPTS_SLAVE;\n  }\n\n  // If checkKeys set\n  this.checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys : false;\n\n  // Let us defined on a command basis if we want functions to be serialized or not\n  if(options['serializeFunctions'] != null && options['serializeFunctions']) {\n    this.serializeFunctions = true;\n  }\n};\n\ninherits(QueryCommand, BaseCommand);\n\nQueryCommand.OP_QUERY = 2004;\n\n/*\n * Adds the read prefrence to the current command\n */\nQueryCommand.prototype.setMongosReadPreference = function(readPreference, tags) {\n  // No read preference specified\n  if(readPreference == false) return;\n  // If we have readPreference set to true set to secondary prefered\n  if(readPreference == true) {\n    readPreference = 'secondaryPreferred';\n  } else if(readPreference == 'false') {\n    readPreference = 'primary';\n  }\n\n  // If we have primary read preference ignore it\n  if(readPreference == 'primary' \n    || readPreference.mode == 'primary') return;\n\n  // Force the slave ok flag to be set if we are not using primary read preference\n  if(readPreference != false && readPreference != 'primary') {\n    this.queryOptions |= QueryCommand.OPTS_SLAVE;\n  }\n\n  // Backward compatibility, ensure $query only set on read preference so 1.8.X works\n  if((readPreference != null || tags != null) && this.query['$query'] == null) {\n    this.query = {'$query': this.query};\n  }\n\n  // If we have no readPreference set and no tags, check if the slaveOk bit is set\n  if(readPreference == null && tags == null) {\n    // If we have a slaveOk bit set the read preference for MongoS\n    if(this.queryOptions & QueryCommand.OPTS_SLAVE) {\n      this.query['$readPreference'] = {mode: 'secondary'}\n    } else {\n      this.query['$readPreference'] = {mode: 'primary'}\n    }\n  }\n\n  // Build read preference object\n  if(typeof readPreference == 'object' && readPreference['_type'] == 'ReadPreference') {\n    this.query['$readPreference'] = readPreference.toObject();\n  } else if(readPreference != null) {\n    // Add the read preference\n    this.query['$readPreference'] = {mode: readPreference};\n\n    // If we have tags let's add them\n    if(tags != null) {\n      this.query['$readPreference']['tags'] = tags;\n    }\n  }\n}\n\n/*\nstruct {\n    MsgHeader header;                 // standard message header\n    int32     opts;                   // query options.  See below for details.\n    cstring   fullCollectionName;     // \"dbname.collectionname\"\n    int32     numberToSkip;           // number of documents to skip when returning results\n    int32     numberToReturn;         // number of documents to return in the first OP_REPLY\n    BSON      query ;                 // query object.  See below for details.\n  [ BSON      returnFieldSelector; ]  // OPTIONAL : selector indicating the fields to return.  See below for details.\n}\n*/\nQueryCommand.prototype.toBinary = function(bsonSettings) {\n  // Validate that we are not passing 0x00 in the colletion name\n  if(!!~this.collectionName.indexOf(\"\\x00\")) {\n    throw new Error(\"namespace cannot contain a null character\");\n  }\n\n  // Total length of the command\n  var totalLengthOfCommand = 0;\n  // Calculate total length of the document\n  if(Buffer.isBuffer(this.query)) {\n    totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + 4 + this.query.length + (4 * 4);\n  } else {\n    totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + 4 + this.db.bson.calculateObjectSize(this.query, this.serializeFunctions, true) + (4 * 4);\n  }\n\n  // Calculate extra fields size\n  if(this.returnFieldSelector != null && !(Buffer.isBuffer(this.returnFieldSelector)))  {\n    if(Object.keys(this.returnFieldSelector).length > 0) {\n      totalLengthOfCommand += this.db.bson.calculateObjectSize(this.returnFieldSelector, this.serializeFunctions, true);\n    }\n  } else if(Buffer.isBuffer(this.returnFieldSelector)) {\n    totalLengthOfCommand += this.returnFieldSelector.length;\n  }\n\n  // Enforce maximum bson size\n  if(!bsonSettings.disableDriverBSONSizeCheck \n    && totalLengthOfCommand > bsonSettings.maxBsonSize) \n    throw new Error(\"Document exceeds maximum allowed bson size of \" + bsonSettings.maxBsonSize + \" bytes\");\n\n  if(bsonSettings.disableDriverBSONSizeCheck \n    && totalLengthOfCommand > bsonSettings.maxMessageSizeBytes) \n    throw new Error(\"Command exceeds maximum message size of \" + bsonSettings.maxMessageSizeBytes + \" bytes\");\n\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;\n  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index] = totalLengthOfCommand & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the request ID\n  _command[_index + 3] = (this.requestId >> 24) & 0xff;\n  _command[_index + 2] = (this.requestId >> 16) & 0xff;\n  _command[_index + 1] = (this.requestId >> 8) & 0xff;\n  _command[_index] = this.requestId & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  // Write the op_code for the command\n  _command[_index + 3] = (QueryCommand.OP_QUERY >> 24) & 0xff;\n  _command[_index + 2] = (QueryCommand.OP_QUERY >> 16) & 0xff;\n  _command[_index + 1] = (QueryCommand.OP_QUERY >> 8) & 0xff;\n  _command[_index] = QueryCommand.OP_QUERY & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write the query options\n  _command[_index + 3] = (this.queryOptions >> 24) & 0xff;\n  _command[_index + 2] = (this.queryOptions >> 16) & 0xff;\n  _command[_index + 1] = (this.queryOptions >> 8) & 0xff;\n  _command[_index] = this.queryOptions & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write the collection name to the command\n  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;\n  _command[_index - 1] = 0;\n\n  // Write the number of documents to skip\n  _command[_index + 3] = (this.numberToSkip >> 24) & 0xff;\n  _command[_index + 2] = (this.numberToSkip >> 16) & 0xff;\n  _command[_index + 1] = (this.numberToSkip >> 8) & 0xff;\n  _command[_index] = this.numberToSkip & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write the number of documents to return\n  _command[_index + 3] = (this.numberToReturn >> 24) & 0xff;\n  _command[_index + 2] = (this.numberToReturn >> 16) & 0xff;\n  _command[_index + 1] = (this.numberToReturn >> 8) & 0xff;\n  _command[_index] = this.numberToReturn & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Document binary length\n  var documentLength = 0\n  var object = this.query;\n\n  // Serialize the selector\n  if(Buffer.isBuffer(object)) {\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n  } else {\n    // If $query we need to check for a valid document\n    if(this.query['$query']) {\n      this.db.bson.serializeWithBufferAndIndex(object['$query'], this.checkKeys, _command, _index, this.serializeFunctions) - _index + 1;\n      // Cannot check keys due to $query\n      this.checkKeys = false;\n    }\n    \n    // Serialize the document straight to the buffer\n    documentLength = this.db.bson.serializeWithBufferAndIndex(object, this.checkKeys, _command, _index, this.serializeFunctions) - _index + 1;\n  }\n\n  // Write the length to the document\n  _command[_index + 3] = (documentLength >> 24) & 0xff;\n  _command[_index + 2] = (documentLength >> 16) & 0xff;\n  _command[_index + 1] = (documentLength >> 8) & 0xff;\n  _command[_index] = documentLength & 0xff;\n  // Update index in buffer\n  _index = _index + documentLength;\n  // // Add terminating 0 for the object\n  _command[_index - 1] = 0;\n\n  // Push field selector if available\n  if(this.returnFieldSelector != null && !(Buffer.isBuffer(this.returnFieldSelector)))  {\n    if(Object.keys(this.returnFieldSelector).length > 0) {\n      var documentLength = this.db.bson.serializeWithBufferAndIndex(this.returnFieldSelector, this.checkKeys, _command, _index, this.serializeFunctions) - _index + 1;\n      // Write the length to the document\n      _command[_index + 3] = (documentLength >> 24) & 0xff;\n      _command[_index + 2] = (documentLength >> 16) & 0xff;\n      _command[_index + 1] = (documentLength >> 8) & 0xff;\n      _command[_index] = documentLength & 0xff;\n      // Update index in buffer\n      _index = _index + documentLength;\n      // Add terminating 0 for the object\n      _command[_index - 1] = 0;\n    }\n  } if(this.returnFieldSelector != null && Buffer.isBuffer(this.returnFieldSelector))  {\n    // Document binary length\n    var documentLength = 0\n    var object = this.returnFieldSelector;\n\n    // Serialize the selector\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n\n    // Write the length to the document\n    _command[_index + 3] = (documentLength >> 24) & 0xff;\n    _command[_index + 2] = (documentLength >> 16) & 0xff;\n    _command[_index + 1] = (documentLength >> 8) & 0xff;\n    _command[_index] = documentLength & 0xff;\n    // Update index in buffer\n    _index = _index + documentLength;\n    // Add terminating 0 for the object\n    _command[_index - 1] = 0;\n  }\n\n  // Return finished command\n  return _command;\n};\n\n// Constants\nQueryCommand.OPTS_NONE = 0;\nQueryCommand.OPTS_TAILABLE_CURSOR = 2;\nQueryCommand.OPTS_SLAVE = 4;\nQueryCommand.OPTS_OPLOG_REPLAY = 8;\nQueryCommand.OPTS_NO_CURSOR_TIMEOUT = 16;\nQueryCommand.OPTS_AWAIT_DATA = 32;\nQueryCommand.OPTS_EXHAUST = 64;\nQueryCommand.OPTS_PARTIAL = 128;"]}