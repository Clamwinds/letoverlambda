{"version":3,"sources":["update_command.js"],"names":[],"mappings":"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","file":"update_command-compiled.js","sourcesContent":["var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits;\n\n/**\n  Update Document Command\n**/\nvar UpdateCommand = exports.UpdateCommand = function(db, collectionName, spec, document, options) {\n  BaseCommand.call(this);\n\n  var object = spec;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;    \n    if(object_size != object.length)  {\n      var error = new Error(\"update spec raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  var object = document;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;    \n    if(object_size != object.length)  {\n      var error = new Error(\"update document raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  this.collectionName = collectionName;\n  this.spec = spec;\n  this.document = document;\n  this.db = db;\n  this.serializeFunctions = false;\n  this.checkKeys = typeof options.checkKeys != 'boolean' ? false : options.checkKeys;\n\n  // Generate correct flags\n  var db_upsert = 0;\n  var db_multi_update = 0;\n  db_upsert = options != null && options['upsert'] != null ? (options['upsert'] == true ? 1 : 0) : db_upsert;\n  db_multi_update = options != null && options['multi'] != null ? (options['multi'] == true ? 1 : 0) : db_multi_update;\n\n  // Flags\n  this.flags = parseInt(db_multi_update.toString() + db_upsert.toString(), 2);\n  // Let us defined on a command basis if we want functions to be serialized or not\n  if(options['serializeFunctions'] != null && options['serializeFunctions']) {\n    this.serializeFunctions = true;\n  }\n};\n\ninherits(UpdateCommand, BaseCommand);\n\nUpdateCommand.OP_UPDATE = 2001;\n\n/*\nstruct {\n    MsgHeader header;             // standard message header\n    int32     ZERO;               // 0 - reserved for future use\n    cstring   fullCollectionName; // \"dbname.collectionname\"\n    int32     flags;              // bit vector. see below\n    BSON      spec;               // the query to select the document\n    BSON      document;           // the document data to update with or insert\n}\n*/\nUpdateCommand.prototype.toBinary = function(bsonSettings) {\n  // Validate that we are not passing 0x00 in the colletion name\n  if(!!~this.collectionName.indexOf(\"\\x00\")) {\n    throw new Error(\"namespace cannot contain a null character\");\n  }\n\n  // Calculate total length of the document\n  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + this.db.bson.calculateObjectSize(this.spec, false, true) +\n      this.db.bson.calculateObjectSize(this.document, this.serializeFunctions, true) + (4 * 4);\n\n  // Enforce maximum bson size\n  if(!bsonSettings.disableDriverBSONSizeCheck \n    && totalLengthOfCommand > bsonSettings.maxBsonSize) \n    throw new Error(\"Document exceeds maximum allowed bson size of \" + bsonSettings.maxBsonSize + \" bytes\");\n\n  if(bsonSettings.disableDriverBSONSizeCheck \n    && totalLengthOfCommand > bsonSettings.maxMessageSizeBytes) \n    throw new Error(\"Command exceeds maximum message size of \" + bsonSettings.maxMessageSizeBytes + \" bytes\");\n\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;     \n  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index] = totalLengthOfCommand & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the request ID\n  _command[_index + 3] = (this.requestId >> 24) & 0xff;     \n  _command[_index + 2] = (this.requestId >> 16) & 0xff;\n  _command[_index + 1] = (this.requestId >> 8) & 0xff;\n  _command[_index] = this.requestId & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  // Write the op_code for the command\n  _command[_index + 3] = (UpdateCommand.OP_UPDATE >> 24) & 0xff;     \n  _command[_index + 2] = (UpdateCommand.OP_UPDATE >> 16) & 0xff;\n  _command[_index + 1] = (UpdateCommand.OP_UPDATE >> 8) & 0xff;\n  _command[_index] = UpdateCommand.OP_UPDATE & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n\n  // Write the collection name to the command\n  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;\n  _command[_index - 1] = 0;    \n\n  // Write the update flags\n  _command[_index + 3] = (this.flags >> 24) & 0xff;     \n  _command[_index + 2] = (this.flags >> 16) & 0xff;\n  _command[_index + 1] = (this.flags >> 8) & 0xff;\n  _command[_index] = this.flags & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Document binary length\n  var documentLength = 0\n  var object = this.spec;\n\n  // Serialize the selector\n  // If we are passing a raw buffer, do minimal validation\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) throw new Error(\"raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n  } else {\n    documentLength = this.db.bson.serializeWithBufferAndIndex(object, this.checkKeys, _command, _index, false) - _index + 1;\n  }\n\n  // Write the length to the document\n  _command[_index + 3] = (documentLength >> 24) & 0xff;     \n  _command[_index + 2] = (documentLength >> 16) & 0xff;\n  _command[_index + 1] = (documentLength >> 8) & 0xff;\n  _command[_index] = documentLength & 0xff;\n  // Update index in buffer\n  _index = _index + documentLength;\n  // Add terminating 0 for the object\n  _command[_index - 1] = 0;    \n\n  // Document binary length\n  var documentLength = 0\n  var object = this.document;\n\n  // Serialize the document\n  // If we are passing a raw buffer, do minimal validation\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) throw new Error(\"raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n  } else {    \n    documentLength = this.db.bson.serializeWithBufferAndIndex(object, false, _command, _index, this.serializeFunctions) - _index + 1;\n  }\n\n  // Write the length to the document\n  _command[_index + 3] = (documentLength >> 24) & 0xff;     \n  _command[_index + 2] = (documentLength >> 16) & 0xff;\n  _command[_index + 1] = (documentLength >> 8) & 0xff;\n  _command[_index] = documentLength & 0xff;\n  // Update index in buffer\n  _index = _index + documentLength;\n  // Add terminating 0 for the object\n  _command[_index - 1] = 0;    \n\n  return _command;\n};\n\n// Constants\nUpdateCommand.DB_UPSERT = 0;\nUpdateCommand.DB_MULTI_UPDATE = 1;"]}