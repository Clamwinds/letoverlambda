{"version":3,"sources":["read_preference.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,IAAI,cAAc,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE;AACxC,MAAG,EAAE,IAAI,YAAY,cAAc,CAAA,AAAC,EAClC,OAAO,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACxC,MAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;AAC9B,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CAClB;;;;;AAAA,AAKD,cAAc,CAAC,OAAO,GAAG,UAAS,KAAK,EAAE;AACvC,SAAQ,KAAK,IAAI,cAAc,CAAC,OAAO,IAAI,KAAK,IAAI,cAAc,CAAC,iBAAiB,IAC/E,KAAK,IAAI,cAAc,CAAC,SAAS,IAAI,KAAK,IAAI,cAAc,CAAC,mBAAmB,IAChF,KAAK,IAAI,cAAc,CAAC,OAAO,IAC/B,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAE;CACxD;;;;;AAAA,AAKD,cAAc,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,IAAI,EAAE;AAChD,MAAI,KAAK,GAAG,OAAO,IAAI,IAAI,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACvD,SAAO,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;CACtC;;;;;AAAA,AAKD,cAAc,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAW;AAC7C,MAAI,MAAM,GAAG,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC;;AAE9B,MAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;AACpB,UAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;GAC5B;;AAED,SAAO,MAAM,CAAC;CACf;;;;;AAAA,AAKD,cAAc,CAAC,OAAO,GAAG,SAAS,CAAC;AACnC,cAAc,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;AACtD,cAAc,CAAC,SAAS,GAAG,WAAW,CAAC;AACvC,cAAc,CAAC,mBAAmB,GAAG,oBAAoB,CAAC;AAC1D,cAAc,CAAC,OAAO,GAAG,SAAS;;;;;AAAA,AAKlC,OAAO,CAAC,cAAc,GAAI,cAAc,CAAC","file":"read_preference-compiled.js","sourcesContent":["/**\n * A class representation of the Read Preference.\n *\n * Read Preferences\n *  - **ReadPreference.PRIMARY**, Read from primary only. All operations produce an error (throw an exception where applicable) if primary is unavailable. Cannot be combined with tags (This is the default.).\n *  - **ReadPreference.PRIMARY_PREFERRED**, Read from primary if available, otherwise a secondary.\n *  - **ReadPreference.SECONDARY**, Read from secondary if available, otherwise error.\n *  - **ReadPreference.SECONDARY_PREFERRED**, Read from a secondary if available, otherwise read from the primary.\n *  - **ReadPreference.NEAREST**, All modes read from among the nearest candidates, but unlike other modes, NEAREST will include both the primary and all secondaries in the random selection.\n *\n * @class Represents a Read Preference.\n * @param {String} the read preference type\n * @param {Object} tags\n * @return {ReadPreference}\n */\nvar ReadPreference = function(mode, tags) {\n  if(!(this instanceof ReadPreference))\n    return new ReadPreference(mode, tags);\n  this._type = 'ReadPreference';\n  this.mode = mode;\n  this.tags = tags;\n}\n\n/**\n * @ignore\n */\nReadPreference.isValid = function(_mode) {\n  return (_mode == ReadPreference.PRIMARY || _mode == ReadPreference.PRIMARY_PREFERRED\n    || _mode == ReadPreference.SECONDARY || _mode == ReadPreference.SECONDARY_PREFERRED\n    || _mode == ReadPreference.NEAREST\n    || _mode == true || _mode == false || _mode == null);\n}\n\n/**\n * @ignore\n */\nReadPreference.prototype.isValid = function(mode) {\n  var _mode = typeof mode == 'string' ? mode : this.mode;\n  return ReadPreference.isValid(_mode);\n}\n\n/**\n * @ignore\n */\nReadPreference.prototype.toObject = function() {\n  var object = {mode:this.mode};\n\n  if(this.tags != null) {\n    object['tags'] = this.tags;\n  }\n\n  return object;\n}\n\n/**\n * @ignore\n */\nReadPreference.PRIMARY = 'primary';\nReadPreference.PRIMARY_PREFERRED = 'primaryPreferred';\nReadPreference.SECONDARY = 'secondary';\nReadPreference.SECONDARY_PREFERRED = 'secondaryPreferred';\nReadPreference.NEAREST = 'nearest'\n\n/**\n * @ignore\n */\nexports.ReadPreference  = ReadPreference;"]}