{"version":3,"sources":["options.js"],"names":[],"mappings":"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","file":"options-compiled.js","sourcesContent":["var PingStrategy = require('./strategies/ping_strategy').PingStrategy\n  , StatisticsStrategy = require('./strategies/statistics_strategy').StatisticsStrategy\n  , ReadPreference = require('../read_preference').ReadPreference;\n\nvar Options = function(options) {\n  options = options || {};\n  this._options = options;\n  this.ha = options.ha || true;\n  this.haInterval = options.haInterval || 2000;\n  this.reconnectWait = options.reconnectWait || 1000;\n  this.retries = options.retries || 30;\n  this.rs_name = options.rs_name;\n  this.socketOptions = options.socketOptions || {};\n  this.readPreference = options.readPreference;\n  this.readSecondary = options.read_secondary;\n  this.poolSize = options.poolSize == null ? 5 : options.poolSize;\n  this.strategy = options.strategy || 'ping';\n  this.secondaryAcceptableLatencyMS = options.secondaryAcceptableLatencyMS || 15;\n  this.connectArbiter = options.connectArbiter || false;\n  this.connectWithNoPrimary = options.connectWithNoPrimary || false;\n  this.logger = options.logger;\n  this.ssl = options.ssl || false;\n  this.sslValidate = options.sslValidate || false;\n  this.sslCA = options.sslCA;\n  this.sslCert = options.sslCert;\n  this.sslKey = options.sslKey;\n  this.sslPass = options.sslPass;\n  this.emitOpen = options.emitOpen || true;\n}\n\nOptions.prototype.init = function() {\n  if(this.sslValidate && (!Array.isArray(this.sslCA) || this.sslCA.length == 0)) {\n    throw new Error(\"The driver expects an Array of CA certificates in the sslCA parameter when enabling sslValidate\");\n  }  \n\n  // Make sure strategy is one of the two allowed\n  if(this.strategy != null && (this.strategy != 'ping' && this.strategy != 'statistical' && this.strategy != 'none')) \n      throw new Error(\"Only ping or statistical strategies allowed\");    \n  \n  if(this.strategy == null) this.strategy = 'ping';\n  \n  // Set logger if strategy exists\n  if(this.strategyInstance) this.strategyInstance.logger = this.logger;\n\n  // Unpack read Preference\n  var readPreference = this.readPreference;\n  // Validate correctness of Read preferences\n  if(readPreference != null) {\n    if(readPreference != ReadPreference.PRIMARY && readPreference != ReadPreference.PRIMARY_PREFERRED\n      && readPreference != ReadPreference.SECONDARY && readPreference != ReadPreference.SECONDARY_PREFERRED\n      && readPreference != ReadPreference.NEAREST && typeof readPreference != 'object' && readPreference['_type'] != 'ReadPreference') {\n      throw new Error(\"Illegal readPreference mode specified, \" + JSON.stringify(readPreference));\n    }\n\n    this.readPreference = readPreference;\n  } else {\n    this.readPreference = null;\n  } \n\n     // Ensure read_secondary is set correctly\n  if(this.readSecondary != null)\n    this.readSecondary = this.readPreference == ReadPreference.PRIMARY \n        || this.readPreference == false  \n        || this.readPreference == null ? false : true;\n\n  // Ensure correct slave set\n  if(this.readSecondary) this.slaveOk = true;\n\n  // Set up logger if any set\n  this.logger = this.logger != null\n    && (typeof this.logger.debug == 'function')\n    && (typeof this.logger.error == 'function')\n    && (typeof this.logger.debug == 'function')\n      ? this.logger : {error:function(message, object) {}, log:function(message, object) {}, debug:function(message, object) {}};  \n\n  // Connection timeout\n  this.connectTimeoutMS = typeof this.socketOptions.connectTimeoutMS == 'number'\n    ? this.socketOptions.connectTimeoutMS\n    : 1000;\n\n  // Socket connection timeout\n  this.socketTimeoutMS = typeof this.socketOptions.socketTimeoutMS == 'number'\n    ? this.socketOptions.socketTimeoutMS\n    : 30000;\n}\n\nOptions.prototype.decorateAndClean = function(servers, callBackStore) {\n  var self = this;\n\n  // var de duplicate list\n  var uniqueServers = {};\n  // De-duplicate any servers in the seed list\n  for(var i = 0; i < servers.length; i++) {\n    var server = servers[i];\n    // If server does not exist set it\n    if(uniqueServers[server.host + \":\" + server.port] == null) {\n      uniqueServers[server.host + \":\" + server.port] = server;\n    }\n  }\n\n  // Let's set the deduplicated list of servers\n  var finalServers = [];\n  // Add the servers\n  for(var key in uniqueServers) {\n    finalServers.push(uniqueServers[key]);\n  }\n\n  finalServers.forEach(function(server) {\n    // Ensure no server has reconnect on\n    server.options.auto_reconnect = false;\n    // Set up ssl options\n    server.ssl = self.ssl;\n    server.sslValidate = self.sslValidate;\n    server.sslCA = self.sslCA;\n    server.sslCert = self.sslCert;\n    server.sslKey = self.sslKey;\n    server.sslPass = self.sslPass;\n    server.poolSize = self.poolSize;\n    // Set callback store\n    server._callBackStore = callBackStore;\n  });\n\n  return finalServers;\n}\n\nexports.Options = Options;\n"]}