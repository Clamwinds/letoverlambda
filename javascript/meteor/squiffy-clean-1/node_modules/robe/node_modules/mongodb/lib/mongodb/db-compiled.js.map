{"version":3,"sources":["db.js"],"names":[],"mappings":";;;;AAIA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,YAAY;IAC/D,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,SAAS;IACtD,UAAU,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,UAAU;IAC1D,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,KAAK;IAChC,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,UAAU;IAC/C,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,MAAM;IAC9C,OAAO,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC,OAAO;IAC3D,cAAc,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC,cAAc;IACvE,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC,MAAM;IAC9C,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM;IACnC,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY;IAC7C,aAAa,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC,aAAa;IAClE,aAAa,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,aAAa;IACzD,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM;IAC1B,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ;IACnC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IAC1B,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;;;AAAA;IAG1B,uBAAuB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC,YAAY;IACtE,2BAA2B,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,YAAY;IAC9E,yBAAyB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC,YAAY;IAC1E,0BAA0B,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,YAAY;IAC5E,yBAAyB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC,YAAY;IAC1E,0BAA0B,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,YAAY,CAAC;;AAEjF,IAAI,WAAW,GAAG,KAAK;;AAAC,AAExB,IAAI;AACF,SAAO,CAAC,UAAU,CAAC,CAAC;AACpB,aAAW,GAAG,IAAI,CAAC;CACpB,CAAC,OAAM,GAAG,EAAE,EAAE;;;AAAA,AAGf,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AA6B/C,SAAS,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE;AAC/C,MAAG,EAAE,IAAI,YAAY,EAAE,CAAA,AAAC,EAAE,OAAO,IAAI,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;AAC7E,cAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,MAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,MAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,GAAG,EAAE,GAAG,OAAO;;AAAC,AAE9C,MAAI,CAAC,kBAAkB,GAAG,KAAK;;AAAC,AAEhC,MAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;;;AAAC,AAG/G,MAAG,CAAC,gBAAgB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,YAAY,IAAI,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE;AACrJ,UAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;GAC/F,MAAM,IAAG,CAAC,gBAAgB,IAAI,OAAO,IAAI,CAAC,YAAY,IAAI,QAAQ,EAAC;;AAElE,QAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;GAChC;;;AAAA,AAGD,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACnF,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;;;AAAC,AAGxF,MAAI,CAAC,gBAAgB,GAAG,OAAO,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;;;AAAC,AAGpH,sBAAoB,CAAC,YAAY,CAAC;;;AAAC,AAGnC,MAAI;AACF,QAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;;AAAC,AAEhD,QAAI,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;AAChH,WAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ;;AAAC,AAEnC,QAAI,IAAI,GAAG,OAAO,CAAC,IAAI;;;AAAC,AAGxB,QAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACvL,QAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY;;;AAAC,AAG9F,QAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;AACjC,QAAI,CAAC,eAAe,GAAG,OAAO;;;AAAC,AAG/B,QAAI,CAAC,iBAAiB,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;GAC5G,CAAC,OAAO,GAAG,EAAE;;AAEZ,QAAI,GAAG,GAAG,kDAAkD,GAClD,mCAAmC,CAAC;AAC9C,UAAM,KAAK,CAAC,GAAG,CAAC,CAAC;GAClB;;;AAAA,AAGD,MAAI,CAAC,MAAM,GAAG,cAAc,CAAC;;AAE7B,MAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;AAC5F,MAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,KAAK;;;AAAC,AAG/G,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;;;AAAC,AAGlE,MAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,IACvB,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,IACtB,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,IACtB,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,IAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;AAC/B,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,2FAA2F,CAAC,CAAC;AACzG,WAAO,CAAC,GAAG,CAAC,2FAA2F,CAAC,CAAC;AACzG,WAAO,CAAC,GAAG,CAAC,2FAA2F,CAAC,CAAC;AACzG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,2FAA2F,CAAC,CAAC;AACzG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,WAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;GACzG;;;AAAA,AAGD,MAAI,CAAC,UAAU,GAAE,EAAE,CAAC;AACpB,MAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,MAAI,CAAC,UAAU,GAAG,KAAK;;;AAAC,AAGxB,MAAI,CAAC,QAAQ,GAAG,EAAE;;;AAAC,AAGnB,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,IACnC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,UAAU,AAAC,IAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,UAAU,AAAC,IAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,UAAU,AAAC,GAC7C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAC,KAAK,EAAC,UAAS,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAC,UAAS,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAC,UAAS,OAAO,EAAE,MAAM,EAAE,EAAE,EAAC;;;AAAC,AAGvI,MAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACvC,MAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/F,MAAI,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;;AAAC,AAEhC,MAAI,CAAC,aAAa,GAAG,EAAC,KAAK,EAAC,EAAE,EAAE,UAAU,EAAC,EAAE,EAAE,SAAS,EAAC,EAAE,EAAE,OAAO,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAC;;;AAAC,AAGnF,MAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,KAAK;;;AAAC,AAG5G,MAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK;;;AAAC,AAG/D,MAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,KAAK;;;AAAC,AAGtG,MAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;AAChC,QAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;GAChD;;;AAAA,AAGD,MAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrG,MAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,EAAE;;;AAAC,AAGhG,MAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc;;;AAAC,AAGlD,MAAG,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,SAAS,IAChD,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,mBAAmB,EAAE;AAC3D,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC;GACrB;;;;AAAA,AAID,MAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,IAAI,IAAI,EAAE;AACnD,QAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;GAC/E,MAAM,IAAG,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;AACrC,QAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;GAC1D;;;AAAA,AAGD,MAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;CACtC;;;;;AAAC,AAKF,SAAS,oBAAoB,CAAC,YAAY,EAAE;AAC1C,MAAG,OAAO,YAAY,KAAK,QAAQ,EAAE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACvF,MAAG,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AAC1F,MAAG,YAAY,IAAI,WAAW,EAAE,OAAO;;AAEvC,MAAI,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC9C,OAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,+CAA+C,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;GAC1I;CACF;;;;;AAAA,AAKD,QAAQ,CAAC,EAAE,EAAE,YAAY,CAAC;;;;;;;;;AAAC,AAS3B,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,QAAQ,EAAE;AACrC,MAAI,IAAI,GAAG,IAAI;;;AAAC,AAGhB,MAAG,IAAI,CAAC,UAAU,EAAE;;AAElB,QAAI,CAAC,KAAK,EAAE;;AAAC,AAEb,UAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;GACvF;;;AAAA,AAGD,MAAG,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;;AAAA,AAGzF,MAAI,CAAC,UAAU,GAAG,IAAI;;;AAAC,AAGvB,MAAI,CAAC,MAAM,GAAG,YAAY;;;AAAC,AAG3B,MAAG,IAAI,CAAC,YAAY,YAAY,MAAM,IAAI,IAAI,CAAC,YAAY,YAAY,OAAO,IAAI,IAAI,CAAC,YAAY,YAAY,MAAM,EAAE;;AAErH,QAAI,eAAe,GAAG,EAAE,CAAC;AACzB,SAAI,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AACzC,qBAAe,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;KACxD;AACD,mBAAe,CAAC,SAAS,GAAG,IAAI;;;AAAC,AAGjC,QAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,eAAe,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACrE,UAAG,GAAG,IAAI,IAAI,EAAE;;AAEd,eAAO,IAAI,CAAC,KAAK,CAAC,YAAY;;AAE5B,iBAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAC5B,CAAC,CAAC;OACJ;;AAAA,AAED,UAAI,CAAC,MAAM,GAAG,WAAW;;AAAC,AAE1B,UAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,uBAAuB,CAAC,IAAI,CAAC,CAAC;;AAAA,AAE3D,aAAO,CAAC,QAAQ,CAAC,YAAW;AAC1B,YAAI;AACF,kBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACtB,CAAC,OAAM,GAAG,EAAE;AACX,cAAI,CAAC,KAAK,EAAE,CAAC;AACb,gBAAM,GAAG,CAAC;SACX;OACF,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,MAAM;AACL,QAAI;AACF,cAAQ,CAAC,KAAK,CAAC,4DAA4D,CAAC,EAAE,IAAI,CAAC,CAAC;KACrF,CAAC,OAAM,GAAG,EAAE;AACX,UAAI,CAAC,KAAK,EAAE,CAAC;AACb,YAAM,GAAG,CAAC;KACX;GACF;CACF;;;;;;;;;AAAC,AASF,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,UAAS,MAAM,EAAE;;AAEjC,MAAI,OAAO,GAAG,EAAE,CAAC;AACjB,OAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;AAC3B,WAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;GAClC;;;AAAA,AAGD,SAAO,CAAC,oBAAoB,CAAC,GAAG,IAAI;;AAAC,AAErC,MAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;;;AAAC,AAGlD,MAAG,CAAC,EAAE,EAAE;AACN,MAAE,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;GACjD;;;AAAA,AAGD,SAAO,EAAE,CAAC;CACX;;;;;;;;;;AAAC,AAUF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,UAAU,EAAE,QAAQ,EAAE;AAClD,MAAI,IAAI,GAAG,IAAI;;AAAC,AAEhB,MAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;;AAEhC,MAAG,OAAO,UAAU,IAAI,UAAU,EAAE;AAClC,YAAQ,GAAG,UAAU,CAAC;GACvB,MAAM,IAAG,OAAO,UAAU,IAAI,SAAS,EAAE;AACxC,QAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;GACtC;;AAED,MAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAS,GAAG,EAAE,MAAM,EAAE;;AAE5C,QAAI,CAAC,UAAU,GAAG,KAAK;;AAAC,AAExB,QAAG,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,YAAW;AACvC,cAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KACvB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;;;;;;;;AAAC,AASF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,QAAQ,EAAE;AACtC,MAAG,QAAQ,IAAI,IAAI,EAAE,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5C,UAAQ,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;CACjC,CAAC;;AAEF,IAAI,oBAAoB,GAAG,UAAS,YAAY,EAAE;AAChD,MAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;;AAEtC,SAAO,UAAS,OAAO,EAAE;AACvB,QAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACzB,WAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,YAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;;AAAC,AAE9C,YAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;AAChC,iBAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;SACnE;OACF;KACF,MAAM;AACL,UAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3C,UAAG,KAAK,IAAI,CAAC,EAAE;AACb,eAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;OAC7D;KACF;;;AAAA,AAGD,WAAO,OAAO,CAAC;GAChB,CAAA;CACF;;;;;;;;;;;;;;AAAA,AAcD,EAAE,CAAC,SAAS,CAAC,eAAe,GAAG,UAAS,MAAM,EAAE,OAAO,EAAE;AACvD,QAAM,GAAG,MAAM,IAAI,EAAE,CAAC;AACtB,SAAO,GAAG,OAAO,IAAI,EAAE;;;AAAC,AAGxB,MAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;;AAAC,AAEpD,MAAG,UAAU,IAAI,UAAU,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;;AAExE,QAAI,MAAM,GAAG,OAAO,CAAC,SAAS,GAAG,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC,GAAG,EAAE;;AAAA,AAEpE,QAAI,OAAO,GAAG,EAAE,eAAe,EAAG,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;;AAAC,AAEzE,WAAO,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,2BAA2B,CAAC,EAAE,OAAO,EAAE,EAAC,SAAS,EAAE,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;GACxJ;;;AAAA,AAGD,MAAG,UAAU,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,yBAAyB,EAAE;;;AAGzE,QAAG,OAAO,MAAM,CAAC,IAAI,IAAI,QAAQ,IAAI,CAAE,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,AAAC,EAAE;AACrG,YAAM,GAAG,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzC,YAAM,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;KAC1D;GACF;;;AAAA,AAGD,MAAG,MAAM,IAAI,IAAI,EAAE;AACjB,UAAM,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;GAC5C;;;AAAA,AAGD,MAAG,MAAM,CAAC,IAAI,EAAE;AACd,UAAM,GAAG,EAAC,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,cAAc,EAAC,CAAC,EAAC,CAAC;GAC/D,MAAM;AACL,UAAM,GAAG,EAAC,IAAI,EAAC,cAAc,EAAC,CAAC;GAChC;;;AAAA,AAGD,MAAI,OAAO,GAAG,EAAC,UAAU,EAAE,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAC;;AAAA,AAEnE,MAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;;AAAC,AAE1F,MAAG,OAAO,CAAC,SAAS,EAAE,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;AAAA,AAEnE,SAAO,MAAM,CAAC;CACf;;;;;;;;;;;;;;AAAC,AAcF,EAAE,CAAC,SAAS,CAAC,eAAe,GAAG,UAAS,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAEzE,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,gBAAc,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;AACnD,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;;AAEhD,MAAI,MAAM,GAAG,EAAE,CAAA;AACf,MAAG,cAAc,EAAE;AACjB,UAAM,CAAC,IAAI,GAAG,cAAc,CAAC;GAC9B;;;AAAA,AAGD,MAAI,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;CACzD;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAuBF,EAAE,CAAC,SAAS,CAAC,UAAU,GAAG,UAAS,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE;AACpE,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE,QAAQ,GAAG,OAAO,EAAE,OAAO,GAAG,EAAE,CAAC;AAClE,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAG,OAAO,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACrC,QAAI;AACF,UAAI,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC/E,UAAG,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACxC,aAAO,UAAU,CAAC;KACnB,CAAC,OAAM,GAAG,EAAE;AACX,UAAG,QAAQ,EAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClC,YAAM,GAAG,CAAC;KACX;GACF;;;AAAA,AAGD,MAAG,OAAO,QAAQ,IAAI,UAAU,EAAE;AAChC,UAAM,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,qEAAqE,EAAE,cAAc,CAAC,CAAC,CAAC;GAC/G;;AAED,MAAI,CAAC,eAAe,CAAC,EAAC,IAAI,EAAC,cAAc,EAAC,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE,WAAW,EAAE;AAC7E,QAAG,GAAG,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3C,QAAG,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE,OAAO,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,yDAAyD,EAAE,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;;AAE/I,QAAI;AACF,aAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;KACtF,CAAC,OAAM,GAAG,EAAE;AACX,aAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAC5B;GACF,CAAC,CAAC;CACJ;;;;;;;;;AAAC,AASF,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,QAAQ,EAAE;AAC5C,MAAI,IAAI,GAAG,IAAI;;AAAC,AAEhB,MAAI,CAAC,eAAe,CAAC,UAAS,GAAG,EAAE,SAAS,EAAE;AAC5C,QAAG,GAAG,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;;AAAA,AAG3C,aAAS,GAAG,SAAS,CAAC,MAAM,CAAC,UAAS,GAAG,EAAE;AACzC,aAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KACpC,CAAC;;;AAAC,AAGH,QAAI,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,UAAS,QAAQ,EAAE;AACjD,aAAO,IAAI,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;KACjG,CAAC;;;AAAC,AAGH,YAAQ,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;GAC7B,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;AAAC,AAeF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAEhE,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,YAAU,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,UAAU,CAAC;AACrD,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;;AAEhD,MAAI,SAAS,GAAG,IAAI,CAAC;AACrB,MAAI,eAAe,GAAG,EAAE;;AAAC,AAEzB,MAAG,EAAE,SAAS,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAA,AAAC,EAAE;AAC5C,aAAS,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;GAC9C;;;AAAA,AAGD,MAAG,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,WAAW,IAAI,KAAK,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;AAC5F,mBAAe,GAAG,CAAC,UAAU,CAAC,CAAC;GAChC,MAAM,IAAG,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,WAAW,IAAI,KAAK,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;AACnG,mBAAe,GAAG,UAAU,CAAC;GAC9B;;;AAAA,AAGD,MAAI,GAAG,GAAG,EAAC,OAAO,EAAC,SAAS,EAAE,MAAM,EAAC,eAAe,EAAC;;AAAC,AAEtD,MAAG,OAAO,CAAC,QAAQ,CAAC,EAAE;AACpB,OAAG,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;GACnC;;;AAAA,AAGD,SAAO,CAAC,cAAc,GAAG,cAAc,CAAC,OAAO;;;AAAC,AAGhD,MAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC/C,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,QAAG,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAClE,QAAG,MAAM,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7E,YAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;GACvB,CAAC,CAAC;CACJ;;;;;;;;;;AAAC,AAUF,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,KAAK,EAAE,QAAQ,EAAE;AACnD,MAAI,EAAE,GAAG,IAAI;;AAAC,AAEd,MAAG,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;AAAA,AAE5C,MAAI,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAChD,YAAU,CAAC,OAAO,CAAC,EAAC,KAAK,EAAC,KAAK,CAAC,GAAG,EAAC,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC1D,YAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;GACvB,CAAC,CAAC;CACJ;;;;;;;;;;;;;;AAAA,AAcD,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,UAAS,OAAO,EAAE,QAAQ,EAAE;AAChD,MAAI,IAAI,GAAG,IAAI;;AAAC,AAEhB,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;;;AAAC,AAGhD,MAAI,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI;;;AAAC,AAG5D,MAAI,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,MAAM;;AAAC,AAEvE,MAAI,GAAG,GAAG,EAAC,QAAQ,EAAC,CAAC,EAAC;;AAAC,AAEvB,SAAO,CAAC,KAAK,GAAG,IAAI;;;AAAC,AAGrB,OAAK,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;;AAEhD,uBAAmB,GAAG,mBAAmB,GAAG,CAAC;;AAAC,AAE9C,QAAG,mBAAmB,IAAI,CAAC,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;AAC5D,UAAI,gBAAgB,GAAG,QAAQ,CAAC;AAChC,cAAQ,GAAG,IAAI;;;AAAC,AAGhB,UAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;;AAAC,AAEjD,sBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;KACvD;GACF,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;;AAAA,AAgBD,EAAE,CAAC,SAAS,CAAC,YAAY,GAAG,UAAS,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC1E,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd,MAAM;AACL,WAAO,GAAG,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;GAC5C;;;AAAA,AAGD,MAAG,CAAC,OAAO,CAAC,aAAa,EAAE;AACzB,WAAO,CAAC,aAAa,GAAG,SAAS,CAAC;GACnC,MAAM,IAAG,OAAO,CAAC,aAAa,IAAI,QAAQ,IACtC,OAAO,CAAC,aAAa,IAAI,YAAY,IACrC,OAAO,CAAC,aAAa,IAAI,cAAc,IACvC,OAAO,CAAC,aAAa,IAAI,aAAa,IACtC,OAAO,CAAC,aAAa,IAAI,OAAO,EAAE;AACnC,WAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC,CAAC;GAC3H;;;;AAAA,AAID,MAAI,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;AACjE,QAAM,GAAG,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,MAAM;;;AAAC,AAG1D,MAAI,SAAS,GAAG,UAAS,GAAG,EAAE,MAAM,EAAE;AACpC,QAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,UAAI,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;KACzC;;;AAAA,AAGD,YAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;GACvB;;;AAAA,AAGD,MAAG,OAAO,CAAC,aAAa,IAAI,YAAY,EAAE;AACxC,2BAAuB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;GAC/E,MAAM,IAAG,OAAO,CAAC,aAAa,IAAI,OAAO,EAAE;AAC1C,8BAA0B,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;GAC1E,MAAM,IAAG,OAAO,CAAC,aAAa,IAAI,cAAc,EAAE;AACjD,6BAAyB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;GACzE,MAAM,IAAG,OAAO,CAAC,aAAa,IAAI,aAAa,EAAE;AAChD,8BAA0B,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;GAClF,MAAM,IAAG,OAAO,CAAC,aAAa,IAAI,SAAS,EAAE;;AAE5C,QAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE;;AAAC,AAErD,QAAG,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,cAAc,IAAI,CAAC,EAAE;AAC7F,gCAA0B,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;KAClF,MAAM;AACL,6BAAuB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;KAC/E;GACF,MAAM,IAAG,OAAO,CAAC,aAAa,IAAI,QAAQ,EAAE;;;AAG3C,QAAG,WAAW,IAAI,KAAK,EAAE;AACvB,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,aAAO,CAAC,GAAG,CAAC,0FAA0F,CAAC,CAAC;AACxG,YAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACnD;;AAED,QAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,EAAE;AAC9B,+BAAyB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;KACjF,MAAM;;AAEL,iCAA2B,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;KACnF;GACF;CACF;;;;;;;;;;;;;;;;;;;;AAAC,AAoBF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAErE,MAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;AACpD,MAAG,UAAU,IAAI,IAAI,IAChB,UAAU,CAAC,kBAAkB,IAAI,IAAI,IACrC,UAAU,CAAC,kBAAkB,CAAC,eAAe,EAAE;AAChD,WAAO,6BAA6B,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;GACrF;;;AAAA,AAGD,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;;;AAAC,AAGhD,MAAI,YAAY,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnD,cAAY,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;;AAAC,AAE7D,MAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;;AAAC,AAEnC,KAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC;AAC5C,MAAI,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;AAAC,AAErC,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC;;AAAC,AAEnE,YAAU,CAAC,KAAK,CAAC,EAAE,EAAE,UAAS,GAAG,EAAE,KAAK,EAAE;;AAExC,QAAG,GAAG,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;AAAA,AAE3C,cAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,EAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE,SAAS,EAAE;;AAE9F,UAAG,GAAG,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;AAAA,AAE3C,UAAI,cAAc,GAAG,YAAY,CAAC;AAClC,oBAAc,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1C,oBAAc,CAAC,MAAM,GAAG,IAAI;;;AAAC,AAG7B,gBAAU,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAC,EAAC,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,YAAY,EAAC,EAAC,EAAE,cAAc,EAAE,UAAS,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AAC3H,YAAG,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE;AACpB,kBAAQ,CAAC,IAAI,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAE,GAAG,EAAC,YAAY,EAAC,CAAC,CAAC,CAAC;SACrD,MAAM,IAAG,GAAG,EAAE;AACb,kBAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;SACpB,MAAM;AACL,kBAAQ,CAAC,IAAI,EAAE,CAAC,EAAC,IAAI,EAAC,QAAQ,EAAE,GAAG,EAAC,YAAY,EAAC,CAAC,CAAC,CAAC;SACrD;OACF,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;;;;AAAC,AAKF,IAAI,6BAA6B,GAAG,UAAS,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAExF,MAAG,OAAO,QAAQ,IAAI,QAAQ,IACzB,QAAQ,IAAI,IAAI,IAAI,OAAO,QAAQ,IAAI,QAAQ,EAAE;AACpD,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,QAAQ,CAAC;AACnB,YAAQ,GAAG,IAAI,CAAC;GACjB;;;AAAA,AAGD,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,MAAG,OAAO,CAAC,cAAc,IAAI,IAAI,EAAE;AACjC,UAAM,KAAK,CAAC,OAAO,CAAC,4HAA4H,CAAC,CAAC;GACnJ;;;AAAA,AAGD,MAAI,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;AACtE,MAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;AAC9D,MAAI,SAAS,GAAG,OAAO,OAAO,CAAC,SAAS,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI;;;AAAC,AAGhF,MAAG,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AACpB,WAAO,CAAC,GAAG,CAAC,+DAA+D,CAAC,CAAC;GAC9E;;;AAAA,AAGD,MAAI,YAAY,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnD,MAAI,cAAc,GAAG,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC;AACzC,MAAG,OAAO,CAAC,QAAQ,CAAC,EAAE,cAAc,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;AAAA,AAGhE,MAAG,SAAS,IAAI,IAAI,EAAE,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;;;AAAA,AAG3D,MAAG,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAA,IAAK,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC7G,SAAK,GAAG,CAAC,MAAM,CAAC,CAAA;GACjB,MAAM,IAAG,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACvC,SAAK,GAAG,CAAC,SAAS,CAAC,CAAA;GACpB;;;AAAA,AAGD,MAAI,OAAO,GAAG;AACV,cAAU,EAAE,QAAQ;AACpB,cAAU,EAAE,UAAU;AACtB,SAAK,EAAE,KAAK;AACZ,kBAAc,EAAC,KAAK;AACpB,gBAAY,EAAE,YAAY;GAC7B;;;AAAA,AAGD,MAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;;AAAC,AAEnC,KAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC;AAC5C,MAAI,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;;;AAAC,AAGrC,MAAG,OAAO,QAAQ,IAAI,QAAQ,EAAE;AAC9B,WAAO,CAAC,GAAG,GAAG,YAAY,CAAC;GAC5B;;;AAAA,AAGD,MAAI,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC1D,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,YAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,qBAAqB,GAAG,QAAQ,CAAC,GAAG,IAAI,EACxE,MAAM,CAAC,EAAE,GAAG,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAC,CAAC,GAAG,IAAI,CAAC,CAAC;GACrD,CAAC,CAAA;CACH;;;;;;;;;;;;;;;;;AAAA,AAiBD,EAAE,CAAC,SAAS,CAAC,UAAU,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAE9D,MAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;AACpD,MAAG,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,kBAAkB,IAAI,IAAI,IAAI,UAAU,CAAC,kBAAkB,CAAC,eAAe,EAAE;AAC/G,WAAO,6BAA6B,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;GACzE;;;AAAA,AAGD,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;;;AAAC,AAGhD,MAAI,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,EAAC,CAAC,EAAE,CAAC,EAAC,GAAG,IAAI,CAAC,IAAI;;AAAC,AAExE,MAAI,GAAG,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI;;AAAC,AAE3E,MAAI,GAAG,IAAI,IAAI,IAAI,GAAG,EAAC,CAAC,EAAE,CAAC,EAAC,GAAG,IAAI;;;AAAC,AAGpC,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;AACnE,YAAU,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,EAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAC,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;AACpF,QAAG,IAAI,IAAI,IAAI,EAAE;;AAEf,UAAI,cAAc,GAAG,IAAI,CAAC;AAC1B,oBAAc,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1C,gBAAU,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,cAAc,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACxE,gBAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;OACrB,CAAC,CAAC;KACJ,MAAM;AACL,cAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KACtB;GACF,CAAC,CAAC;CACJ,CAAC;;AAEF,IAAI,6BAA6B,GAAG,UAAS,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAE9E,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,MAAI,YAAY,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnD,MAAI,cAAc,GAAG,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC;AACzC,MAAG,OAAO,CAAC,QAAQ,CAAC,EAAE,cAAc,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;AAAA,AAGhE,MAAI,SAAS,GAAG,OAAO,OAAO,CAAC,SAAS,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI;;;AAAC,AAGhF,MAAG,SAAS,IAAI,IAAI,EAAE,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;;;AAAA,AAG3D,MAAI,OAAO,GAAG;AACV,YAAQ,EAAE,QAAQ;AAClB,gBAAY,EAAE,YAAY;GAC7B;;;AAAA,AAGD,MAAI,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC1D,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,YAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;GAC1C,CAAC,CAAA;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AA0BD,EAAE,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC1E,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,MAAI,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,EAAC,CAAC,EAAE,CAAC,EAAC,GAAG,IAAI,CAAC,IAAI;;AAAC,AAExE,MAAI,GAAG,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI;;AAAC,AAE3E,MAAI,GAAG,IAAI,IAAI,IAAI,GAAG,EAAC,CAAC,EAAE,CAAC,EAAC,GAAG,IAAI;;AAAC,AAEpC,MAAI,CAAC,eAAe,CAAC,EAAC,IAAI,EAAC,cAAc,EAAC,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE,WAAW,EAAE;AAC7E,QAAG,GAAG,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3C,QAAG,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;AAC3C,aAAO,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,yDAAyD,EAAE,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;KACpH,MAAM,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,UAAI;AAAE,eAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;OAAE,CAC7F,OAAM,GAAG,EAAE;AAAE,eAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;OAAE;KACrC;;;AAAA,AAGD,QAAI,GAAG,GAAG,EAAC,QAAQ,EAAC,cAAc,EAAC,CAAC;;AAEpC,SAAI,IAAI,IAAI,IAAI,OAAO,EAAE;AACvB,UAAG,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;KAC3F;;;AAAA,AAGD,QAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;;AAE/C,UAAG,GAAG,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AACnC,eAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;OAC5B;;AAAA,AAED,UAAI;AACF,gBAAQ,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;OAC/E,CAAC,OAAM,GAAG,EAAE;AACX,gBAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;OACpC;KACF,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC;;AAEF,IAAI,eAAe,GAAG,UAAS,IAAI,EAAE,OAAO,EAAE;AAC5C,MAAG,OAAO,CAAC,cAAc,EAAE,OAAO,OAAO,CAAC,cAAc,CAAC;AACzD,MAAG,IAAI,CAAC,cAAc,EAAE,OAAO,IAAI,CAAC,cAAc,CAAC;AACnD,SAAO,SAAS,CAAC;CAClB;;;;;;;;;;;;;;;;;;AAAA,AAkBD,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC3D,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,SAAO,GAAG,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC;;;AAAC,AAG3C,MAAI,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,GAAG,KAAK;;;AAAC,AAG5F,MAAI,cAAc,GAAG,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC;;;AAAC,AAGpD,MAAG,cAAc,IAAI,KAAK,IAAI,mBAAmB,IAAI,KAAK,EAAE;AAC1D,QAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,IACxF,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,IACzF,QAAQ,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,IACjE,QAAQ,CAAC,wBAAwB,CAAC,IACjC,QAAQ,CAAC,WAAW,CAAC,KAAK,QAAQ,CAAC,GAAG,IAAI,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAA,AAAC,AAAC,EAAE;;AAEjF,aAAO,CAAC,cAAc,GAAG,cAAc,CAAC;KACzC,MAAM;AACL,aAAO,CAAC,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC;KACjD;GACF,MAAM,IAAG,cAAc,IAAI,KAAK,EAAE;AACjC,WAAO,CAAC,cAAc,GAAG,cAAc,CAAC;GACzC;;;AAAA,AAGD,MAAG,OAAO,OAAO,CAAC,SAAS,IAAI,QAAQ,EAAE;AACvC,YAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAA;GACvC;;;AAAA,AAGD,MAAI,eAAe,GAAG,EAAE;;;AAAC,AAGzB,MAAG,OAAO,OAAO,CAAC,WAAW,CAAC,IAAI,SAAS,EAAE,eAAe,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACjG,iBAAe,CAAC,WAAW,CAAC,GAAG,OAAO,OAAO,CAAC,WAAW,CAAC,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;AACvG,MAAG,OAAO,OAAO,CAAC,oBAAoB,CAAC,IAAI,SAAS,EAAE,eAAe,CAAC,oBAAoB,CAAC,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC5H,MAAG,OAAO,CAAC,QAAQ,CAAC,EAAE,eAAe,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;AAAA,AAGpE,MAAG,CAAC,OAAO,CAAC,YAAY,IACnB,QAAQ,CAAC,eAAe,CAAC,IACzB,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAC9D,QAAQ,CAAC,YAAY,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAA,IAC1E,OAAO,CAAC,cAAc,EAAE;AAC3B,WAAO,OAAO,CAAC,gBAAgB,CAAC,CAAC;GAClC;;;AAAA,AAGD,MAAG,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,IAAI,EAAE;AAC9E,YAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;AAC3B,QAAG,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAG,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AAClD,QAAG,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACvE,QAAG,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AAClD,QAAG,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;GAC/D;;;AAAA,AAGD,MAAG,OAAO,CAAC,YAAY,EAAE;AACvB,YAAQ,CAAC,YAAY,GAAG,YAAY,CAAC;GACtC;;;AAAA,AAGD,MAAG,eAAe,CAAC,cAAc,IAAI,SAAS,EAC5C,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC;;;AAAA,AAGjC,MAAI,MAAM,GAAG,OAAO,OAAO,CAAC,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAC5E,QAAM,GAAG,OAAO,OAAO,CAAC,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM;;;AAAC,AAG9E,MAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,QAAQ,EAAE,eAAe,CAAC,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE;AACzI,QAAG,OAAO,CAAC,gBAAgB,EAAE;AAC3B,UAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAC/C,UAAG,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;AAC/G,UAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAC5B,OAAO,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AACzE,cAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;KAClD,MAAM;AACL,UAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,UAAG,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;AAC/G,UAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAC5B,OAAO,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7D,cAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;KACtC;GACF,CAAC,CAAC;CACJ;;;;;;;;;;AAAC,AAUF,EAAE,CAAC,SAAS,CAAC,cAAc,GAAG,UAAS,cAAc,EAAE,QAAQ,EAAE;AAC/D,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAQ,KAAK,QAAQ,GAAG,YAAU,EAAE,CAAA,AAAC;;;AAAC,AAGtC,MAAI,GAAG,GAAG,EAAC,MAAM,EAAC,cAAc,EAAC;;;AAAA,AAGjC,MAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC1C,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,QAAG,MAAM,CAAC,EAAE,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1C,YAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GACvB,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;AAAC,AAeF,EAAE,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,cAAc,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE;AACxF,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAA;GACb;;;AAAA,AAGD,SAAO,CAAC,cAAc,GAAG,IAAI;;;AAAC,AAG9B,MAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;CACzE;;;;;;;AAAC,AAOF,EAAE,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE;AACxE,MAAG,QAAQ,IAAI,IAAI,EAAE;AAAE,YAAQ,GAAG,OAAO,CAAC,AAAC,OAAO,GAAG,EAAE,CAAC;GAAE;AAC1D,MAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACtH,QAAG,QAAQ,EAAE,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;GACpC,CAAC,CAAC;CACJ;;;;;;;AAAC,AAOF,EAAE,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAS,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC7E,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAA;GACb;;AAED,MAAG,OAAO,CAAC,cAAc,EAAE;AACzB,WAAO,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;GACjD;;AAED,MAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC3G,QAAG,QAAQ,EAAE,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;GACpC,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AA0BF,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE;AAClF,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;AAChD,SAAO,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,OAAO,GAAG,QAAQ,CAAC;AAC9D,SAAO,GAAG,OAAO,IAAI,IAAI,GAAG,EAAE,GAAG,OAAO;;;AAAC,AAGzC,MAAI,YAAY,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC;;AAAC,AAEnD,MAAG,gBAAgB,CAAC,YAAY,CAAC,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;AAClE,UAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;GAC1E;;;AAAA,AAGD,+BAA6B,CAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC9F,QAAG,GAAG,IAAI,IAAI,EAAE;AACd,aAAO,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;KAC9B;;;AAAA,AAGD,QAAI,OAAO,GAAG,wBAAwB,CAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,CAAC;;AAAC,AAEnF,QAAI,cAAc,GAAG,EAAE;;;AAAC,AAGxB,QAAG,gBAAgB,CAAC,YAAY,CAAC,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;;AAElE,oBAAc,CAAC,MAAM,CAAC,GAAG,YAAY;;AAAC,AAEtC,UAAG,OAAO,YAAY,IAAI,QAAQ,EAAE;AAClC,YAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACrC,aAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,wBAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACjD;OACF;;;AAAA,AAGD,UAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,cAAc,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACxE,YAAG,GAAG,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3C,YAAG,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;;AAE7G,cAAM,GAAG,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC;AACpC,YAAI,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACjB,kBAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACpC,MAAM;AACL,kBAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC3C;OACF,CAAC,CAAC;KACJ,MAAM;;AAEL,UAAI,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,cAAc,EAAE,YAAW,EAAE,CAAC;;AAAC,AAEhF,UAAG,CAAC,QAAQ,EAAE,OAAO;;AAAA,AAErB,UAAG,MAAM,YAAY,KAAK,EAAE;AAC1B,eAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;OACzB;;AAAA,AAED,aAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7B;GACF,CAAC,CAAC;CACJ,CAAC;;AAEF,IAAI,wBAAwB,GAAG,UAAS,EAAE,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE;AAChF,MAAI,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAC3D,MAAI,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;AAC1C,MAAI,IAAI,GAAG,eAAe,CAAC,IAAI;;;AAAC,AAGhC,MAAI,SAAS,GAAG,OAAO,OAAO,CAAC,IAAI,IAAI,QAAQ,GAC3C,OAAO,CAAC,IAAI,GACZ,eAAe,CAAC,IAAI,CAAC;;AAEzB,MAAI,QAAQ,GAAG;AACb,QAAI,EAAE,EAAE,CAAC,YAAY,GAAG,GAAG,GAAG,cAAc;AAC5C,SAAK,EAAE,SAAS;AAChB,UAAM,EAAE,SAAS;GAClB;;;AAAA,AAGD,MAAI,WAAW,GAAG,OAAO,IAAI,IAAI,IAAI,QAAQ,KAAK,OAAO,OAAO,GAC5D,KAAK,GACL,OAAO;;;AAAC,AAGZ,SAAO,GAAG,OAAO,IAAI,IAAI,IAAI,OAAO,OAAO,IAAI,SAAS,GACpD,EAAE,GACF,OAAO;;;AAAC,AAGZ,MAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvC,OAAI,IAAI,UAAU,IAAI,OAAO,EAAE;AAC7B,QAAG,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;AACvC,cAAQ,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;KAC5C;GACF;;AAED,MAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,IAAI,EAC3B,QAAQ,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;;AAEnC,MAAI,IAAI,GAAG,EAAE,CAAC,YAAY,GAAG,GAAG,GAAG,SAAS,CAAC,uBAAuB,CAAC;AACrE,MAAI,GAAG,GAAG,IAAI,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7C,SAAO,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;CAC1B,CAAA;;AAED,IAAI,6BAA6B,GAAG,UAAS,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAEjG,MAAI,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,WAAW,CAAC;;AAAC,AAE3D,MAAI,SAAS,GAAG,OAAO,OAAO,CAAC,IAAI,IAAI,QAAQ,GAC3C,OAAO,CAAC,IAAI,GACZ,eAAe,CAAC,IAAI;;;AAAC,AAGzB,MAAI,OAAO,GAAG,CAAC;AACX,QAAI,EAAE,SAAS;AACf,OAAG,EAAE,eAAe,CAAC,SAAS;GACjC,CAAC;;;AAAC,AAGH,MAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,OAAI,IAAI,UAAU,IAAI,OAAO,EAAE;AAC7B,QAAG,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;AACvC,aAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;KAC9C;GACF;;;AAAA,AAGD,MAAI,OAAO,GAAG,EAAC,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAC;;AAAC,AAEhE,MAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACnD,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,QAAG,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE;AACjB,aAAO,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;KAC9C;;;AAAA,AAGD,YAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;GAC3B,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AA0BD,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE;AAClF,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAG,OAAO,QAAQ,KAAK,WAAW,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AACnE,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,SAAO,GAAG,OAAO,IAAI,EAAE;;;AAAC,AAGxB,MAAI,YAAY,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC;;AAAC,AAEnD,MAAG,gBAAgB,CAAC,YAAY,CAAC,IAAI,QAAQ,IAAI,IAAI,EACnD,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;;;AAAA,AAG3E,MAAI,OAAO,GAAG,wBAAwB,CAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACnF,MAAI,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;;;AAAC,AAG3C,MAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,YAAY,EAAE,UAAS,GAAG,EAAE,gBAAgB,EAAE;AAClF,QAAG,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;AAAA,AAE7D,QAAG,gBAAgB,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAG;AAC7D,UAAI,CAAC,WAAW,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;KAClE,MAAM;AACL,UAAG,OAAO,QAAQ,KAAK,UAAU,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;KACtE;GACF,CAAC,CAAC;CACJ;;;;;;;;;;;;;AAAC,AAaF,EAAE,CAAC,SAAS,CAAC,UAAU,GAAG,UAAS,OAAO,EAAE,QAAQ,EAAE;AACpD,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;;;AAAC,AAGhD,MAAI,GAAG,GAAG,EAAC,YAAY,EAAC,CAAC,EAAC;;;AAAC,AAG3B,MAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC/C,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,YAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ;;;;;;;;;;;AAAC,AAWF,EAAE,CAAC,SAAS,CAAC,SAAS,GAAG,UAAS,cAAc,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC9E,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;;;AAAC,AAGhD,MAAI,GAAG,GAAG,EAAC,eAAe,EAAC,cAAc,EAAE,OAAO,EAAC,SAAS,EAAC;;;AAAC,AAG9D,MAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC/C,QAAG,QAAQ,IAAI,IAAI,EAAE,OAAO;AAC5B,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,YAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ;;;;;;;;;;AAAC,AAUF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,UAAS,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE;AACjE,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,MAAI,GAAG,GAAG,EAAC,SAAS,EAAC,cAAc,EAAC;;;AAAC,AAGrC,MAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC/C,QAAG,QAAQ,IAAI,IAAI,EAAE,OAAO;AAC5B,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,YAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;GAC1C,CAAC,CAAC;CACJ;;;;;;;;;;;;;;;AAAC,AAeF,EAAE,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;AAChE,MAAG,OAAO,QAAQ,KAAK,WAAW,EAAE;AAClC,QAAG,OAAO,OAAO,KAAK,WAAW,EAAE;AACjC,cAAQ,GAAG,IAAI,CAAC;AAChB,UAAI,GAAG,IAAI,CAAC;KACb,MAAM;AACL,cAAQ,GAAG,OAAO,CAAC;KACpB;AACD,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,MAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7D,MAAI,IAAI,GAAG,IAAI;;;AAAC,AAGhB,MAAI,cAAc,GAAG,UAAS,OAAO,EAAE;;AAErC,QAAI,IAAI,GAAG,EAAE;;AAAC,AAEd,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,UAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC;;AAAC,AAEvB,UAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACtB,WAAI,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE;AACzB,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAChD;KACF;;AAED,WAAO,IAAI,CAAC;GACb;;;AAAA,AAGD,MAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE,OAAO,EAAE;AACjE,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,QAAG,IAAI,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACxC,YAAQ,CAAC,IAAI,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;GACzC,CAAC,CAAC;CACJ;;;;;;;;;AAAC,AASF,EAAE,CAAC,SAAS,CAAC,YAAY,GAAG,UAAS,OAAO,EAAE,QAAQ,EAAE;AACtD,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,MAAI,GAAG,GAAG,EAAC,cAAc,EAAC,CAAC,EAAC;;;AAAC,AAG7B,MAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AAC/C,QAAG,QAAQ,IAAI,IAAI,EAAE,OAAO;AAC5B,QAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,YAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;GAC1C,CAAC,CAAC;CACJ;;;;;;;;;;;;;;AAAA,AAcD,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE;AACrD,MAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,UAAQ,GAAG,IAAI,CAAC,GAAG,EAAE;;AAAC,AAEtB,SAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE;;;AAAC,AAGhD,MAAI,aAAa,GAAG;AAClB,WAAO,EAAC,IAAI;GACb;;;AAAC,AAGF,MAAG,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,aAAa,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;;AAAA,AAGvE,MAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;CAChD;;;;;AAAA,AAKD,IAAI,mBAAmB,GAAG,UAAS,QAAQ,EAAE;AAC3C,MAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAG,MAAM,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,EAAE;AACrC,WAAO,QAAQ,CAAC;GACjB,MAAM;AACL,WAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GAC9B;CACF;;;;;AAAA,AAKD,IAAI,qBAAqB,GAAG,UAAS,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAExE,MAAI,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,IAAI,GAAG,OAAO,CAAC,cAAc,GAAG,SAAS,CAAC;AACzF,MAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;AAChE,MAAI,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;AACvF,MAAI,GAAG,GAAG,OAAO,OAAO,CAAC,GAAG,IAAI,SAAS,GAAG,OAAO,CAAC,GAAG,GAAG,KAAK;;;AAAC,AAGhE,MAAG,EAAE,OAAO,cAAc,IAAI,QAAQ,CAAA,AAAC,IAAI,cAAc,CAAC,KAAK,IAAI,gBAAgB,EAAE;AACnF,kBAAc,GAAG,AAAC,cAAc,IAAI,IAAI,IAAI,cAAc,IAAI,SAAS,IAAI,cAAc,IAAI,KAAK,GAAI,cAAc,CAAC,OAAO,GAAG,cAAc,CAAC;AAC9I,QAAG,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,yCAAyC,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;GACpJ,MAAM,IAAG,OAAO,cAAc,IAAI,QAAQ,IAAI,cAAc,CAAC,KAAK,IAAI,gBAAgB,EAAE;AACvF,QAAG,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,yCAAyC,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;GACtI;;;AAAA,AAGD,MAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,cAAc,IAAI,IAAI,IAAI,cAAc,IAAI,SAAS,EAAE;AACxF,cAAU,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;GACpD;;;AAAA,AAGD,MAAG,OAAO,QAAQ,KAAK,UAAU,IAAI,CAAC,KAAK,EAAE;AAC3C,YAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC;;AAAC,AAEzC,QAAI,UAAU,GAAG,mBAAmB,IAAI,IAAI,GAAG,mBAAmB,GAAG,IAAI,CAAC;;AAE1E,QAAG,UAAU,YAAY,KAAK,EAAE,OAAO,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;;;;AAAA,AAIlE,QAAG,UAAU,IAAI,IAAI,EAAE;AACrB,gBAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;KAC/D;;AAED,QAAG,UAAU,IAAI,IAAI,EAAE;AACrB,aAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;KACnD,MAAM,IAAG,UAAU,YAAY,KAAK,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;AACtE,aAAO,QAAQ,CAAC,UAAU,CAAC,CAAC;KAC7B;;;AAAA,AAGD,QAAI,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK;;;AAAC,AAGvC,QAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;;;AAAC,AAGnF,cAAU,CAAC,KAAK,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE;AACzC,UAAG,GAAG,IAAI,IAAI,EAAE;;AAEd,YAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAC1B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,KAExE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;OACxE;KACF,CAAC,CAAC;GACJ,MAAM,IAAG,OAAO,QAAQ,KAAK,UAAU,IAAI,KAAK,EAAE;AACjD,YAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AACzC,QAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;AACxD,QAAI,eAAe,GAAG,WAAW,CAAC,MAAM;;AAAC,AAEzC,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;AAE1C,UAAI,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC;;;AAAC,AAGhC,UAAG,UAAU,IAAI,IAAI,EAAE;AACrB,eAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;OACnD,MAAM,IAAG,UAAU,YAAY,KAAK,EAAE;AACrC,eAAO,QAAQ,CAAC,UAAU,CAAC,CAAC;OAC7B;;;AAAA,AAGD,UAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,CAAC;;;AAAC,AAG1E,gBAAU,CAAC,KAAK,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE;;AAEzC,uBAAe,GAAG,eAAe,GAAG,CAAC;;AAAC,AAEtC,YAAG,GAAG,IAAI,IAAI,EAAE;;AAEd,cAAI,CAAC,YAAY,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC;SAC7D;;;AAAA,AAGD,YAAG,eAAe,IAAI,CAAC,EAAE;AACvB,kBAAQ,CAAC,GAAG,CAAC,CAAC;SACf;OACF,CAAC;;;AAAC,AAGH,gBAAU,CAAC,eAAe,EAAE,CAAC;KAC9B;GACF,MAAM;;AAEL,QAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC;;AAAC,AAElE,cAAU,GAAG,mBAAmB,IAAI,IAAI,GAAG,mBAAmB,GAAG,UAAU;;AAAC,AAE5E,QAAG,UAAU,IAAI,IAAI,IAAI,UAAU,YAAY,KAAK,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,OAAO,IAAI,CAAC;;AAAA,AAEnG,cAAU,CAAC,KAAK,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE;AACzC,UAAG,GAAG,IAAI,IAAI,EAAE;;AAEd,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;OACzB;KACF,CAAC,CAAC;GACJ;CACF;;;;;;;AAAC,AAOF,EAAE,CAAC,SAAS,CAAC,oBAAoB,GAAG,UAAS,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC1E,MAAI,IAAI,GAAG,IAAI;;;AAAC,AAGhB,MAAG,OAAO,OAAO,KAAK,UAAU,EAAE;AAChC,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;AACD,UAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC;;;AAAC,AAGzC,MAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,GACtC,OAAO,CAAC,UAAU,CAAC,GACnB,KAAK;;;AAAC,AAGV,MAAG,IAAI,CAAC,kBAAkB,EAAE;AAC1B,QAAI,GAAG,GAAG,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAChD,QAAG,UAAU,IAAI,OAAO,QAAQ,EAAE;AAChC,aAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAC5B,MAAM;AACL,YAAM,GAAG,CAAC;KACX;GACF;;AAED,MAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAChC,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC,CAAC;;;AAAA,AAGxE,MAAI,UAAU,GAAG,OAAO,CAAC,UAAU;;AAAC,AAEpC,MAAG,UAAU,KACP,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAA,AAAC,EAAE,UAAU,GAAG,IAAI,CAAC;;;AAAA,AAG/E,MAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;AAC/B,MAAI,cAAc,GAAG,OAAO,CAAC,cAAc;;AAAC,AAE5C,MAAG,cAAc,IAAI,IAAI,EAAE;AACzB,kBAAc,GAAG,OAAO,CAAC,cAAc,CAAC;GACzC;;AAED,MAAG,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,MAAM,CAAC,eAAe,EAAE,EAAE;;AAEnG,QAAG,cAAc,IAAI,cAAc,CAAC,OAAO,IACtC,cAAc,IAAI,cAAc,CAAC,iBAAiB,IACjD,cAAc,IAAI,IAAI,IAAI,OAAO,cAAc,IAAI,QAAQ,IAAI,cAAc,CAAC,IAAI,AAAC,IACpF,cAAc,IAAI,IAAI,EAAE;;;AAG3B,UAAI,CAAC,YAAY,CAAC,cAAc,CAAC,gBAAgB,CAC/C,EAAI,IAAI,EAAE,OAAO;AACb,kBAAU,EAAE,UAAU;AACtB,eAAO,EAAE,OAAO;AAChB,gBAAQ,EAAE,QAAQ;AAClB,UAAE,EAAE,IAAI;AACR,2BAAmB,EAAE,qBAAqB;AAC1C,4BAAoB,EAAE,sBAAsB;OAC/C,CACF,CAAC;KACH,MAAM;AACL,UAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CACnC,EAAI,IAAI,EAAE,OAAO;AACb,kBAAU,EAAE,UAAU;AACtB,eAAO,EAAE,OAAO;AAChB,gBAAQ,EAAE,QAAQ;AAClB,UAAE,EAAE,IAAI;AACR,2BAAmB,EAAE,qBAAqB;AAC1C,4BAAoB,EAAE,sBAAsB;OAC/C,CACF,CAAC;KACH;;;AAAA,AAGD,QAAG,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;AAC/E,UAAI,CAAC,KAAK,EAAE,CAAC;KACd;GACF,MAAM,IAAG,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE;AAC3G,WAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,EAAE,IAAI,CAAC,CAAC;GACzD,MAAM;AACL,QAAG,OAAO,QAAQ,IAAI,UAAU,EAAE;AAChC,2BAAqB,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE;AAC5E,gBAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;OAC7B,CAAC,CAAC;KACJ,MAAM;AACL,2BAAqB,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;KAClD;GACF;CACF;;;;;AAAC,AAKF,IAAI,sBAAsB,GAAG,UAAS,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAEzE,MAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;;AAAC,AAEpD,MAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AAC7D,MAAI,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI;;AAAC,AAEvF,YAAU,GAAG,mBAAmB,IAAI,IAAI,GAAG,mBAAmB,GAAG,UAAU;;AAAC,AAE5E,MAAG,UAAU,IAAI,UAAU,CAAC,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE;AACtE,WAAO,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,iDAAiD,CAAC,EAAE,IAAI,CAAC,CAAC;GACzF;;;AAAA,AAGD,MAAG,OAAO,QAAQ,KAAK,UAAU,EAAE;AACjC,YAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC;;AAAC,AAEzC,QAAG,UAAU,IAAI,IAAI,EAAE;AACrB,aAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;KACnD,MAAM,IAAG,UAAU,YAAY,KAAK,EAAE;AACrC,aAAO,QAAQ,CAAC,UAAU,CAAC,CAAC;KAC7B;;AAED,QAAI,YAAY,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnD,QAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC,CAAC,IAAI,UAAU,IAAI,YAAY,CAAC,CAAC,IAAI,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,KAAK,EAAE;;AAErH,gBAAU,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,yBAAyB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;;AAAC,AAEnF,UAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;KAChF;GACF;;;AAAA,AAGD,MAAG,UAAU,IAAI,IAAI,EAAE,OAAO,IAAI,CAAC;AACnC,MAAG,UAAU,YAAY,KAAK,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE,OAAO,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACnG,MAAG,UAAU,YAAY,KAAK,EAAE,OAAO,IAAI,CAAC;AAC5C,MAAG,UAAU,IAAI,IAAI,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,EAAE,IAAI,CAAC,CAAC;;;AAAA,AAGpH,YAAU,CAAC,KAAK,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE;;AAEzC,QAAG,OAAO,QAAQ,KAAK,UAAU,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,CAAA,AAAC,EAAE;;AAEpE,cAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACrB,MAAM,IAAG,OAAO,QAAQ,KAAK,UAAU,EAAE;;AAExC,UAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;KACzE,MAAM,IAAG,OAAO,QAAQ,IAAI,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;;AAE/D,UAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KAC1E,MAAM,IAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AAC/B,UAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KACzB;GACF,CAAC,CAAC;CACJ;;;;;;;AAAC,AAOF,EAAE,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAS,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC3E,MAAI,IAAI,GAAG,IAAI;;;AAAC,AAGhB,MAAG,QAAQ,IAAI,IAAI,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AACpD,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;AACD,UAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC;;AAAC,AAEzC,SAAO,GAAG,OAAO,IAAI,IAAI,GAAG,EAAE,GAAG,OAAO;;;AAAC,AAGzC,MAAG,IAAI,CAAC,kBAAkB,EAAE;AAC1B,QAAG,OAAO,QAAQ,IAAI,UAAU,EAAE;AAChC,aAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAAC,CAAC;KAC9D,MAAM;AACL,YAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;KAC7C;GACF;;AAED,MAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC,CAAC;;;AAAA,AAG1G,MAAI,UAAU,GAAG,OAAO,CAAC,UAAU;;AAAC,AAEpC,MAAG,UAAU,KACP,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAA,AAAC,EAAE,UAAU,GAAG,IAAI,CAAC;;;AAAA,AAG/E,MAAI,MAAM,GAAG,IAAI,CAAC,YAAY;;AAAC,AAE/B,MAAG,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,MAAM,CAAC,eAAe,EAAE,EAAE;AAChE,QAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,CACpC,EAAI,IAAI,EAAC,QAAQ;AACb,kBAAY,EAAC,UAAU;AACvB,eAAS,EAAC,OAAO;AACjB,gBAAU,EAAC,QAAQ;AACnB,QAAE,EAAE,IAAI;AACR,yBAAmB,EAAE,qBAAqB;AAC1C,0BAAoB,EAAE,sBAAsB;KAC/C,CACF;;;AAAC,AAGF,QAAG,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;AAC/E,UAAI,CAAC,KAAK,EAAE,CAAC;KACd;GACF,MAAM,IAAG,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE;AACxE,WAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,EAAE,IAAI,CAAC,CAAC;GACzD,MAAM;AACL,0BAAsB,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;GAC7D;CACF;;;;;;;AAAC,AAOF,EAAE,CAAC,SAAS,CAAC,qBAAqB,GAAG,EAAE,CAAC,SAAS,CAAC,qBAAqB;;;;;;AAAC,AAMxE,EAAE,CAAC,SAAS,CAAC,qBAAqB,GAAG,EAAE,CAAC,SAAS,CAAC,qBAAqB;;;;;;;;;;AAAC,AAUxE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO;;;;;;;AAAC,AAOlC,EAAE,CAAC,WAAW,GAAG,mCAAmC;;;;;;;;;;;;;;;;;;;;AAAC,AAoBrD,EAAE,CAAC,OAAO,GAAG,UAAS,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE;;AAE5C,MAAG,OAAO,OAAO,IAAI,UAAU,EAAE;AAC/B,YAAQ,GAAG,OAAO,CAAC;AACnB,WAAO,GAAG,EAAE,CAAC;GACd;;;AAAA,AAGD,MAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IACvB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IACtB,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IACtD,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;;;AAAA,AAG/C,MAAI,WAAW,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,WAAW;;AAAC,AAE3D,aAAW,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;CAC/D;;;;;;AAAC,AAMF,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI;AAC3D,KAAG,EAAE,YAAY;AACf,WAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;GACvC;CACJ,CAAC;;;;;AAAC,AAKH,IAAI,gBAAgB,GAAG,UAAS,YAAY,EAAE;AAC5C,SAAO,YAAY,IAAI,IAAI,IACtB,YAAY,CAAC,CAAC,GAAG,CAAC,IAClB,YAAY,CAAC,CAAC,IAAI,UAAU,IAC5B,YAAY,CAAC,CAAC,IAAI,IAAI,IACtB,YAAY,CAAC,OAAO,IAAI,IAAI,IAC5B,YAAY,CAAC,KAAK,IAAI,IAAI,CAAA;CAChC;;;;;AAAC,AAKF,IAAI,oBAAoB,GAAG,UAAS,OAAO,EAAE;AAC3C,MAAI,YAAY,GAAG,EAAE,CAAC;AACtB,MAAG,OAAO,CAAC,CAAC,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AACjD,MAAG,OAAO,CAAC,OAAO,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC;AAC7D,MAAG,OAAO,CAAC,CAAC,IAAI,IAAI,EAAE,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AACjD,MAAG,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAC7D,MAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,EAAE,YAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACtE,SAAO,YAAY,CAAC;CACrB;;;;;AAAC,AAKF,IAAI,gBAAgB,GAAG,UAAS,IAAI,EAAE,OAAO,EAAE;;AAE7C,MAAI,YAAY,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC;;AAAC,AAEzB,MAAG,OAAO,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,OAAO,CAAC,CAAC,IAAI,SAAS,IAAI,OAAO,OAAO,CAAC,OAAO,IAAI,SAAS,IAAI,OAAO,OAAO,CAAC,KAAK,IAAI,SAAS,EAAE;AACjI,gBAAY,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;GAC9C,MAAM,IAAG,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,OAAO,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;AACjE,gBAAY,GAAG,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;GACnD,MAAM,IAAG,OAAO,OAAO,CAAC,IAAI,IAAI,SAAS,EAAE;AAC1C,gBAAY,GAAG,EAAC,CAAC,EAAG,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,AAAC,EAAC,CAAC;GAC5C,MAAM,IAAG,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,SAAS,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,SAAS,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,SAAS,EAAE;AAC5J,gBAAY,GAAG,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GACnD,MAAM,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,SAAS,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,EAAE;AAChJ,gBAAY,GAAG,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAChD,MAAM,IAAG,OAAO,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;AACvC,gBAAY,GAAG,EAAC,CAAC,EAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,AAAC,EAAC,CAAC;GACzC;;;AAAA,AAGD,MAAG,YAAY,CAAC,CAAC,GAAG,CAAC,KACf,YAAY,CAAC,OAAO,IAAI,IAAI,IAAI,YAAY,CAAC,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,KAAK,IAAI,IAAI,CAAA,AAAC,EAAE,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;;;AAAA,AAGlM,SAAO,YAAY,CAAC;CACrB;;;;;;;;AAAA,AAQD,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;AAC7B,OAAO,CAAC,EAAE,GAAG,EAAE;;;;;;;AAAC,AAOhB,EAAE,CAAC,SAAS,CAAC,uBAAuB,GAAG,YAAW;AAChD,MAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACjC,MAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACjC,MAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AACnC,MAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;AACtC,MAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;AACrC,MAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;CACpC,CAAC","file":"db-compiled.js","sourcesContent":["/**\n * Module dependencies.\n * @ignore\n */\nvar QueryCommand = require('./commands/query_command').QueryCommand\n  , DbCommand = require('./commands/db_command').DbCommand\n  , MongoReply = require('./responses/mongo_reply').MongoReply\n  , Admin = require('./admin').Admin\n  , Collection = require('./collection').Collection\n  , Server = require('./connection/server').Server\n  , ReplSet = require('./connection/repl_set/repl_set').ReplSet\n  , ReadPreference = require('./connection/read_preference').ReadPreference\n  , Mongos = require('./connection/mongos').Mongos\n  , Cursor = require('./cursor').Cursor\n  , EventEmitter = require('events').EventEmitter\n  , InsertCommand = require('./commands/insert_command').InsertCommand\n  , CommandCursor = require('./command_cursor').CommandCursor\n  , f = require('util').format\n  , inherits = require('util').inherits\n  , crypto = require('crypto')\n  , timers = require('timers')\n  , utils = require('./utils')\n\n  // Authentication methods\n  , mongodb_cr_authenticate = require('./auth/mongodb_cr.js').authenticate\n  , mongodb_gssapi_authenticate = require('./auth/mongodb_gssapi.js').authenticate\n  , mongodb_sspi_authenticate = require('./auth/mongodb_sspi.js').authenticate\n  , mongodb_plain_authenticate = require('./auth/mongodb_plain.js').authenticate\n  , mongodb_x509_authenticate = require('./auth/mongodb_x509.js').authenticate\n  , mongodb_scram_authenticate = require('./auth/mongodb_scram.js').authenticate;\n\nvar hasKerberos = false;\n// Check if we have a the kerberos library\ntry {\n  require('kerberos');\n  hasKerberos = true;\n} catch(err) {}\n\n// Set processor, setImmediate if 0.10 otherwise nextTick\nvar processor = require('./utils').processor();\n\n/**\n * Create a new Db instance.\n *\n * Options\n *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *  - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n *  - **native_parser** {Boolean, default:false}, use c++ bson parser.\n *  - **forceServerObjectId** {Boolean, default:false}, force server to create _id fields instead of client.\n *  - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n *  - **serializeFunctions** {Boolean, default:false}, serialize functions.\n *  - **raw** {Boolean, default:false}, perform operations using raw bson buffers.\n *  - **recordQueryStats** {Boolean, default:false}, record query statistics during execution.\n *  - **retryMiliSeconds** {Number, default:5000}, number of milliseconds between retries.\n *  - **numberOfRetries** {Number, default:5}, number of retries off connection.\n *  - **logger** {Object, default:null}, an object representing a logger that you want to use, needs to support functions debug, log, error **({error:function(message, object) {}, log:function(message, object) {}, debug:function(message, object) {}})**.\n *  - **slaveOk** {Number, default:null}, force setting of SlaveOk flag on queries (only use when explicitly connecting to a secondary server).\n *  - **promoteLongs** {Boolean, default:true}, when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n *  - **bufferMaxEntries** {Number, default: -1}, sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited\n *\n * @class Represents a Db\n * @param {String} databaseName name of the database.\n * @param {Object} serverConfig server config object.\n * @param {Object} [options] additional options for the collection.\n */\nfunction Db(databaseName, serverConfig, options) {\n  if(!(this instanceof Db)) return new Db(databaseName, serverConfig, options);\n  EventEmitter.call(this);\n  var self = this;\n  this.databaseName = databaseName;\n  this.serverConfig = serverConfig;\n  this.options = options == null ? {} : options;\n  // State to check against if the user force closed db\n  this._applicationClosed = false;\n  // Fetch the override flag if any\n  var overrideUsedFlag = this.options['override_used_flag'] == null ? false : this.options['override_used_flag'];\n\n  // Verify that nobody is using this config\n  if(!overrideUsedFlag && this.serverConfig != null && typeof this.serverConfig == 'object' && this.serverConfig._isUsed && this.serverConfig._isUsed()) {\n    throw new Error('A Server or ReplSet instance cannot be shared across multiple Db instances');\n  } else if(!overrideUsedFlag && typeof this.serverConfig == 'object'){\n    // Set being used\n    this.serverConfig._used = true;\n  }\n\n  // Allow slaveOk override\n  this.slaveOk = this.options['slave_ok'] == null ? false : this.options['slave_ok'];\n  this.slaveOk = this.options['slaveOk'] == null ? this.slaveOk : this.options['slaveOk'];\n\n  // Number of operations to buffer before failure\n  this.bufferMaxEntries = typeof this.options['bufferMaxEntries'] == 'number' ? this.options['bufferMaxEntries'] : -1;\n\n  // Ensure we have a valid db name\n  validateDatabaseName(databaseName);\n\n  // Contains all the connections for the db\n  try {\n    this.native_parser = this.options.native_parser;\n    // The bson lib\n    var bsonLib = this.bsonLib = this.options.native_parser ? require('bson').BSONNative : require('bson').BSONPure;\n    bsonLib = require('bson').BSONPure;\n    // Fetch the serializer object\n    var BSON = bsonLib.BSON;\n\n    // Create a new instance\n    this.bson = new BSON([bsonLib.Long, bsonLib.ObjectID, bsonLib.Binary, bsonLib.Code, bsonLib.DBRef, bsonLib.Symbol, bsonLib.Double, bsonLib.Timestamp, bsonLib.MaxKey, bsonLib.MinKey]);\n    this.bson.promoteLongs = this.options.promoteLongs == null ? true : this.options.promoteLongs;\n\n    // Backward compatibility to access types\n    this.bson_deserializer = bsonLib;\n    this.bson_serializer = bsonLib;\n\n    // Add any overrides to the serializer and deserializer\n    this.bson_deserializer.promoteLongs = this.options.promoteLongs == null ? true : this.options.promoteLongs;\n  } catch (err) {\n    // If we tried to instantiate the native driver\n    var msg = 'Native bson parser not compiled, please compile '\n            + 'or avoid using native_parser=true';\n    throw Error(msg);\n  }\n\n  // Internal state of the server\n  this._state = 'disconnected';\n\n  this.pkFactory = this.options.pkFactory == null ? bsonLib.ObjectID : this.options.pkFactory;\n  this.forceServerObjectId = this.options.forceServerObjectId != null ? this.options.forceServerObjectId : false;\n\n  // Added safe\n  this.safe = this.options.safe == null ? false : this.options.safe;\n\n  // If we have not specified a \"safe mode\" we just print a warning to the console\n  if(this.options.safe == null\n    && this.options.w == null\n    && this.options.j == null\n    && this.options.journal == null\n    && this.options.fsync == null) {\n    console.log(\"========================================================================================\");\n    console.log(\"=  Please ensure that you set the default write concern for the database by setting    =\");\n    console.log(\"=   one of the options                                                                 =\");\n    console.log(\"=                                                                                      =\");\n    console.log(\"=     w: (value of > -1 or the string 'majority'), where < 1 means                     =\");\n    console.log(\"=        no write acknowledgement                                                       =\");\n    console.log(\"=     journal: true/false, wait for flush to journal before acknowledgement             =\");\n    console.log(\"=     fsync: true/false, wait for flush to file system before acknowledgement           =\");\n    console.log(\"=                                                                                      =\");\n    console.log(\"=  For backward compatibility safe is still supported and                              =\");\n    console.log(\"=   allows values of [true | false | {j:true} | {w:n, wtimeout:n} | {fsync:true}]      =\");\n    console.log(\"=   the default value is false which means the driver receives does not                =\");\n    console.log(\"=   return the information of the success/error of the insert/update/remove            =\");\n    console.log(\"=                                                                                      =\");\n    console.log(\"=   ex: new Db(new Server('localhost', 27017), {safe:false})                           =\");\n    console.log(\"=                                                                                      =\");\n    console.log(\"=   http://www.mongodb.org/display/DOCS/getLastError+Command                           =\");\n    console.log(\"=                                                                                      =\");\n    console.log(\"=  The default of no acknowledgement will change in the very near future                =\");\n    console.log(\"=                                                                                      =\");\n    console.log(\"=  This message will disappear when the default safe is set on the driver Db           =\");\n    console.log(\"========================================================================================\");\n  }\n\n  // Internal states variables\n  this.notReplied ={};\n  this.isInitializing = true;\n  this.openCalled = false;\n\n  // Command queue, keeps a list of incoming commands that need to be executed once the connection is up\n  this.commands = [];\n\n  // Set up logger\n  this.logger = this.options.logger != null\n    && (typeof this.options.logger.debug == 'function')\n    && (typeof this.options.logger.error == 'function')\n    && (typeof this.options.logger.log == 'function')\n      ? this.options.logger : {error:function(message, object) {}, log:function(message, object) {}, debug:function(message, object) {}};\n\n  // Associate the logger with the server config\n  this.serverConfig.logger = this.logger;\n  if(this.serverConfig.strategyInstance) this.serverConfig.strategyInstance.logger = this.logger;\n  this.tag = new Date().getTime();\n  // Just keeps list of events we allow\n  this.eventHandlers = {error:[], parseError:[], poolReady:[], message:[], close:[]};\n\n  // Controls serialization options\n  this.serializeFunctions = this.options.serializeFunctions != null ? this.options.serializeFunctions : false;\n\n  // Raw mode\n  this.raw = this.options.raw != null ? this.options.raw : false;\n\n  // Record query stats\n  this.recordQueryStats = this.options.recordQueryStats != null ? this.options.recordQueryStats : false;\n\n  // If we have server stats let's make sure the driver objects have it enabled\n  if(this.recordQueryStats == true) {\n    this.serverConfig.enableRecordQueryStats(true);\n  }\n\n  // Retry information\n  this.retryMiliSeconds = this.options.retryMiliSeconds != null ? this.options.retryMiliSeconds : 1000;\n  this.numberOfRetries = this.options.numberOfRetries != null ? this.options.numberOfRetries : 60;\n\n  // Set default read preference if any\n  this.readPreference = this.options.readPreference;\n\n  // Set slaveOk if we have specified a secondary or secondary preferred readPreference\n  if(this.readPreference == ReadPreference.SECONDARY ||\n    this.readPreference == ReadPreference.SECONDARY_PREFERRED) {\n    this.slaveOk = true;\n  }\n\n  // Set read preference on serverConfig if none is set\n  // but the db one was\n  if(this.serverConfig.options.readPreference != null) {\n    this.serverConfig.setReadPreference(this.serverConfig.options.readPreference);\n  } else if(this.readPreference != null) {\n    this.serverConfig.setReadPreference(this.readPreference);\n  }\n\n  // Ensure we keep a reference to this db\n  this.serverConfig._dbStore.add(this);\n};\n\n/**\n * @ignore\n */\nfunction validateDatabaseName(databaseName) {\n  if(typeof databaseName !== 'string') throw new Error(\"database name must be a string\");\n  if(databaseName.length === 0) throw new Error(\"database name cannot be the empty string\");\n  if(databaseName == '$external') return;\n\n  var invalidChars = [\" \", \".\", \"$\", \"/\", \"\\\\\"];\n  for(var i = 0; i < invalidChars.length; i++) {\n    if(databaseName.indexOf(invalidChars[i]) != -1) throw new Error(\"database names cannot contain the character '\" + invalidChars[i] + \"'\");\n  }\n}\n\n/**\n * @ignore\n */\ninherits(Db, EventEmitter);\n\n/**\n * Initialize the database connection.\n *\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the index information or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.open = function(callback) {\n  var self = this;\n\n  // Check that the user has not called this twice\n  if(this.openCalled) {\n    // Close db\n    this.close();\n    // Throw error\n    throw new Error(\"db object already connecting, open cannot be called multiple times\");\n  }\n\n  // If we have a specified read preference\n  if(this.readPreference != null) this.serverConfig.setReadPreference(this.readPreference);\n\n  // Set that db has been opened\n  this.openCalled = true;\n\n  // Set the status of the server\n  self._state = 'connecting';\n\n  // Set up connections\n  if(self.serverConfig instanceof Server || self.serverConfig instanceof ReplSet || self.serverConfig instanceof Mongos) {\n    // Ensure we have the original options passed in for the server config\n    var connect_options = {};\n    for(var name in self.serverConfig.options) {\n      connect_options[name] = self.serverConfig.options[name]\n    }\n    connect_options.firstCall = true;\n\n    // Attempt to connect\n    self.serverConfig.connect(self, connect_options, function(err, result) {\n      if(err != null) {\n        // Close db to reset connection\n        return self.close(function () {\n          // Return error from connection\n          return callback(err, null);\n        });\n      }\n      // Set the status of the server\n      self._state = 'connected';\n      // If we have queued up commands execute a command to trigger replays\n      if(self.commands.length > 0) _execute_queued_command(self);\n      // Callback\n      process.nextTick(function() {\n        try {\n          callback(null, self);\n        } catch(err) {\n          self.close();\n          throw err;\n        }\n      });\n    });\n  } else {\n    try {\n      callback(Error(\"Server parameter must be of type Server, ReplSet or Mongos\"), null);\n    } catch(err) {\n      self.close();\n      throw err;\n    }\n  }\n};\n\n/**\n * Create a new Db instance sharing the current socket connections.\n *\n * @param {String} dbName the name of the database we want to use.\n * @return {Db} a db instance using the new database.\n * @api public\n */\nDb.prototype.db = function(dbName) {\n  // Copy the options and add out internal override of the not shared flag\n  var options = {};\n  for(var key in this.options) {\n    options[key] = this.options[key];\n  }\n\n  // Add override flag\n  options['override_used_flag'] = true;\n  // Check if the db already exists and reuse if it's the case\n  var db = this.serverConfig._dbStore.fetch(dbName);\n\n  // Create a new instance\n  if(!db) {\n    db = new Db(dbName, this.serverConfig, options);\n  }\n\n  // Return the db object\n  return db;\n};\n\n/**\n * Close the current db connection, including all the child db instances. Emits close event and calls optional callback.\n *\n * @param {Boolean} [forceClose] connection can never be reused.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.close = function(forceClose, callback) {\n  var self = this;\n  // Ensure we force close all connections\n  this._applicationClosed = false;\n\n  if(typeof forceClose == 'function') {\n    callback = forceClose;\n  } else if(typeof forceClose == 'boolean') {\n    this._applicationClosed = forceClose;\n  }\n\n  this.serverConfig.close(function(err, result) {\n    // You can reuse the db as everything is shut down\n    self.openCalled = false;\n    // If we have a callback call it\n    if(callback) process.nextTick(function() {\n      callback(err, result);\n    });\n  });\n};\n\n/**\n * Access the Admin database\n *\n * @param {Function} [callback] returns the results.\n * @return {Admin} the admin db object.\n * @api public\n */\nDb.prototype.admin = function(callback) {\n  if(callback == null) return new Admin(this);\n  callback(null, new Admin(this));\n};\n\nvar transformCollections = function(databaseName) {\n  var matching = f('%s.', databaseName);\n\n  return function(results) {\n    if(Array.isArray(results)) {\n      for(var i = 0; i < results.length; i++) {\n        var index = results[i].name.indexOf(matching);\n        // Remove database name if available\n        if(results[i].name && index == 0) {\n          results[i].name = results[i].name.substr(index + matching.length);\n        }\n      }      \n    } else {\n      var index = results.name.indexOf(matching);      \n      if(index == 0) {\n        results.name = results.name.substr(index + matching.length);\n      }\n    }\n\n    // Return the results\n    return results;\n  }\n}\n\n/**\n * Get the list of all collection names for the specified db\n *\n * Options\n *  - **batchSize** {Number, default:null}, The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n *\n * @param {object} filter Query to filter collections by\n * @param {object} [options] additional options during update.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @return {Cursor}\n * @api public\n */\nDb.prototype.listCollections = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  // Checkout the writer\n  var connection = this.serverConfig.checkoutReader();\n  // We have a list collections command\n  if(connection && connection.serverCapabilities.hasListCollectionsCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}\n    // Build the command\n    var command = { listCollections : true, filter: filter, cursor: cursor };\n    // Get the command cursor\n    return new CommandCursor(this, this.collection(DbCommand.SYSTEM_NAMESPACE_COLLECTION), command, {transform: transformCollections(this.databaseName) });\n  }\n\n  // We cannot use the listCollectionsCommand\n  if(connection && !connection.serverCapabilities.hasListCollectionsCommand) {\n    // If we have legacy mode and have not provided a full db name filter it\n    // Use Regex to correctly check if the filter name contains the database name at the beginning along with a dot\n    if(typeof filter.name == 'string' && !(new RegExp('^' + this.databaseName + '\\\\.').test(filter.name))) {\n      filter = utils.shallowObjectCopy(filter);\n      filter.name = f('%s.%s', this.databaseName, filter.name);\n    }\n  }\n\n  // No filter, filter by current database\n  if(filter == null) {\n    filter.name = f('/%s/', this.databaseName);\n  }\n\n  // Rewrite the filter to use $and to filter out indexes\n  if(filter.name) {\n    filter = {$and: [{name: filter.name}, {name:/^((?!\\$).)*$/}]};\n  } else {\n    filter = {name:/^((?!\\$).)*$/};\n  }\n\n  // Return options\n  var options = {transforms: transformCollections(this.databaseName)}\n  // Get the cursor\n  var cursor = this.collection(DbCommand.SYSTEM_NAMESPACE_COLLECTION).find(filter, options);\n  // Set the passed in batch size if one was provided\n  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);\n    // We have a fallback mode using legacy systems collections\n  return cursor;\n};\n\n/**\n * Get the list of all collection names for the specified db\n *\n * Options\n *  - **namesOnly** {String, default:false}, Return only the full collection namespace.\n *\n * @param {String} [collectionName] the collection name we wish to filter by.\n * @param {Object} [options] additional options during update.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the collection names or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.collectionNames = function(collectionName, options, callback) {\n  // Unpack calls\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  collectionName = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  var filter = {}\n  if(collectionName) {\n    filter.name = collectionName;\n  }\n\n  // Call list collections\n  this.listCollections(filter, options).toArray(callback);\n};\n\n/**\n * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\n * can use it without a callback in the following way. var collection = db.collection('mycollection');\n *\n * Options\n*  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *  - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n *  - **raw** {Boolean, default:false}, perform all operations using raw bson objects.\n *  - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n *  - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n *  - **strict**, (Boolean, default:false) returns an error if the collection does not exist\n *\n * @param {String} collectionName the collection name we wish to access.\n * @param {Object} [options] returns option results.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the collection or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.collection = function(collectionName, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  var self = this;\n\n  if(options == null || !options.strict) {\n    try {\n      var collection = new Collection(self, collectionName, self.pkFactory, options);\n      if(callback) callback(null, collection);\n      return collection;\n    } catch(err) {\n      if(callback) return callback(err);\n      throw err;\n    }\n  }\n\n  // Strict mode\n  if(typeof callback != 'function') {\n    throw utils.toError(f(\"A callback is required in strict mode. While getting collection %s.\", collectionName));\n  }\n\n  self.listCollections({name:collectionName}).toArray(function(err, collections) {\n    if(err != null) return callback(err, null);\n    if(collections.length == 0) return callback(utils.toError(f(\"Collection %s does not exist. Currently in strict mode.\", collectionName)), null);\n\n    try {\n      return callback(null, new Collection(self, collectionName, self.pkFactory, options));\n    } catch(err) {\n      return callback(err, null);\n    }\n  });\n};\n\n/**\n * Fetch all collections for the current db.\n *\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the collections or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.collections = function(callback) {\n  var self = this;\n  // Let's get the collection names\n  self.collectionNames(function(err, documents) {\n    if(err != null) return callback(err, null);\n\n    // Filter collections removing any illegal ones\n    documents = documents.filter(function(doc) {\n      return doc.name.indexOf('$') == -1;\n    });\n\n    // Create collection objects\n    var collections = documents.map(function(document) {\n      return new Collection(self, document.name.replace(self.databaseName + \".\", ''), self.pkFactory);\n    });\n\n    // Return the collection objects\n    callback(null, collections);\n  });\n};\n\n/**\n * Evaluate javascript on the server\n *\n * Options\n *  - **nolock** {Boolean, default:false}, Tell MongoDB not to block on the evaulation of the javascript.\n *\n * @param {Code} code javascript to execute on server.\n * @param {Object|Array} [parameters] the parameters for the call.\n * @param {Object} [options] the options\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from eval or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.eval = function(code, parameters, options, callback) {\n  // Unpack calls\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  parameters = args.length ? args.shift() : parameters;\n  options = args.length ? args.shift() || {} : {};\n\n  var finalCode = code;\n  var finalParameters = [];\n  // If not a code object translate to one\n  if(!(finalCode instanceof this.bsonLib.Code)) {\n    finalCode = new this.bsonLib.Code(finalCode);\n  }\n\n  // Ensure the parameters are correct\n  if(parameters != null && parameters.constructor != Array && typeof parameters !== 'function') {\n    finalParameters = [parameters];\n  } else if(parameters != null && parameters.constructor == Array && typeof parameters !== 'function') {\n    finalParameters = parameters;\n  }\n\n  // Create execution selector\n  var cmd = {'$eval':finalCode, 'args':finalParameters};\n  // Check if the nolock parameter is passed in\n  if(options['nolock']) {\n    cmd['nolock'] = options['nolock'];\n  }\n\n  // Set primary read preference\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Execute the command\n  this.command(cmd, options, function(err, result) {\n    if(err) return callback(err, null);\n    if(result && result.ok == 1) return callback(null, result.retval);\n    if(result) return callback(new Error(\"eval failed: \" + result.errmsg), null);\n    callback(err, result);\n  });\n};\n\n/**\n * Dereference a dbref, against a db\n *\n * @param {DBRef} dbRef db reference object we wish to resolve.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dereference or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.dereference = function(dbRef, callback) {\n  var db = this;\n  // If we have a db reference then let's get the db first\n  if(dbRef.db != null) db = this.db(dbRef.db);\n  // Fetch the collection and find the reference\n  var collection = db.collection(dbRef.namespace);\n  collection.findOne({'_id':dbRef.oid}, function(err, result) {\n    callback(err, result);\n  });\n}\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info\n *\n * Options\n *  - **authMechanism** {String, default:MONGODB-CR}, The authentication mechanism to use, GSSAPI or MONGODB-CR\n *  - **authdb** {String}, The Db to authenticate against instead of this\n *\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from logout or null if an error occurred.\n * @param {Object} [options] the options\n * @return {null}\n * @api public\n */\nDb.prototype.logout = function(options, callback) {\n  var self = this;\n  // Unpack calls\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n\n  // We have passed in an auth db\n  var runDb = options.authdb ? this.db(options.authdb) : this;\n\n  // Number of connections we need to logout from\n  var numberOfConnections = this.serverConfig.allRawConnections().length;\n  // logout command\n  var cmd = {'logout':1};\n  // Add onAll to login to ensure all connection are logged out\n  options.onAll = true;\n\n  // Execute the command\n  runDb.command(cmd, options, function(err, result) {\n    // Count down\n    numberOfConnections = numberOfConnections - 1;\n    // Work around the case where the number of connections are 0\n    if(numberOfConnections == 0 && typeof callback == 'function') {\n      var internalCallback = callback;\n      callback = null;\n\n      // Remove the db from auths\n      self.serverConfig.auth.remove(self.databaseName);\n      // Callback with result\n      internalCallback(null, result.ok == 1 ? true : false);\n    }\n  });\n}\n\n/**\n * Authenticate a user against the server.\n * authMechanism\n * Options\n *  - **authMechanism** {String, default:MONGODB-CR}, The authentication mechanism to use, GSSAPI or MONGODB-CR\n *  - **authdb** {String}, The Db to authenticate against instead of this\n *\n * @param {String} username username.\n * @param {String} password password.\n * @param {Object} [options] the options\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from authentication or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.authenticate = function(username, password, options, callback) {\n  var self = this;\n\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = utils.shallowObjectCopy(options);\n  }\n\n  // Set default mechanism\n  if(!options.authMechanism) {\n    options.authMechanism = 'DEFAULT';\n  } else if(options.authMechanism != 'GSSAPI'\n    && options.authMechanism != 'MONGODB-CR'\n    && options.authMechanism != 'MONGODB-X509'\n    && options.authMechanism != 'SCRAM-SHA-1'\n    && options.authMechanism != 'PLAIN') {\n      return callback(new Error(\"only GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\"));\n  }\n\n  // the default db to authenticate against is 'this'\n  // if authententicate is called from a retry context, it may be another one, like admin\n  var authdb = options.authdb ? options.authdb : self.databaseName;\n  authdb = options.authSource ? options.authSource : authdb;\n\n  // Callback\n  var _callback = function(err, result) {\n    if(self.listeners(\"authenticated\").length > 0) {\n      self.emit(\"authenticated\", err, result);\n    }\n\n    // Return to caller\n    callback(err, result);\n  }\n\n  // If classic auth delegate to auth command\n  if(options.authMechanism == 'MONGODB-CR') {\n    mongodb_cr_authenticate(self, username, password, authdb, options, _callback);\n  } else if(options.authMechanism == 'PLAIN') {\n    mongodb_plain_authenticate(self, username, password, options, _callback);\n  } else if(options.authMechanism == 'MONGODB-X509') {\n    mongodb_x509_authenticate(self, username, password, options, _callback);\n  } else if(options.authMechanism == 'SCRAM-SHA-1') {\n    mongodb_scram_authenticate(self, username, password, authdb, options, _callback);\n  } else if(options.authMechanism == 'DEFAULT') {\n    // Get a server\n    var servers = this.serverConfig.allServerInstances();\n    // if the max wire protocol version >= 3 do scram otherwise mongodb_cr\n    if(servers.length > 0 && servers[0].isMasterDoc && servers[0].isMasterDoc.maxWireVersion >= 3) {\n      mongodb_scram_authenticate(self, username, password, authdb, options, _callback);\n    } else {\n      mongodb_cr_authenticate(self, username, password, authdb, options, _callback);\n    }\n  } else if(options.authMechanism == 'GSSAPI') {\n    //\n    // Kerberos library is not installed, throw and error\n    if(hasKerberos == false) {\n      console.log(\"========================================================================================\");\n      console.log(\"=  Please make sure that you install the Kerberos library to use GSSAPI                =\");\n      console.log(\"=                                                                                      =\");\n      console.log(\"=  npm install -g kerberos                                                             =\");\n      console.log(\"=                                                                                      =\");\n      console.log(\"=  The Kerberos package is not installed by default for simplicities sake              =\");\n      console.log(\"=  and needs to be global install                                                      =\");\n      console.log(\"========================================================================================\");\n      throw new Error(\"Kerberos library not installed\");\n    }\n\n    if(process.platform == 'win32') {\n      mongodb_sspi_authenticate(self, username, password, authdb, options, _callback);\n    } else {\n      // We have the kerberos library, execute auth process\n      mongodb_gssapi_authenticate(self, username, password, authdb, options, _callback);\n    }\n  }\n};\n\n/**\n * Add a user to the database.\n *\n * Options\n *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *  - **customData**, (Object, default:{}) custom data associated with the user (only Mongodb 2.6 or higher)\n *  - **roles**, (Array, default:[]) roles associated with the created user (only Mongodb 2.6 or higher)\n *\n * @param {String} username username.\n * @param {String} password password.\n * @param {Object} [options] additional options during update.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from addUser or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.addUser = function(username, password, options, callback) {\n  // Checkout a write connection to get the server capabilities\n  var connection = this.serverConfig.checkoutWriter();\n  if(connection != null\n    && connection.serverCapabilities != null\n    && connection.serverCapabilities.hasAuthCommands) {\n      return _executeAuthCreateUserCommand(this, username, password, options, callback);\n  }\n\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n\n  // Get the error options\n  var errorOptions = _getWriteConcern(this, options);\n  errorOptions.w = errorOptions.w == null ? 1 : errorOptions.w;\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + \":mongo:\" + password);\n  var userPassword = md5.digest('hex');\n  // Fetch a user collection\n  var collection = this.collection(DbCommand.SYSTEM_USER_COLLECTION);\n  // Check if we are inserting the first user\n  collection.count({}, function(err, count) {\n    // We got an error (f.ex not authorized)\n    if(err != null) return callback(err, null);\n    // Check if the user exists and update i\n    collection.find({user: username}, {dbName: options['dbName']}).toArray(function(err, documents) {\n      // We got an error (f.ex not authorized)\n      if(err != null) return callback(err, null);\n      // Add command keys\n      var commandOptions = errorOptions;\n      commandOptions.dbName = options['dbName'];\n      commandOptions.upsert = true;\n\n      // We have a user, let's update the password or upsert if not\n      collection.update({user: username},{$set: {user: username, pwd: userPassword}}, commandOptions, function(err, results, full) {\n        if(count == 0 && err) {\n          callback(null, [{user:username, pwd:userPassword}]);\n        } else if(err) {\n          callback(err, null)\n        } else {\n          callback(null, [{user:username, pwd:userPassword}]);\n        }\n      });\n    });\n  });\n};\n\n/**\n * @ignore\n */\nvar _executeAuthCreateUserCommand = function(self, username, password, options, callback) {\n  // Special case where there is no password ($external users)\n  if(typeof username == 'string'\n    && password != null && typeof password == 'object') {\n    callback = options;\n    options = password;\n    password = null;\n  }\n\n  // Unpack all options\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Error out if we digestPassword set\n  if(options.digestPassword != null) {\n    throw utils.toError(\"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\");\n  }\n\n  // Get additional values\n  var customData = options.customData != null ? options.customData : {};\n  var roles = Array.isArray(options.roles) ? options.roles : [];\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // If not roles defined print deprecated message\n  if(roles.length == 0) {\n    console.log(\"Creating a user without roles is deprecated in MongoDB >= 2.6\");\n  }\n\n  // Get the error options\n  var writeConcern = _getWriteConcern(self, options);\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Check the db name and add roles if needed\n  if((self.databaseName.toLowerCase() == 'admin' || options.dbName == 'admin') && !Array.isArray(options.roles)) {\n    roles = ['root']\n  } else if(!Array.isArray(options.roles)) {\n    roles = ['dbOwner']\n  }\n\n  // Build the command to execute\n  var command = {\n      createUser: username\n    , customData: customData\n    , roles: roles\n    , digestPassword:false\n    , writeConcern: writeConcern\n  }\n\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + \":mongo:\" + password);\n  var userPassword = md5.digest('hex');\n\n  // No password\n  if(typeof password == 'string') {\n    command.pwd = userPassword;\n  }\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err) return callback(err, null);\n    callback(!result.ok ? utils.toError(\"Failed to add user \" + username) : null\n      , result.ok ? [{user: username, pwd: ''}] : null);\n  })\n}\n\n/**\n * Remove a user from a database\n *\n * Options\n *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *\n * @param {String} username username.\n * @param {Object} [options] additional options during update.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from removeUser or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.removeUser = function(username, options, callback) {\n  // Checkout a write connection to get the server capabilities\n  var connection = this.serverConfig.checkoutWriter();\n  if(connection != null && connection.serverCapabilities != null && connection.serverCapabilities.hasAuthCommands) {\n    return _executeAuthRemoveUserCommand(this, username, options, callback);\n  }\n\n  // Unpack the parameters\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n\n  // Figure out the safe mode settings\n  var safe = self.safe != null && self.safe == false ? {w: 1} : self.safe;\n  // Override with options passed in if applicable\n  safe = options != null && options['safe'] != null ? options['safe'] : safe;\n  // Ensure it's at least set to safe\n  safe = safe == null ? {w: 1} : safe;\n\n  // Fetch a user collection\n  var collection = this.collection(DbCommand.SYSTEM_USER_COLLECTION);\n  collection.findOne({user: username}, {dbName: options['dbName']}, function(err, user) {\n    if(user != null) {\n      // Add command keys\n      var commandOptions = safe;\n      commandOptions.dbName = options['dbName'];\n\n      collection.remove({user: username}, commandOptions, function(err, result) {\n        callback(err, true);\n      });\n    } else {\n      callback(err, false);\n    }\n  });\n};\n\nvar _executeAuthRemoveUserCommand = function(self, username, options, callback) {\n  // Unpack all options\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Get the error options\n  var writeConcern = _getWriteConcern(self, options);\n  var commandOptions = {writeCommand:true};\n  if(options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Get additional values\n  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;\n\n  // Add maxTimeMS to options if set\n  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Build the command to execute\n  var command = {\n      dropUser: username\n    , writeConcern: writeConcern\n  }\n\n  // Execute the command\n  self.command(command, commandOptions, function(err, result) {\n    if(err) return callback(err, null);\n    callback(null, result.ok ? true : false);\n  })\n}\n\n/**\n * Creates a collection on a server pre-allocating space, need to create f.ex capped collections.\n *\n * Options\n*  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *  - **serializeFunctions** {Boolean, default:false}, serialize functions on the document.\n *  - **raw** {Boolean, default:false}, perform all operations using raw bson objects.\n *  - **pkFactory** {Object}, object overriding the basic ObjectID primary key generation.\n *  - **capped** {Boolean, default:false}, create a capped collection.\n *  - **size** {Number}, the size of the capped collection in bytes.\n *  - **max** {Number}, the maximum number of documents in the capped collection.\n *  - **autoIndexId** {Boolean, default:true}, create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2.\n *  - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n *  - **strict**, (Boolean, default:false) throws an error if collection already exists\n *\n * @param {String} collectionName the collection name we wish to access.\n * @param {Object} [options] returns option results.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from createCollection or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.createCollection = function(collectionName, options, callback) {\n  var self = this;\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Figure out the safe mode settings\n  var safe = self.safe != null && self.safe == false ? {w: 1} : self.safe;\n  // Override with options passed in if applicable\n  safe = options != null && options['safe'] != null ? options['safe'] : safe;\n  // Ensure it's at least set to safe\n  safe = safe == null ? {w: 1} : safe;\n  // Check if we have the name\n  this.listCollections({name:collectionName}).toArray(function(err, collections) {\n    if(err != null) return callback(err, null);\n    if(collections.length > 0 && options.strict) {\n      return callback(utils.toError(f(\"Collection %s already exists. Currently in strict mode.\", collectionName)), null);\n    } else if (collections.length > 0) {\n      try { return callback(null, new Collection(self, collectionName, self.pkFactory, options)); }\n      catch(err) { return callback(err); }\n    }\n\n    // logout command\n    var cmd = {'create':collectionName};\n\n    for(var name in options) {\n      if(options[name] != null && typeof options[name] != 'function') cmd[name] = options[name];\n    }\n\n    // Execute the command\n    self.command(cmd, options, function(err, result) {\n      // Handle errors of pre-existing collections\n      if(err && options && options.strict) {\n        return callback(err, null);\n      }\n      // Attempt to return a collection\n      try {\n        callback(null, new Collection(self, collectionName, self.pkFactory, options));\n      } catch(err) {\n        callback(utils.toError(err), null);\n      }\n    });\n  });\n};\n\nvar _getReadConcern = function(self, options) {\n  if(options.readPreference) return options.readPreference;\n  if(self.readPreference) return self.readPreference;\n  return 'primary';\n}\n\n/**\n * Execute a command hash against MongoDB. This lets you acess any commands not available through the api on the server.\n *\n * Options\n *  - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n *  - **maxTimeMS** {Number}, number of milliseconds to wait before aborting the query.\n *  - **ignoreCommandFilter** {Boolean}, overrides the default redirection of certain commands to primary.\n *  - **writeCommand** {Boolean, default: false}, signals this is a write command and to ignore read preferences\n *  - **checkKeys** {Boolean, default: false}, overrides the default not to check the key names for the command\n *\n * @param {Object} selector the command hash to send to the server, ex: {ping:1}.\n * @param {Object} [options] additional options for the command.\n * @param {Function} callback this will be called after executing this method. The command always return the whole result of the command as the second parameter.\n * @return {null}\n * @api public\n */\nDb.prototype.command = function(selector, options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Make a shallow copy so no modifications happen on the original\n  options = utils.shallowObjectCopy(options);\n\n  // Ignore command preference (I know what I'm doing)\n  var ignoreCommandFilter = options.ignoreCommandFilter ? options.ignoreCommandFilter : false;\n\n  // Get read preference if we set one\n  var readPreference = _getReadConcern(this, options);\n\n  // Ensure only commands who support read Prefrences are exeuted otherwise override and use Primary\n  if(readPreference != false && ignoreCommandFilter == false) {\n    if(selector['group'] || selector['aggregate'] || selector['collStats'] || selector['dbStats']\n      || selector['count'] || selector['distinct'] || selector['geoNear'] || selector['geoSearch']\n      || selector['geoWalk'] || selector['text'] || selector['cursorInfo']\n      || selector['parallelCollectionScan']\n      || (selector['mapreduce'] && (selector.out == 'inline' || selector.out.inline))) {\n      // Set the read preference\n      options.readPreference = readPreference;\n    } else {\n      options.readPreference = ReadPreference.PRIMARY;\n    }\n  } else if(readPreference != false) {\n    options.readPreference = readPreference;\n  }\n\n  // Add the maxTimeMS option to the command if specified\n  if(typeof options.maxTimeMS == 'number') {\n    selector.maxTimeMS = options.maxTimeMS\n  }\n\n  // Command options\n  var command_options = {};\n\n  // Do we have an override for checkKeys\n  if(typeof options['checkKeys'] == 'boolean') command_options['checkKeys'] = options['checkKeys'];\n  command_options['checkKeys'] = typeof options['checkKeys'] == 'boolean' ? options['checkKeys'] : false;\n  if(typeof options['serializeFunctions'] == 'boolean') command_options['serializeFunctions'] = options['serializeFunctions'];\n  if(options['dbName']) command_options['dbName'] = options['dbName'];\n\n  // If we have a write command, remove readPreference as an option\n  if((options.writeCommand\n    || selector['findAndModify']\n    || selector['insert'] || selector['update'] || selector['delete']\n    || selector['createUser'] || selector['updateUser'] || selector['removeUser'])\n    && options.readPreference) {\n    delete options['readPreference'];\n  }\n\n  // Add a write concern if we have passed in any\n  if(options.w || options.wtimeout || options.j || options.fsync || options.safe) {\n    selector.writeConcern = {};\n    if(options.safe) selector.writeConcern.w = 1;\n    if(options.w) selector.writeConcern.w = options.w;\n    if(options.wtimeout) selector.writeConcern.wtimeout = options.wtimeout;\n    if(options.j) selector.writeConcern.j = options.j;\n    if(options.fsync) selector.writeConcern.fsync = options.fsync;\n  }\n\n  // If we have an actual writeConcern object override\n  if(options.writeConcern) {\n    selector.writeConcern = writeConcern;\n  }\n\n  // Check if we need to set slaveOk\n  if(command_options.readPreference != 'primary')\n    command_options.slaveOk = true;\n\n  // Execution db\n  var execDb = typeof options.auth == 'string' ? this.db(options.auth) : this;\n  execDb = typeof options.authdb == 'string' ? this.db(options.authdb) : execDb;\n\n  // Execute a query command\n  this._executeQueryCommand(DbCommand.createDbSlaveOkCommand(execDb, selector, command_options), options, function(err, results, connection) {\n    if(options.returnConnection) {\n      if(err) return callback(err, null, connection);\n      if(results == null || results.documents == null) return callback(new Error(\"command failed to return result\"));\n      if(results.documents[0].errmsg)\n        return callback(utils.toError(results.documents[0]), null, connection);\n      callback(null, results.documents[0], connection);\n    } else {\n      if(err) return callback(err, null);\n      if(results == null || results.documents == null) return callback(new Error(\"command failed to return result\"));\n      if(results.documents[0].errmsg)\n        return callback(utils.toError(results.documents[0]), null);\n      callback(null, results.documents[0]);\n    }\n  });\n};\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @param {String} collectionName the name of the collection we wish to drop.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dropCollection or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.dropCollection = function(collectionName, callback) {\n  var self = this;\n  callback || (callback = function(){});\n\n  // Command to execute\n  var cmd = {'drop':collectionName}\n\n  // Execute the command\n  this.command(cmd, {}, function(err, result) {\n    if(err) return callback(err, null);\n    if(result.ok) return callback(null, true);\n    callback(null, false);\n  });\n};\n\n/**\n * Rename a collection.\n *\n * Options\n *  - **dropTarget** {Boolean, default:false}, drop the target name collection if it previously exists.\n *\n * @param {String} fromCollection the name of the current collection we wish to rename.\n * @param {String} toCollection the new name of the collection.\n * @param {Object} [options] returns option results.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from renameCollection or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {\n  var self = this;\n\n  if(typeof options == 'function') {\n    callback = options;\n    options = {}\n  }\n\n  // Add return new collection\n  options.new_collection = true;\n\n  // Execute using the collection method\n  this.collection(fromCollection).rename(toCollection, options, callback);\n};\n\n/**\n * Runs a command on the database.\n * @ignore\n * @api private\n */\nDb.prototype.executeDbCommand = function(command_hash, options, callback) {\n  if(callback == null) { callback = options; options = {}; }\n  this._executeQueryCommand(DbCommand.createDbSlaveOkCommand(this, command_hash, options), options, function(err, result) {\n    if(callback) callback(err, result);\n  });\n};\n\n/**\n * Runs a command on the database as admin.\n * @ignore\n * @api private\n */\nDb.prototype.executeDbAdminCommand = function(command_hash, options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {}\n  }\n\n  if(options.readPreference) {\n    options.readPreference = options.readPreference;\n  }\n\n  this._executeQueryCommand(DbCommand.createAdminDbCommand(this, command_hash), options, function(err, result) {\n    if(callback) callback(err, result);\n  });\n};\n\n/**\n * Creates an index on the collection.\n *\n * Options\n*  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *  - **unique** {Boolean, default:false}, creates an unique index.\n *  - **sparse** {Boolean, default:false}, creates a sparse index.\n *  - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n *  - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n *  - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n *  - **v** {Number}, specify the format version of the indexes.\n *  - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n *  - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n *\n * @param {String} collectionName name of the collection to create the index on.\n * @param {Object} fieldOrSpec fieldOrSpec that defines the index.\n * @param {Object} [options] additional options during update.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from createIndex or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.createIndex = function(collectionName, fieldOrSpec, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n  options = typeof callback === 'function' ? options : callback;\n  options = options == null ? {} : options;\n\n  // Get the error options\n  var writeConcern = _getWriteConcern(self, options);\n  // Ensure we have a callback\n  if(_hasWriteConcern(writeConcern) && typeof callback != 'function') {\n    throw new Error(\"Cannot use a writeConcern without a provided callback\");\n  }\n\n  // Attempt to run using createIndexes command\n  createIndexUsingCreateIndexes(self, collectionName, fieldOrSpec, options, function(err, result) {\n    if(err == null) {\n      return callback(err, result);\n    }\n\n    // Create command\n    var command = createCreateIndexCommand(self, collectionName, fieldOrSpec, options);\n    // Default command options\n    var commandOptions = {};\n\n    // If we have error conditions set handle them\n    if(_hasWriteConcern(writeConcern) && typeof callback == 'function') {\n      // Set safe option\n      commandOptions['safe'] = writeConcern;\n      // If we have an error option\n      if(typeof writeConcern == 'object') {\n        var keys = Object.keys(writeConcern);\n        for(var i = 0; i < keys.length; i++) {\n          commandOptions[keys[i]] = writeConcern[keys[i]];\n        }\n      }\n\n      // Execute insert command\n      self._executeInsertCommand(command, commandOptions, function(err, result) {\n        if(err != null) return callback(err, null);\n        if(result == null || result.documents == null) return callback(new Error(\"command failed to return result\"));\n\n        result = result && result.documents;\n        if (result[0].err) {\n          callback(utils.toError(result[0]));\n        } else {\n          callback(null, command.documents[0].name);\n        }\n      });\n    } else {\n      // Execute insert command\n      var result = self._executeInsertCommand(command, commandOptions, function() {});\n      // If no callback just return\n      if(!callback) return;\n      // If error return error\n      if(result instanceof Error) {\n        return callback(result);\n      }\n      // Otherwise just return\n      return callback(null, null);\n    }\n  });\n};\n\nvar createCreateIndexCommand = function(db, collectionName, fieldOrSpec, options) {\n  var indexParameters = utils.parseIndexOptions(fieldOrSpec);\n  var fieldHash = indexParameters.fieldHash;\n  var keys = indexParameters.keys;\n\n  // Generate the index name\n  var indexName = typeof options.name == 'string'\n    ? options.name\n    : indexParameters.name;\n\n  var selector = {\n    'ns': db.databaseName + \".\" + collectionName,\n    'key': fieldHash,\n    'name': indexName\n  }\n\n  // Ensure we have a correct finalUnique\n  var finalUnique = options == null || 'object' === typeof options\n    ? false\n    : options;\n\n  // Set up options\n  options = options == null || typeof options == 'boolean'\n    ? {}\n    : options;\n\n  // Add all the options\n  var keysToOmit = Object.keys(selector);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      selector[optionName] = options[optionName];\n    }\n  }\n\n  if(selector['unique'] == null)\n    selector['unique'] = finalUnique;\n\n  var name = db.databaseName + \".\" + DbCommand.SYSTEM_INDEX_COLLECTION;\n  var cmd = new InsertCommand(db, name, false);\n  return cmd.add(selector);\n}\n\nvar createIndexUsingCreateIndexes = function(self, collectionName, fieldOrSpec, options, callback) {\n  // Build the index\n  var indexParameters = utils.parseIndexOptions(fieldOrSpec);\n  // Generate the index name\n  var indexName = typeof options.name == 'string'\n    ? options.name\n    : indexParameters.name;\n\n  // Set up the index\n  var indexes = [{\n      name: indexName\n    , key: indexParameters.fieldHash\n  }];\n\n  // merge all the options\n  var keysToOmit = Object.keys(indexes[0]);\n  for(var optionName in options) {\n    if(keysToOmit.indexOf(optionName) == -1) {\n      indexes[0][optionName] = options[optionName];\n    }\n  }\n\n  // Create command\n  var command = {createIndexes: collectionName, indexes: indexes};\n  // Build the command\n  self.command(command, options, function(err, result) {\n    if(err) return callback(err, null);\n    if(result.ok == 0) {\n      return callback(utils.toError(result), null);\n    }\n\n    // Return the indexName for backward compatibility\n    callback(null, indexName);\n  });\n}\n\n/**\n * Ensures that an index exists, if it does not it creates it\n *\n * Options\n *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowledgement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *  - **unique** {Boolean, default:false}, creates an unique index.\n *  - **sparse** {Boolean, default:false}, creates a sparse index.\n *  - **background** {Boolean, default:false}, creates the index in the background, yielding whenever possible.\n *  - **min** {Number}, for geospatial indexes set the lower bound for the co-ordinates.\n *  - **max** {Number}, for geospatial indexes set the high bound for the co-ordinates.\n *  - **v** {Number}, specify the format version of the indexes.\n *  - **expireAfterSeconds** {Number}, allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n *  - **name** {String}, override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n *\n * @param {String} collectionName name of the collection to create the index on.\n * @param {Object} fieldOrSpec fieldOrSpec that defines the index.\n * @param {Object} [options] additional options during update.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from ensureIndex or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.ensureIndex = function(collectionName, fieldOrSpec, options, callback) {\n  var self = this;\n\n  if(typeof callback === 'undefined' && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Ensure non empty options\n  options = options || {};\n\n  // Get the error options\n  var writeConcern = _getWriteConcern(this, options);\n  // Make sure we don't try to do a write concern without a callback\n  if(_hasWriteConcern(writeConcern) && callback == null)\n    throw new Error(\"Cannot use a writeConcern without a provided callback\");\n\n  // Create command\n  var command = createCreateIndexCommand(this, collectionName, fieldOrSpec, options);\n  var index_name = command.documents[0].name;\n\n  // Check if the index allready exists\n  this.indexInformation(collectionName, writeConcern, function(err, indexInformation) {\n    if(err != null && err.code != 26) return callback(err, null);\n    // If the index does not exist, create it\n    if(indexInformation == null || !indexInformation[index_name])  {\n      self.createIndex(collectionName, fieldOrSpec, options, callback);\n    } else {\n      if(typeof callback === 'function') return callback(null, index_name);\n    }\n  });\n};\n\n/**\n * Returns the information available on allocated cursors.\n *\n * Options\n *  - **readPreference** {String}, the preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n *\n * @param {Object} [options] additional options during update.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from cursorInfo or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.cursorInfo = function(options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n\n  // cursorInfo command\n  var cmd = {'cursorInfo':1};\n\n  // Execute the command\n  this.command(cmd, options, function(err, result) {\n    if(err) return callback(err, null);\n    callback(null, result);\n  });\n};\n\n/**\n * Drop an index on a collection.\n *\n * @param {String} collectionName the name of the collection where the command will drop an index.\n * @param {String} indexName name of the index to drop.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dropIndex or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.dropIndex = function(collectionName, indexName, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n\n  // Delete index command\n  var cmd = {'deleteIndexes':collectionName, 'index':indexName};\n\n  // Execute command\n  this.command(cmd, options, function(err, result) {\n    if(callback == null) return;\n    if(err) return callback(err, null);\n    callback(null, result);\n  });\n};\n\n/**\n * Reindex all indexes on the collection\n * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n *\n * @param {String} collectionName the name of the collection.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from reIndex or null if an error occurred.\n * @api public\n**/\nDb.prototype.reIndex = function(collectionName, options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Reindex\n  var cmd = {'reIndex':collectionName};\n\n  // Execute the command\n  this.command(cmd, options, function(err, result) {\n    if(callback == null) return;\n    if(err) return callback(err, null);\n    callback(null, result.ok ? true : false);\n  });\n};\n\n/**\n * Retrieves this collections index info.\n *\n * Options\n *  - **full** {Boolean, default:false}, returns the full raw index information.\n *  - **readPreference** {String}, the preferred read preference ((Server.PRIMARY, Server.PRIMARY_PREFERRED, Server.SECONDARY, Server.SECONDARY_PREFERRED, Server.NEAREST).\n *\n * @param {String} collectionName the name of the collection.\n * @param {Object} [options] additional options during update.\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from indexInformation or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.indexInformation = function(name, options, callback) {\n  if(typeof callback === 'undefined') {\n    if(typeof options === 'undefined') {\n      callback = name;\n      name = null;\n    } else {\n      callback = options;\n    }\n    options = {};\n  }\n\n  // If we specified full information\n  var full = options['full'] == null ? false : options['full'];\n  var self = this;\n\n  // Process all the results from the index command and collection\n  var processResults = function(indexes) {\n    // Contains all the information\n    var info = {};\n    // Process all the indexes\n    for(var i = 0; i < indexes.length; i++) {\n      var index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for(var name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  this.collection(name).listIndexes().toArray(function(err, indexes) {\n    if(err) return callback(utils.toError(err));\n    if(full) return callback(null, indexes);\n    callback(null, processResults(indexes));\n  });\n};\n\n/**\n * Drop a database.\n *\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from dropDatabase or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.dropDatabase = function(options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Reindex\n  var cmd = {'dropDatabase':1};\n\n  // Execute the command\n  this.command(cmd, options, function(err, result) {\n    if(callback == null) return;\n    if(err) return callback(err, null);\n    callback(null, result.ok ? true : false);\n  });\n}\n\n/**\n * Get all the db statistics.\n *\n * Options\n *  - **scale** {Number}, divide the returned sizes by scale value.\n *  - **readPreference** {String}, the preferred read preference ((Server.PRIMARY, Server.PRIMARY_PREFERRED, Server.SECONDARY, Server.SECONDARY_PREFERRED, Server.NEAREST).\n *\n * @param {Objects} [options] options for the stats command\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the results from stats or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.prototype.stats = function stats(options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Build command object\n  var commandObject = {\n    dbStats:true\n  };\n\n  // Check if we have the scale value\n  if(options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  // Execute the command\n  this.command(commandObject, options, callback);\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) {\n    return callback;\n  } else {\n    return domain.bind(callback);\n  }\n}\n\n/**\n * @ignore\n */\nvar __executeQueryCommand = function(self, db_command, options, callback) {\n  // Options unpacking\n  var readPreference = options.readPreference != null ? options.readPreference : 'primary';\n  var onAll = options['onAll'] != null ? options['onAll'] : false;\n  var specifiedConnection = options['connection'] != null ? options['connection'] : null;\n  var raw = typeof options.raw == 'boolean' ? options.raw : false;\n\n  // Correct readPreference preference to default primary if set to false, null or primary\n  if(!(typeof readPreference == 'object') && readPreference._type == 'ReadPreference') {\n    readPreference = (readPreference == null || readPreference == 'primary' || readPreference == false) ? ReadPreference.PRIMARY : readPreference;\n    if(!ReadPreference.isValid(readPreference)) return callback(new Error(\"Illegal readPreference mode specified, \" + JSON.stringify(readPreference)));\n  } else if(typeof readPreference == 'object' && readPreference._type == 'ReadPreference') {\n    if(!readPreference.isValid()) return callback(new Error(\"Illegal readPreference mode specified, \" + JSON.stringify(readPreference)));\n  }\n\n  // If we have a read preference set and we are a mongos pass the read preference on to the mongos instance,\n  if(self.serverConfig.isMongos() && readPreference != null && readPreference != 'primary') {\n    db_command.setMongosReadPreference(readPreference);\n  }\n\n  // If we got a callback object\n  if(typeof callback === 'function' && !onAll) {\n    callback = bindToCurrentDomain(callback);\n    // Override connection if we passed in a specific connection\n    var connection = specifiedConnection != null ? specifiedConnection : null;\n\n    if(connection instanceof Error) return callback(connection, null);\n\n    // Fetch either a reader or writer dependent on the specified readPreference option if no connection\n    // was passed in\n    if(connection == null) {\n      connection = self.serverConfig.checkoutReader(readPreference);\n    }\n\n    if(connection == null) {\n      return callback(new Error(\"no open connections\"));\n    } else if(connection instanceof Error || connection['message'] != null) {\n      return callback(connection);\n    }\n\n    // Exhaust Option\n    var exhaust = options.exhaust || false;\n\n    // Register the handler in the data structure\n    self.serverConfig._registerHandler(db_command, raw, connection, exhaust, callback);\n\n    // Write the message out and handle any errors if there are any\n    connection.write(db_command, function(err) {\n      if(err != null) {\n        // Call the handler with an error\n        if(Array.isArray(db_command))\n          self.serverConfig._callHandler(db_command[0].getRequestId(), null, err);\n        else\n          self.serverConfig._callHandler(db_command.getRequestId(), null, err);\n      }\n    });\n  } else if(typeof callback === 'function' && onAll) {\n    callback = bindToCurrentDomain(callback);\n    var connections = self.serverConfig.allRawConnections();\n    var numberOfEntries = connections.length;\n    // Go through all the connections\n    for(var i = 0; i < connections.length; i++) {\n      // Fetch a connection\n      var connection = connections[i];\n\n      // Ensure we have a valid connection\n      if(connection == null) {\n        return callback(new Error(\"no open connections\"));\n      } else if(connection instanceof Error) {\n        return callback(connection);\n      }\n\n      // Register the handler in the data structure\n      self.serverConfig._registerHandler(db_command, raw, connection, callback);\n\n      // Write the message out\n      connection.write(db_command, function(err) {\n        // Adjust the number of entries we need to process\n        numberOfEntries = numberOfEntries - 1;\n        // Remove listener\n        if(err != null) {\n          // Clean up listener and return error\n          self.serverConfig._removeHandler(db_command.getRequestId());\n        }\n\n        // No more entries to process callback with the error\n        if(numberOfEntries <= 0) {\n          callback(err);\n        }\n      });\n\n      // Update the db_command request id\n      db_command.updateRequestId();\n    }\n  } else {\n    // Fetch either a reader or writer dependent on the specified read option\n    var connection = self.serverConfig.checkoutReader(readPreference);\n    // Override connection if needed\n    connection = specifiedConnection != null ? specifiedConnection : connection;\n    // Ensure we have a valid connection\n    if(connection == null || connection instanceof Error || connection['message'] != null) return null;\n    // Write the message out\n    connection.write(db_command, function(err) {\n      if(err != null) {\n        // Emit the error\n        self.emit(\"error\", err);\n      }\n    });\n  }\n};\n\n/**\n * Execute db query command (not safe)\n * @ignore\n * @api private\n */\nDb.prototype._executeQueryCommand = function(db_command, options, callback) {\n  var self = this;\n\n  // Unpack the parameters\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  callback = bindToCurrentDomain(callback);\n\n  // fast fail option used for HA, no retry\n  var failFast = options['failFast'] != null\n    ? options['failFast']\n    : false;\n\n  // Check if the user force closed the command\n  if(this._applicationClosed) {\n    var err = new Error(\"db closed by application\");\n    if('function' == typeof callback) {\n      return callback(err, null);\n    } else {\n      throw err;\n    }\n  }\n\n  if(this.serverConfig.isDestroyed())\n    return callback(new Error(\"Connection was destroyed by application\"));\n\n  // Specific connection\n  var connection = options.connection;\n  // Check if the connection is actually live\n  if(connection\n    && (!connection.isConnected || !connection.isConnected())) connection = null;\n\n  // Get the configuration\n  var config = this.serverConfig;\n  var readPreference = options.readPreference;\n  // Allow for the usage of the readPreference model\n  if(readPreference == null) {\n    readPreference = options.readPreference;\n  }\n\n  if(!connection && !config.canRead(readPreference) && !config.canWrite() && config.isAutoReconnect()) {\n\n    if(readPreference == ReadPreference.PRIMARY\n      || readPreference == ReadPreference.PRIMARY_PREFERRED\n      || (readPreference != null && typeof readPreference == 'object' && readPreference.mode)\n      || readPreference == null) {\n\n      // Save the command\n      self.serverConfig._commandsStore.read_from_writer(\n        {   type: 'query'\n          , db_command: db_command\n          , options: options\n          , callback: callback\n          , db: self\n          , executeQueryCommand: __executeQueryCommand\n          , executeInsertCommand: __executeInsertCommand\n        }\n      );\n    } else {\n      self.serverConfig._commandsStore.read(\n        {   type: 'query'\n          , db_command: db_command\n          , options: options\n          , callback: callback\n          , db: self\n          , executeQueryCommand: __executeQueryCommand\n          , executeInsertCommand: __executeInsertCommand\n        }\n      );\n    }\n\n    // If we have blown through the number of items let's\n    if(!self.serverConfig._commandsStore.validateBufferLimit(self.bufferMaxEntries)) {\n      self.close();\n    }\n  } else if(!connection && !config.canRead(readPreference) && !config.canWrite() && !config.isAutoReconnect()) {\n    return callback(new Error(\"no open connections\"), null);\n  } else {\n    if(typeof callback == 'function') {\n      __executeQueryCommand(self, db_command, options, function (err, result, conn) {\n        callback(err, result, conn);\n      });\n    } else {\n      __executeQueryCommand(self, db_command, options);\n    }\n  }\n};\n\n/**\n * @ignore\n */\nvar __executeInsertCommand = function(self, db_command, options, callback) {\n  // Always checkout a writer for this kind of operations\n  var connection = self.serverConfig.checkoutWriter();\n  // Get safe mode\n  var safe = options['safe'] != null ? options['safe'] : false;\n  var specifiedConnection = options['connection'] != null ? options['connection'] : null;\n  // Override connection if needed\n  connection = specifiedConnection != null ? specifiedConnection : connection;\n  // Validate if we can use this server 2.6 wire protocol\n  if(connection && connection.isCompatible && !connection.isCompatible()) {\n    return callback(utils.toError(\"driver is incompatible with this server version\"), null);\n  }\n\n  // Ensure we have a valid connection\n  if(typeof callback === 'function') {\n    callback = bindToCurrentDomain(callback);\n    // Ensure we have a valid connection\n    if(connection == null) {\n      return callback(new Error(\"no open connections\"));\n    } else if(connection instanceof Error) {\n      return callback(connection);\n    }\n\n    var errorOptions = _getWriteConcern(self, options);\n    if(errorOptions.w > 0 || errorOptions.w == 'majority' || errorOptions.j || errorOptions.journal || errorOptions.fsync) {\n      // db command is now an array of commands (original command + lastError)\n      db_command = [db_command, DbCommand.createGetLastErrorCommand(errorOptions, self)];\n      // Register the handler in the data structure\n      self.serverConfig._registerHandler(db_command[1], false, connection, callback);\n    }\n  }\n\n  // If we have no callback and there is no connection\n  if(connection == null) return null;\n  if(connection instanceof Error && typeof callback == 'function') return callback(connection, null);\n  if(connection instanceof Error) return null;\n  if(connection == null && typeof callback == 'function') return callback(new Error(\"no primary server found\"), null);\n\n  // Write the message out\n  connection.write(db_command, function(err) {\n    // Return the callback if it's not a safe operation and the callback is defined\n    if(typeof callback === 'function' && (safe == null || safe == false)) {\n      // Perform the callback\n      callback(err, null);\n    } else if(typeof callback === 'function') {\n      // Call the handler with an error\n      self.serverConfig._callHandler(db_command[1].getRequestId(), null, err);\n    } else if(typeof callback == 'function' && safe && safe.w == -1) {\n      // Call the handler with no error\n      self.serverConfig._callHandler(db_command[1].getRequestId(), null, null);\n    } else if(!safe || safe.w == -1) {\n      self.emit(\"error\", err);\n    }\n  });\n};\n\n/**\n * Execute an insert Command\n * @ignore\n * @api private\n */\nDb.prototype._executeInsertCommand = function(db_command, options, callback) {\n  var self = this;\n\n  // Unpack the parameters\n  if(callback == null && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  callback = bindToCurrentDomain(callback);\n  // Ensure options are not null\n  options = options == null ? {} : options;\n\n  // Check if the user force closed the command\n  if(this._applicationClosed) {\n    if(typeof callback == 'function') {\n      return callback(new Error(\"db closed by application\"), null);\n    } else {\n      throw new Error(\"db closed by application\");\n    }\n  }\n\n  if(this.serverConfig.isDestroyed()) return callback(new Error(\"Connection was destroyed by application\"));\n\n  // Specific connection\n  var connection = options.connection;\n  // Check if the connection is actually live\n  if(connection\n    && (!connection.isConnected || !connection.isConnected())) connection = null;\n\n  // Get config\n  var config = self.serverConfig;\n  // Check if we are connected\n  if(!connection && !config.canWrite() && config.isAutoReconnect()) {\n    self.serverConfig._commandsStore.write(\n      {   type:'insert'\n        , 'db_command':db_command\n        , 'options':options\n        , 'callback':callback\n        , db: self\n        , executeQueryCommand: __executeQueryCommand\n        , executeInsertCommand: __executeInsertCommand\n      }\n    );\n\n    // If we have blown through the number of items let's\n    if(!self.serverConfig._commandsStore.validateBufferLimit(self.bufferMaxEntries)) {\n      self.close();\n    }\n  } else if(!connection && !config.canWrite() && !config.isAutoReconnect()) {\n    return callback(new Error(\"no open connections\"), null);\n  } else {\n    __executeInsertCommand(self, db_command, options, callback);\n  }\n};\n\n/**\n * Update command is the same\n * @ignore\n * @api private\n */\nDb.prototype._executeUpdateCommand = Db.prototype._executeInsertCommand;\n/**\n * Remove command is the same\n * @ignore\n * @api private\n */\nDb.prototype._executeRemoveCommand = Db.prototype._executeInsertCommand;\n\n/**\n * Wrap a Mongo error document into an Error instance.\n * Deprecated. Use utils.toError instead.\n *\n * @ignore\n * @api private\n * @deprecated\n */\nDb.prototype.wrap = utils.toError;\n\n/**\n * Default URL\n *\n * @classconstant DEFAULT_URL\n **/\nDb.DEFAULT_URL = 'mongodb://localhost:27017/default';\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Options\n *  - **uri_decode_auth** {Boolean, default:false} uri decode the user name and password for authentication\n *  - **db** {Object, default: null} a hash off options to set on the db object, see **Db constructor**\n *  - **server** {Object, default: null} a hash off options to set on the server objects, see **Server** constructor**\n *  - **replSet** {Object, default: null} a hash off options to set on the replSet object, see **ReplSet** constructor**\n *  - **mongos** {Object, default: null} a hash off options to set on the mongos object, see **Mongos** constructor**\n *\n * @param {String} url connection url for MongoDB.\n * @param {Object} [options] optional options for insert command\n * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occurred, or null otherwise. While the second parameter will contain the db instance or null if an error occurred.\n * @return {null}\n * @api public\n */\nDb.connect = function(url, options, callback) {\n  // Ensure correct mapping of the callback\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Ensure same behavior as previous version w:0\n  if(url.indexOf(\"safe\") == -1\n    && url.indexOf(\"w\") == -1\n    && url.indexOf(\"journal\") == -1 && url.indexOf(\"j\") == -1\n    && url.indexOf(\"fsync\") == -1) options.w = 1;\n\n  // Avoid circular require problem\n  var MongoClient = require('./mongo_client.js').MongoClient;\n  // Attempt to connect\n  MongoClient.connect.call(MongoClient, url, options, callback);\n};\n\n/**\n * State of the db connection\n * @ignore\n */\nObject.defineProperty(Db.prototype, \"state\", { enumerable: true\n  , get: function () {\n      return this.serverConfig._serverState;\n    }\n});\n\n/**\n * @ignore\n */\nvar _hasWriteConcern = function(errorOptions) {\n  return errorOptions == true\n    || errorOptions.w > 0\n    || errorOptions.w == 'majority'\n    || errorOptions.j == true\n    || errorOptions.journal == true\n    || errorOptions.fsync == true\n};\n\n/**\n * @ignore\n */\nvar _setWriteConcernHash = function(options) {\n  var finalOptions = {};\n  if(options.w != null) finalOptions.w = options.w;\n  if(options.journal == true) finalOptions.j = options.journal;\n  if(options.j == true) finalOptions.j = options.j;\n  if(options.fsync == true) finalOptions.fsync = options.fsync;\n  if(options.wtimeout != null) finalOptions.wtimeout = options.wtimeout;\n  return finalOptions;\n};\n\n/**\n * @ignore\n */\nvar _getWriteConcern = function(self, options) {\n  // Final options\n  var finalOptions = {w:1};\n  // Local options verification\n  if(options.w != null || typeof options.j == 'boolean' || typeof options.journal == 'boolean' || typeof options.fsync == 'boolean') {\n    finalOptions = _setWriteConcernHash(options);\n  } else if(options.safe != null && typeof options.safe == 'object') {\n    finalOptions = _setWriteConcernHash(options.safe);\n  } else if(typeof options.safe == \"boolean\") {\n    finalOptions = {w: (options.safe ? 1 : 0)};\n  } else if(self.options.w != null || typeof self.options.j == 'boolean' || typeof self.options.journal == 'boolean' || typeof self.options.fsync == 'boolean') {\n    finalOptions = _setWriteConcernHash(self.options);\n  } else if(self.safe.w != null || typeof self.safe.j == 'boolean' || typeof self.safe.journal == 'boolean' || typeof self.safe.fsync == 'boolean') {\n    finalOptions = _setWriteConcernHash(self.safe);\n  } else if(typeof self.safe == \"boolean\") {\n    finalOptions = {w: (self.safe ? 1 : 0)};\n  }\n\n  // Ensure we don't have an invalid combination of write concerns\n  if(finalOptions.w < 1\n    && (finalOptions.journal == true || finalOptions.j == true || finalOptions.fsync == true)) throw new Error(\"No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true\");\n\n  // Return the options\n  return finalOptions;\n}\n\n/**\n * Legacy support\n *\n * @ignore\n * @api private\n */\nexports.connect = Db.connect;\nexports.Db = Db;\n\n/**\n * Remove all listeners to the db instance.\n * @ignore\n * @api private\n */\nDb.prototype.removeAllEventListeners = function() {\n  this.removeAllListeners(\"close\");\n  this.removeAllListeners(\"error\");\n  this.removeAllListeners(\"timeout\");\n  this.removeAllListeners(\"parseError\");\n  this.removeAllListeners(\"poolReady\");\n  this.removeAllListeners(\"message\");\n};\n"]}