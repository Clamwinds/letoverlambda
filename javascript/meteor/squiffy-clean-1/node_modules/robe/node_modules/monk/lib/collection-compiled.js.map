{"version":3,"sources":["collection.js"],"names":[],"mappings":"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","file":"collection-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar util = require('./util')\n  , debug = require('debug')('monk:queries')\n  , EventEmitter = require('events').EventEmitter\n  , Promise = require('./promise');\n\n/**\n * Module exports\n */\n\nmodule.exports = Collection;\n\n/**\n * Collection.\n *\n * @api public\n */\n\nfunction Collection (manager, name) {\n  this.manager = manager;\n  this.driver = manager.driver;\n  this.helper = manager.helper;\n  this.name = name;\n  this.col = this.driver.collection(name);\n  this.col.id = this.helper.id;\n  this.options = {};\n  this.col.emitter = this.col.emitter || this.col._emitter;\n  this.col.emitter.setMaxListeners(Infinity);\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nCollection.prototype.__proto__ = EventEmitter.prototype;\n\n/**\n * Casts to objectid\n *\n * @param {Mixed} hex id or ObjectId\n * @return {ObjectId}\n * @api public\n */\n\nCollection.prototype.id =\nCollection.prototype.oid = function (str) {\n  if (null == str) return this.col.id();\n  return 'string' == typeof str ? this.col.id(str) : str;\n};\n\n/**\n * Opts utility.\n */\n\nCollection.prototype.opts = function (opts) {\n  opts = util.options(opts || {});\n\n  for (var i in this.manager.options) {\n    if (!(i in opts) && !(i in this.options)) {\n      opts[i] = this.manager.options[i];\n    }\n  }\n\n  for (var i in this.options) {\n    if (!(i in opts)) {\n      opts[i] = this.options[i];\n    }\n  }\n\n  return opts;\n};\n\n/**\n * Set up indexes.\n *\n * @param {Object|String|Array} fields\n * @param {Object|Function} optional, options or callback\n * @param {Function} optional, callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.index =\nCollection.prototype.ensureIndex = function (fields, opts, fn) {\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  var fields = util.fields(fields)\n    , opts = opts || {}\n    , promise = new Promise(this, 'index');\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // query\n  debug('%s ensureIndex %j (%j)', this.name, fields, opts);\n  this.col.ensureIndex(fields, opts, promise.resolve);\n\n  return promise;\n};\n\n/**\n * Gets all indexes.\n *\n * @param {Function} callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.indexes = function (fn) {\n  var promise = new Promise(this, 'indexes');\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // query\n  debug('%s indexInformation', this.name);\n  this.col.indexInformation(promise.resolve);\n\n  return promise;\n};\n\n/**\n * update\n *\n * @param {Object} search query\n * @param {Object} update obj\n * @param {Object|String|Array} optional, options or fields\n * @param {Function} callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.update = function (search, update, opts, fn) {\n  if ('string' == typeof search || 'function' == typeof search.toHexString) {\n    return this.update({ _id: search }, update, opts, fn);\n  }\n\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  opts = this.opts(opts);\n  var promise = new Promise(this, 'update', opts);\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // cast\n  search = this.cast(search);\n  update = this.cast(update);\n\n  // query\n  var callback = opts.safe ? promise.resolve : function () {\n    // node-mongodb-native will send err=undefined and call the fn\n    // in the same tick if safe: false\n    var args = arguments;\n    args[0] = args[0] || null;\n    process.nextTick(function () {\n      promise.resolve.apply(promise, args);\n    });\n  };\n\n  debug('%s update %j with %j', this.name, search, update);\n  promise.query = { query: search, update: update };\n  this.col.update(search, update, opts, callback);\n\n  return promise;\n};\n\n/**\n * update by id helper\n *\n * @param {String|Object} object id\n * @param {Object} update obj\n * @param {Object|String|Array} optional, options or fields\n * @param {Function} callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.updateById = function (id, obj, opts, fn) {\n  return this.update({ _id: id }, obj, opts, fn);\n};\n\n/**\n * remove\n *\n * @param {Object} search query\n * @param {Object|Function} optional, options or callback\n * @param {Function} optional, callback\n * @return {Promise}\n */\n\nCollection.prototype.remove = function (search, opts, fn) {\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  opts = this.opts(opts);\n  var promise = new Promise(this, 'remove', opts);\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // cast\n  search = this.cast(search);\n\n  // query\n  debug('%s remove %j with %j', this.name, search, opts);\n  promise.query = search;\n  this.col.remove(search, opts, promise.resolve);\n\n  return promise;\n};\n\n/**\n * findAndModify\n *\n * @param {Object} search query, or { query, update } object\n * @param {Object} optional, update object\n * @param {Object|String|Array} optional, options or fields\n * @param {Function} callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.findAndModify = function (query, update, opts, fn) {\n  query = query || {};\n\n  if ('object' != typeof query.query && 'object' != typeof query.update) {\n    query = {\n        query: query\n      , update: update\n    };\n  } else {\n    fn = opts;\n    opts = update;\n  }\n\n  if ('string' == typeof query.query || 'function' == typeof query.query.toHexString) {\n    query.query = { _id: query.query };\n  }\n\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // `new` defaults to `true` for upserts\n  if (null == opts.new && opts.upsert) {\n    opts.new = true;\n  }\n\n  var promise = new Promise(this, 'findAndModify', opts);\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // cast\n  query.query = this.cast(query.query);\n  query.update = this.cast(query.update);\n\n  // query\n  debug('%s findAndModify %j with %j', this.name, query.query, query.update);\n  promise.query = query;\n  this.col.findAndModify(\n      query.query\n    , []\n    , query.update\n    , this.opts(opts)\n    , promise.resolve\n  );\n\n  return promise;\n};\n\n/**\n * insert\n *\n * @param {Object} data\n * @param {Object|String|Array} optional, options or fields\n * @param {Function} callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.insert = function (data, opts, fn) {\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  opts = this.opts(opts);\n  var promise = new Promise(this, 'insert', opts);\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // cast\n  data = this.cast(data);\n\n  // query\n  debug('%s insert %j', this.name, data);\n  promise.query = data;\n  this.col.insert(data, opts, function (err, docs) {\n    process.nextTick(function () {\n      promise.resolve.call(promise, err, docs ? docs[0] : docs);\n    });\n  });\n\n  return promise;\n};\n\n/**\n * findOne by ID\n *\n * @param {String} hex id\n * @param {Object|String|Array} optional, options or fields\n * @param {Function} completion callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.findById = function (id, opts, fn) {\n  return this.findOne({ _id: id }, opts, fn);\n};\n\n/**\n * find\n *\n * @param {Object} query\n * @param {Object|String|Array} optional, options or fields\n * @param {Function} completion callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.find = function (query, opts, fn) {\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  // cast\n  query = this.cast(query);\n\n  // opts\n  opts = this.opts(opts);\n\n  // query\n  debug('%s find %j', this.name, query);\n  var cursor = this.col.find(query, opts);\n\n  // promise\n  var promise = new Promise(this, 'find', opts);\n  promise.query = query;\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  if (null == opts.stream) {\n    process.nextTick(function () {\n      if (promise.listeners('each').length) {\n        stream();\n      } else {\n        cursor.toArray(promise.resolve);\n      }\n    });\n  } else if (opts.stream) {\n    stream();\n  } else {\n    cursor.toArray(promise.resolve);\n  }\n\n  function stream () {\n    var didClose = false;\n\n    cursor.each(function (err, doc) {\n      if (didClose && !err) {\n        // emit success\n        err = doc = null;\n      }\n\n      if (err) {\n        promise.reject(err);\n      } else if (doc) {\n        promise.emit('each', doc);\n      } else {\n        promise.fulfill();\n      }\n    });\n\n    promise.once('destroy', function(){\n      didClose = true;\n      cursor = cursor.cursor || cursor;\n      cursor.close();\n    });\n  }\n\n  return promise;\n};\n\n/**\n * distinct\n *\n * @param {String} distinct field to select\n * @param {Object} optional, query\n * @param {Function} completion callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.distinct = function (field, query, fn) {\n  if ('function' == typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  var promise = new Promise(this, 'distinct');\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // cast\n  query = this.cast(query);\n\n  // query\n  debug('%s distinct %s (%j)', this.name, field, query);\n  promise.query = query;\n  this.col.distinct(field, query, promise.resolve);\n\n  return promise;\n};\n\n/**\n * count\n *\n * @param {Object} query\n * @param {Function} completion callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.count = function (query, fn) {\n  var promise = new Promise(this, 'find');\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // cast\n  query = this.cast(query);\n\n  // query\n  debug('%s count %j', this.name, query);\n  promise.query = query;\n  this.col.count(query, promise.resolve);\n\n  return promise;\n};\n\n/**\n * findOne\n *\n * @param {String|ObjectId|Object} query\n * @param {Object} options\n * @param {Function} completion callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.findOne = function (search, opts, fn) {\n  search = search || {};\n\n  if ('string' == typeof search || 'function' == typeof search.toHexString) {\n    return this.findById(search, opts, fn);\n  }\n\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n\n  opts = this.opts(opts);\n  var promise = new Promise(this, 'findOne', opts);\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  // cast\n  search = this.cast(search);\n\n  // query\n  debug('%s findOne %j', this.name, search);\n  promise.query = search;\n  this.col.findOne(search, opts, promise.resolve);\n\n  return promise;\n};\n\n/**\n * Applies ObjectId casting to _id fields.\n *\n * @param {Object} optional, query\n * @return {Object} query\n * @api private\n */\n\nCollection.prototype.cast = function (obj) {\n  obj = obj || {};\n\n  if (obj._id) {\n    obj._id = this.id(obj._id);\n  }\n\n  if (obj.$set && obj.$set._id) {\n    obj.$set._id = this.id(obj.$set._id);\n  }\n\n  return obj;\n};\n\n/**\n * Drops the collection.\n *\n * @param {Function} optional, callback\n * @return {Promise}\n * @api public\n */\n\nCollection.prototype.drop = function (fn) {\n  var promise = new Promise(this, 'drop');\n\n  if (fn) {\n    promise.complete(fn);\n  }\n\n  debug('%s drop', this.name);\n  promise.query = this.name;\n  this.col.drop(promise.resolve);\n\n  return promise;\n};\n"]}