{"version":3,"sources":["util.js"],"names":[],"mappings":";;;;;;;;;AASA,OAAO,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE;AAC9B,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,QAAQ,IAAI,OAAO,GAAG,EAAE;AACjD,WAAO,GAAG,CAAC;GACZ;;AAED,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,KAAG,GAAG,QAAQ,IAAI,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAI,GAAG,IAAI,EAAE,AAAC,CAAC;;AAE5D,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1C,QAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACpB,YAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KAC9B,MAAM;AACL,YAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACpB;GACF;;AAED,SAAO,MAAM,CAAC;CACf;;;;;;;;;;AAAC,AAUF,OAAO,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;AAChC,MAAI,QAAQ,IAAI,OAAO,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAClD,WAAO,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;GACzC;AACD,MAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAClB,MAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,SAAO,IAAI,CAAC;CACb,CAAC","file":"util-compiled.js","sourcesContent":["\n/**\n * Parses all the possible ways of expressing fields.\n *\n * @param {String|Object|Array} fields\n * @return {Object} fields in object format\n * @api public\n */\n\nexports.fields = function (obj) {\n  if (!Array.isArray(obj) && 'object' == typeof obj) {\n    return obj;\n  }\n\n  var fields = {};\n  obj = 'string' == typeof obj ? obj.split(' ') : (obj || []);\n\n  for (var i = 0, l = obj.length; i < l; i++) {\n    if ('-' == obj[i][0]) {\n      fields[obj[i].substr(1)] = 0;\n    } else {\n      fields[obj[i]] = 1;\n    }\n  }\n\n  return fields;\n};\n\n/**\n * Parses an object format.\n *\n * @param {String|Array|Object} fields or options\n * @return {Object} options\n * @api public\n */\n\nexports.options = function (opts) {\n  if ('string' == typeof opts || Array.isArray(opts)) {\n    return { fields: exports.fields(opts) };\n  }\n  opts = opts || {};\n  opts.fields = exports.fields(opts.fields);\n  return opts;\n};\n"]}