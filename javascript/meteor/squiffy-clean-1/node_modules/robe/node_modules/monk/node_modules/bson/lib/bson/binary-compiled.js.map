{"version":3,"sources":["binary.js"],"names":[],"mappings":"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","file":"binary-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\nif(typeof window === 'undefined') { \n  var Buffer = require('buffer').Buffer; // TODO just use global Buffer\n}\n\n// Binary default subtype\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n * @api private\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);\n  // Write the content to the buffer\n  for(var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }  \n  // Write the string to the buffer\n  return buffer;\n}\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n * @api private\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = \"\";\n  for(var i = startIndex; i < endIndex; i++) {\n   result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;  \n};\n\n/**\n * A class representation of the BSON Binary type.\n * \n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class Represents the Binary BSON type.\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Grid}\n */\nfunction Binary(buffer, subType) {\n  if(!(this instanceof Binary)) return new Binary(buffer, subType);\n  \n  this._bsontype = 'Binary';\n\n  if(buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {    \n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if(buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer, Uint8Array or Arrays\n    if(typeof buffer == 'string') {\n      // Different ways of writing the length of the string for the different types\n      if(typeof Buffer != 'undefined') {\n        this.buffer = new Buffer(buffer);\n      } else if(typeof Uint8Array != 'undefined' || (Object.prototype.toString.call(buffer) == '[object Array]')) {\n        this.buffer = writeStringToArray(buffer);\n      } else {\n        throw new Error(\"only String, Buffer, Uint8Array or Array accepted\");\n      }\n    } else {\n      this.buffer = buffer;      \n    }\n    this.position = buffer.length;\n  } else {\n    if(typeof Buffer != 'undefined') {\n      this.buffer =  new Buffer(Binary.BUFFER_SIZE);      \n    } else if(typeof Uint8Array != 'undefined'){\n      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    } else {\n      this.buffer = new Array(Binary.BUFFER_SIZE);\n    }\n    // Set position to start of buffer\n    this.position = 0;\n  }\n};\n\n/**\n * Updates this binary with byte_value.\n *\n * @param {Character} byte_value a single byte we wish to write.\n * @api public\n */\nBinary.prototype.put = function put(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");\n  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");\n  \n  // Decode the byte value once\n  var decoded_byte = null;\n  if(typeof byte_value == 'string') {\n    decoded_byte = byte_value.charCodeAt(0);      \n  } else if(byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n  \n  if(this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {    \n      // Create additional overflow buffer\n      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);\n      // Combine the two buffers together\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n      this.buffer = buffer;\n      this.buffer[this.position++] = decoded_byte;\n    } else {\n      var buffer = null;\n      // Create a new buffer (typed or normal array)\n      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {\n        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n      } else {\n        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);\n      }      \n      \n      // We need to copy all the content to the new array\n      for(var i = 0; i < this.buffer.length; i++) {\n        buffer[i] = this.buffer[i];\n      }\n      \n      // Reassign the buffer\n      this.buffer = buffer;\n      // Write the byte\n      this.buffer[this.position++] = decoded_byte;\n    }\n  }\n};\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @param {Buffer|String} string a string or buffer to be written to the Binary BSON object.\n * @param {Number} offset specify the binary of where to write the content.\n * @api public\n */\nBinary.prototype.write = function write(string, offset) {\n  offset = typeof offset == 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if(this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // If we are in node.js\n    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {      \n      buffer = new Buffer(this.buffer.length + string.length);\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);      \n    } else if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {\n      // Create a new buffer\n      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))\n      // Copy the content\n      for(var i = 0; i < this.position; i++) {\n        buffer[i] = this.buffer[i];\n      }\n    }\n    \n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  if(typeof Buffer != 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {\n    string.copy(this.buffer, offset, 0, string.length);\n    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;\n    // offset = string.length\n  } else if(typeof Buffer != 'undefined' && typeof string == 'string' && Buffer.isBuffer(this.buffer)) {\n    this.buffer.write(string, 'binary', offset);\n    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;\n    // offset = string.length;\n  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]' \n    || Object.prototype.toString.call(string) == '[object Array]' && typeof string != 'string') {      \n    for(var i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string[i];\n    }    \n\n    this.position = offset > this.position ? offset : this.position;\n  } else if(typeof string == 'string') {\n    for(var i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string.charCodeAt(i);\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  }\n};\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @param {Number} position read from the given position in the Binary.\n * @param {Number} length the number of bytes to read.\n * @return {Buffer}\n * @api public\n */\nBinary.prototype.read = function read(position, length) {\n  length = length && length > 0\n    ? length\n    : this.position;\n  \n  // Let's return the data based on the type we have\n  if(this.buffer['slice']) {\n    return this.buffer.slice(position, position + length);\n  } else {\n    // Create a buffer to keep the result\n    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);\n    for(var i = 0; i < length; i++) {\n      buffer[i] = this.buffer[position++];\n    }\n  }\n  // Return the buffer\n  return buffer;\n};\n\n/**\n * Returns the value of this binary as a string.\n *\n * @return {String}\n * @api public\n */\nBinary.prototype.value = function value(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;  \n\n  // Optimize to serialize for the situation where the data == size of buffer\n  if(asRaw && typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer) && this.buffer.length == this.position)\n    return this.buffer;\n  \n  // If it's a node.js buffer object\n  if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {\n    return asRaw ? this.buffer.slice(0, this.position) : this.buffer.toString('binary', 0, this.position);\n  } else {\n    if(asRaw) {\n      // we support the slice command use it\n      if(this.buffer['slice'] != null) {\n        return this.buffer.slice(0, this.position);\n      } else {\n        // Create a new buffer to copy content to\n        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);\n        // Copy content\n        for(var i = 0; i < this.position; i++) {\n          newBuffer[i] = this.buffer[i];\n        }\n        // Return the buffer\n        return newBuffer;\n      }\n    } else {\n      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n    }\n  }\n};\n\n/**\n * Length.\n *\n * @return {Number} the length of the binary.\n * @api public\n */\nBinary.prototype.length = function length() {\n  return this.position;\n};\n\n/**\n * @ignore\n * @api private\n */\nBinary.prototype.toJSON = function() {\n  return this.buffer != null ? this.buffer.toString('base64') : '';\n}\n\n/**\n * @ignore\n * @api private\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n}\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *  \n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *  \n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *  \n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *  \n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *  \n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *  \n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *  \n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\n/**\n * Expose.\n */\nexports.Binary = Binary;\n\n"]}