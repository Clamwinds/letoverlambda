{"version":3,"sources":["binary_parser.js"],"names":[],"mappings":";;;;;AAKA,IAAI,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC;;AAE9B,IAAI,OAAO,GAAG,EAAE,CAAC;AACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC5B,SAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC5B;;AAED,SAAS,YAAY,CAAE,SAAS,EAAE,eAAe,EAAE;AACjD,MAAG,EAAE,IAAI,YAAY,YAAY,CAAA,AAAC,EAAE,OAAO,IAAI,YAAY,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;;AAEzF,MAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,MAAI,CAAC,eAAe,GAAG,eAAe,CAAC;CACvC,CAAC;;AAEF,YAAY,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;AACvC,MAAI,IAAI,CAAC,eAAe,EAAE;AACzB,UAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;GACpB;;AAEF,SAAO,CAAC,CAAC;CACT,CAAC;;AAEF,YAAY,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,IAAI,EAAE,aAAa,EAAE,YAAY,EAAE;AACnF,MAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAE9C,GAAC,CAAC,WAAW,CAAC,aAAa,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;;AAEhD,MAAI,IAAI,GAAG,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,aAAa,GAAG,YAAY,EAAE,CAAC,CAAC;MACpD,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,YAAY,CAAC;MAClD,WAAW,GAAG,CAAC;MACf,OAAO,GAAG,CAAC;MACX,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,aAAa,IAAI,CAAC,CAAA,AAAC,GAAG,CAAC,CAAC;;AAE3D,KAAG;AACF,SAAK,IAAI,SAAS,GAAG,CAAC,CAAC,MAAM,CAAE,EAAE,OAAO,CAAE,EAAE,QAAQ,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,QAAQ,EAAE,IAAI,KAAK,CAAC,EAAE,AAAE,SAAS,GAAG,IAAI,KAAQ,WAAW,IAAI,CAAC,GAAG,OAAO,CAAA,AAAE,EAAE,OAAO,IAAI,CAAC,CAAE,CAAC;GACxL,QAAQ,aAAa,IAAI,QAAQ,EAAE;;AAEpC,SAAO,QAAQ,IAAI,CAAE,IAAI,IAAI,CAAC,CAAA,GAAK,CAAC,GAAG,WAAW,GAAG,GAAG,GAAG,MAAM,GAAG,CAAC,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAE,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAA,IAAO,QAAQ,IAAI,WAAW,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAE,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAE,IAAK,CAAC,GAAG,WAAW,CAAA,AAAE,GAAG,CAAC,CAAA,AAAE,CAAC;CAC9P,CAAC;;AAEF,YAAY,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAE;AAC/E,MAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,cAAc,EAAE,IAAI,CAAC;MACzD,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;MACvB,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;;AAAC,AAE1B,SAAO,MAAM,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GACvB,CAAC,GAAG,GAAG,GACP,CAAC,CAAC;CACT,CAAC;;AAEF,YAAY,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,IAAI,EAAE,aAAa,EAAE,YAAY,EAAE;AACnF,MAAI,IAAI,GAAG,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC;MAClB,MAAM,GAAG,IAAI;MACb,YAAY,GAAG,MAAM,GAAG,aAAa;MACrC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC;MACpB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC;MAC7D,GAAG,GAAG,CAAC;MACP,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,aAAa,GAAG,CAAC;MACtC,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;MACpB,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,GAAI,CAAC;MACvC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACrC,SAAS,GAAG,CAAC,GAAG,OAAO;MACvB,OAAO;MACP,OAAO;MACP,MAAM;MACN,CAAC;MACD,CAAC,CAAC;;AAEP,OAAK,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;AAE/B,OAAK,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE5F,OAAK,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,IAAI,CAAC,CAAA,IAAK,CAAC,CAAA,GAAI,CAAC,CAAA,IAAM,EAAE,SAAS,CAAC,CAAC;;AAEjG,OAAK,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;;AAEpC,MAAI,GAAG,CAAC,CAAC,OAAO,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAA,IAAK,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,MAAM,GAAG,CAAC,CAAA,AAAC,CAAA,AAAC,CAAA,GAAI,CAAC,CAAC,EAAE;AAC3I,QAAI,EAAE,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,CAAA,AAAC,EAAE;AAC9B,WAAK,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,GAAG,GAAG,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/D;;AAED,SAAK,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,KAAM,OAAO,GAAG,CAAC,CAAA,AAAC,CAAC,CAAC;GACpF;;AAED,OAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;;AAExD,MAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAA,IAAK,MAAM,IAAI,GAAG,IAAI,MAAM,EAAE;AACpD,MAAE,CAAC,CAAC;GACH,MAAM,IAAI,GAAG,GAAG,MAAM,EAAE;AACzB,OAAG,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;AACzF,KAAC,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,MAAM,GAAG,CAAC,CAAA,AAAC,CAAC;GAClC;;AAED,MAAI,OAAO,IAAI,MAAM,KAAK,CAAC,EAAE;AAC5B,QAAI,CAAC,IAAI,CAAC,OAAO,GAAG,6BAA6B,GAAG,eAAe,GAAG,MAAM,CAAC,CAAC;AAC9E,OAAG,GAAG,MAAM,GAAG,CAAC,CAAC;AACjB,KAAC,GAAG,IAAI,GAAG,CAAC,CAAC;;AAEb,QAAI,MAAM,IAAI,CAAC,QAAQ,EAAE;AACxB,YAAM,GAAG,CAAC,CAAC;KACT,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;AAC3B,SAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACT;GACH;;AAED,OAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,YAAY,GAAG,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,GAAG,AAAC,CAAC,GAAG,CAAC,GAAI,MAAM,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;AAE/G,OAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAA,GAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA,CAAE,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,CAAC,EAAE;AAC9I,KAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAA,GAAI,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,QAAI,CAAC,IAAI,CAAC,EAAE;AACX,OAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACrC,OAAC,GAAG,CAAC,CAAC;KACN;GACD;;AAED,GAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GACV,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,GACtB,EAAE,CAAC;;AAER,SAAO,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA,CAAE,IAAI,CAAC,EAAE,CAAC,CAAC;CACnD,CAAC;;AAEF,YAAY,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAE;AAChF,MAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEvB,MAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG,CAAC,CAAA,AAAC,EAAE;AACpC,QAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AACjC,QAAI,GAAG,CAAC,CAAC;GACV;;AAEF,MAAI,IAAI,GAAG,CAAC,EAAE;AACX,QAAI,IAAI,GAAG,CAAC;GACb;;AAEF,OAAK,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;;AAErG,OAAK,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAA,AAAC,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;;AAEjE,SAAO,CAAC,AAAC,IAAI,CAAC,SAAS,IAAI,cAAc,GAAI,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA,CAAE,IAAI,CAAC,EAAE,CAAC,CAAC;CACxE,CAAC;;AAEF,YAAY,CAAC,OAAO,GAAM,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAG,CAAC,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,SAAS,GAAI,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAG,CAAC,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,MAAM,GAAO,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAG,CAAC,EAAE,KAAK,CAAE,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,QAAQ,GAAK,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAG,CAAC,EAAE,KAAK,CAAE,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,OAAO,GAAM,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,SAAS,GAAI,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,MAAM,GAAO,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,KAAK,CAAE,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,QAAQ,GAAK,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,KAAK,CAAE,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,KAAK,GAAQ,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,OAAO,GAAM,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,MAAM,GAAO,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,QAAQ,GAAK,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,OAAO,GAAM,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,KAAK,CAAE,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,SAAS,GAAI,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,KAAK,CAAE,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,OAAO,GAAM,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAE,CAAC;CAAE,CAAC;AACvF,YAAY,CAAC,SAAS,GAAI,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,SAAS,CAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAE,CAAC;CAAE,CAAC;AACvF,YAAY,CAAC,OAAO,GAAM,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAI,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,SAAS,GAAI,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAI,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,QAAQ,GAAK,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAG,CAAC;CAAE,CAAC;AACxF,YAAY,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE;AAAE,SAAO,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAG,CAAC;CAAE;;;AAAC,AAGxF,YAAY,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,OAAO,EAAE;AAClE,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;AACzB,UAAQ,GAAG,AAAC,MAAM,GAAG,CAAC,GAAK,MAAM,GAAG,WAAW,GAAI,MAAM,CAAC;AAC1D,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;AACpC,UAAQ,IAAI,QAAQ,CAAC;AACrB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC;AAClC,UAAQ,IAAI,MAAM,CAAC;AACnB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;AAChC,UAAQ,IAAI,IAAI,CAAC;AACjB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzB,SAAO,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;CACvF,CAAC;;AAEF,YAAY,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE;AACzD,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;AACrC,UAAQ,GAAG,AAAC,MAAM,GAAG,CAAC,GAAK,MAAM,GAAG,mBAAmB,GAAI,MAAM,CAAC;AAClE,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC;AAC5C,UAAQ,IAAI,gBAAgB,CAAC;AAC7B,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,cAAc,CAAC,CAAC;AAC1C,UAAQ,IAAI,cAAc,CAAC;AAC3B,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAC;AACxC,UAAQ,IAAI,YAAY,CAAC;AACzB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC;AACtC,UAAQ,IAAI,UAAU,CAAC;AACvB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;AACpC,UAAQ,IAAI,QAAQ,CAAC;AACrB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC;AAClC,UAAQ,IAAI,MAAM,CAAC;AACnB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;AAChC,UAAQ,IAAI,IAAI,CAAC;AACjB,GAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzB,SAAO,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;CAC9E;;;;;;;AAAC,AAOF,YAAY,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,SAAS,EAAE;AAC1D,MAAI,GAAG,GAAG,SAAS,CAAC,MAAM;MACtB,OAAO,GAAG,EAAE;MACZ,CAAC,GAAG,CAAC;MACL,CAAC,GAAG,CAAC;MACL,EAAE,GAAG,CAAC;MACN,EAAE,GAAG,CAAC;MACN,EAAE,CAAC;;AAEP,SAAO,CAAC,GAAG,GAAG,EAAE;AACd,KAAC,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC5B,QAAI,CAAC,GAAG,GAAG,EAAE;AACX,aAAO,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAClC,OAAC,EAAE,CAAC;KACL,MAAM,IAAI,AAAC,CAAC,GAAG,GAAG,IAAM,CAAC,GAAG,GAAG,AAAC,EAAE;AAClC,QAAE,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;AAC9B,aAAO,IAAI,MAAM,CAAC,YAAY,CAAC,AAAC,CAAC,CAAC,GAAG,EAAE,CAAA,IAAK,CAAC,GAAK,EAAE,GAAG,EAAE,AAAC,CAAC,CAAC;AAC5D,OAAC,IAAI,CAAC,CAAC;KACR,MAAM;AACN,QAAE,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;AAC/B,QAAE,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;AAC9B,aAAO,IAAI,MAAM,CAAC,YAAY,CAAC,AAAC,CAAC,CAAC,GAAG,EAAE,CAAA,IAAK,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,CAAA,IAAK,CAAC,AAAC,GAAI,EAAE,GAAG,EAAE,AAAC,CAAC,CAAC;AAChF,OAAC,IAAI,CAAC,CAAC;KACR;GACF;;AAED,SAAO,OAAO,CAAC;CAChB;;;AAAC,AAGF,YAAY,CAAC,cAAc,GAAG,SAAS,cAAc,CAAE,CAAC,EAAE;AACxD,SAAO,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;CACnE;;;AAAC,AAGF,YAAY,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,CAAC,EAAE;AAClD,MAAI,CAAC,GAAG,EAAE;MACN,CAAC,CAAC;;AAEN,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5C,KAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;AAEpB,QAAI,CAAC,GAAG,GAAG,EAAE;AACZ,OAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;KAC5B,MAAM,IAAI,AAAC,CAAC,GAAG,GAAG,IAAM,CAAC,GAAG,IAAI,AAAC,EAAE;AACnC,OAAC,IAAI,MAAM,CAAC,YAAY,CAAC,AAAC,CAAC,IAAE,CAAC,GAAI,GAAG,CAAC,CAAE;AACxC,OAAC,IAAI,MAAM,CAAC,YAAY,CAAC,AAAC,CAAC,GAAC,EAAE,GAAI,GAAG,CAAC,CAAC;KACvC,MAAM;AACL,OAAC,IAAI,MAAM,CAAC,YAAY,CAAC,AAAC,CAAC,IAAE,EAAE,GAAI,GAAG,CAAC,CAAC;AACxC,OAAC,IAAI,MAAM,CAAC,YAAY,CAAC,AAAC,AAAC,CAAC,IAAE,CAAC,GAAI,EAAE,GAAI,GAAG,CAAC,CAAC;AAC9C,OAAC,IAAI,MAAM,CAAC,YAAY,CAAC,AAAC,CAAC,GAAC,EAAE,GAAI,GAAG,CAAC,CAAC;KACxC;GACF;;AAED,SAAO,CAAC,CAAC;CACV,CAAC;;AAEF,YAAY,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,CAAC,EAAE;AACxC,MAAI,MAAM,CAAC;;AAEX,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5C,QAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE;AACxB,YAAM,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,GAC1B,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAClC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjC,aAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAA;KACnC,MAAM;AACL,YAAM,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,GAC1B,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAClC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/B,aAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAA;KACrC;GACF;;AAED,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;CAC9B,CAAC;;AAEF,YAAY,CAAC,OAAO,GAAG,SAAS,MAAM,CAAE,CAAC,EAAE;AACzC,MAAI,MAAM,CAAC;;AAEX,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5C,QAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE;AACxB,YAAM,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,GAC1B,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAClC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;;AAEjC,aAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAC,KAAK,CAAC,CAAC;KACrC,MAAM;AACL,YAAM,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,GAC1B,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAClC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjC,aAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAC,KAAK,GAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAClD;GACF;CACF,CAAC;;AAEF,YAAY,CAAC,OAAO,GAAG,SAAS,MAAM,CAAE,CAAC,EAAE;AACzC,MAAI,MAAM,CAAC;;AAEX,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5C,QAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE;AACxB,YAAM,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,GAC1B,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAClC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjC,aAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAC,KAAK,CAAC,CAAC;KACrC,MAAM;AACL,YAAM,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,GAC1B,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAClC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjC,aAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAC,KAAK,GAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAClD;GACF;CACF;;;;;AAAC,AAKF,SAAS,kBAAkB,CAAE,SAAS,EAAE,MAAM,EAAE;AAC9C,MAAI,CAAC,SAAS,GAAG,SAAS,IAAI,CAAC,CAAC;AAChC,MAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACjB,MAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;CACxB,CAAC;;AAEF,kBAAkB,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,IAAI,EAAE;AACjE,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEb,MAAI,IAAI,EAAE;AACP,KAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AACpB,KAAC,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,WAAO,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3C,QAAI,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;GAC9B;CACD,CAAC;;AAEF,kBAAkB,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,UAAU,EAAE;AAChF,SAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC,UAAU,IAAI,CAAC,CAAA,AAAC,CAAC;CACjD,CAAC;;AAEF,kBAAkB,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,UAAU,EAAE;AAC5E,MAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;AACpC,UAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;GAC7C;CACF,CAAC;;AAEF,kBAAkB,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,KAAK,EAAE,MAAM,EAAE;;;AAGzE,WAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE;AACnB,WAAO,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,CAAA,GAAI,UAAU,CAAA,IAAK,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAA,GAAI,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC;AACpH,WAAO,CAAC,CAAC;GACT;;AAED,MAAI,KAAK,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE;AAC7B,WAAO,CAAC,CAAC;GACR;;AAEF,MAAI,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;;AAEhC,MAAI,UAAU;MACV,WAAW,GAAG,KAAK,GAAG,CAAC;MACvB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAK,KAAK,IAAI,CAAC,CAAA,AAAE,GAAG,CAAC;MACjD,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAK,EAAG,KAAK,GAAG,MAAM,CAAA,AAAE,IAAI,CAAC,CAAA,AAAE;MAC5D,IAAI,GAAG,OAAO,GAAG,QAAQ;MACzB,GAAG,GAAG,CAAC,AAAC,IAAI,CAAC,MAAM,CAAE,OAAO,CAAE,IAAI,WAAW,GAAK,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,WAAW,GAAG,MAAM,CAAA,CAAC,GAAI,CAAC,CAAC,IAAK,IAAI,KAAK,UAAU,GAAG,CAAC,KAAK,GAAG,MAAM,CAAA,GAAI,CAAC,CAAA,AAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAI,CAAC,CAAC,IAAI,UAAU,CAAA,GAAI,CAAC,CAAC,IAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA,GAAI,WAAW,GAAG,CAAC,CAAA,AAAC,CAAC;;AAE/O,SAAM,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA,GAAI,WAAW,CAAC,CAAC,CAAC;;AAE9E,SAAO,GAAG,CAAC;CACX;;;;;AAAC,AAKF,YAAY,CAAC,MAAM,GAAG,kBAAkB,CAAC;;AAEzC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC","file":"binary_parser-compiled.js","sourcesContent":["/**\n * Binary Parser.\n * Jonas Raoni Soares Silva\n * http://jsfromhell.com/classes/binary-parser [v1.0]\n */\nvar chr = String.fromCharCode;\n\nvar maxBits = [];\nfor (var i = 0; i < 64; i++) {\n\tmaxBits[i] = Math.pow(2, i);\n}\n\nfunction BinaryParser (bigEndian, allowExceptions) {\n  if(!(this instanceof BinaryParser)) return new BinaryParser(bigEndian, allowExceptions);\n  \n\tthis.bigEndian = bigEndian;\n\tthis.allowExceptions = allowExceptions;\n};\n\nBinaryParser.warn = function warn (msg) {\n\tif (this.allowExceptions) {\n\t\tthrow new Error(msg);\n  }\n\n\treturn 1;\n};\n\nBinaryParser.decodeFloat = function decodeFloat (data, precisionBits, exponentBits) {\n\tvar b = new this.Buffer(this.bigEndian, data);\n\n\tb.checkBuffer(precisionBits + exponentBits + 1);\n\n\tvar bias = maxBits[exponentBits - 1] - 1\n    , signal = b.readBits(precisionBits + exponentBits, 1)\n    , exponent = b.readBits(precisionBits, exponentBits)\n    , significand = 0\n    , divisor = 2\n    , curByte = b.buffer.length + (-precisionBits >> 3) - 1;\n\n\tdo {\n\t\tfor (var byteValue = b.buffer[ ++curByte ], startBit = precisionBits % 8 || 8, mask = 1 << startBit; mask >>= 1; ( byteValue & mask ) && ( significand += 1 / divisor ), divisor *= 2 );\n\t} while (precisionBits -= startBit);\n\n\treturn exponent == ( bias << 1 ) + 1 ? significand ? NaN : signal ? -Infinity : +Infinity : ( 1 + signal * -2 ) * ( exponent || significand ? !exponent ? Math.pow( 2, -bias + 1 ) * significand : Math.pow( 2, exponent - bias ) * ( 1 + significand ) : 0 );\n};\n\nBinaryParser.decodeInt = function decodeInt (data, bits, signed, forceBigEndian) {\n  var b = new this.Buffer(this.bigEndian || forceBigEndian, data)\n      , x = b.readBits(0, bits)\n      , max = maxBits[bits]; //max = Math.pow( 2, bits );\n  \n  return signed && x >= max / 2\n      ? x - max\n      : x;\n};\n\nBinaryParser.encodeFloat = function encodeFloat (data, precisionBits, exponentBits) {\n\tvar bias = maxBits[exponentBits - 1] - 1\n    , minExp = -bias + 1\n    , maxExp = bias\n    , minUnnormExp = minExp - precisionBits\n    , n = parseFloat(data)\n    , status = isNaN(n) || n == -Infinity || n == +Infinity ? n : 0\n    ,\texp = 0\n    , len = 2 * bias + 1 + precisionBits + 3\n    , bin = new Array(len)\n    , signal = (n = status !== 0 ? 0 : n) < 0\n    , intPart = Math.floor(n = Math.abs(n))\n    , floatPart = n - intPart\n    , lastBit\n    , rounded\n    , result\n    , i\n    , j;\n\n\tfor (i = len; i; bin[--i] = 0);\n\n\tfor (i = bias + 2; intPart && i; bin[--i] = intPart % 2, intPart = Math.floor(intPart / 2));\n\n\tfor (i = bias + 1; floatPart > 0 && i; (bin[++i] = ((floatPart *= 2) >= 1) - 0 ) && --floatPart);\n\n\tfor (i = -1; ++i < len && !bin[i];);\n\n\tif (bin[(lastBit = precisionBits - 1 + (i = (exp = bias + 1 - i) >= minExp && exp <= maxExp ? i + 1 : bias + 1 - (exp = minExp - 1))) + 1]) {\n\t\tif (!(rounded = bin[lastBit])) {\n\t\t\tfor (j = lastBit + 2; !rounded && j < len; rounded = bin[j++]);\n\t\t}\n\n\t\tfor (j = lastBit + 1; rounded && --j >= 0; (bin[j] = !bin[j] - 0) && (rounded = 0));\n\t}\n\n\tfor (i = i - 2 < 0 ? -1 : i - 3; ++i < len && !bin[i];);\n\n\tif ((exp = bias + 1 - i) >= minExp && exp <= maxExp) {\n\t\t++i;\n  } else if (exp < minExp) {\n\t\texp != bias + 1 - len && exp < minUnnormExp && this.warn(\"encodeFloat::float underflow\");\n\t\ti = bias + 1 - (exp = minExp - 1);\n\t}\n\n\tif (intPart || status !== 0) {\n\t\tthis.warn(intPart ? \"encodeFloat::float overflow\" : \"encodeFloat::\" + status);\n\t\texp = maxExp + 1;\n\t\ti = bias + 2;\n\n\t\tif (status == -Infinity) {\n\t\t\tsignal = 1;\n    } else if (isNaN(status)) {\n\t\t\tbin[i] = 1;\n    }\n\t}\n\n\tfor (n = Math.abs(exp + bias), j = exponentBits + 1, result = \"\"; --j; result = (n % 2) + result, n = n >>= 1);\n\n\tfor (n = 0, j = 0, i = (result = (signal ? \"1\" : \"0\") + result + bin.slice(i, i + precisionBits).join(\"\")).length, r = []; i; j = (j + 1) % 8) {\n\t\tn += (1 << j) * result.charAt(--i);\n\t\tif (j == 7) {\n\t\t\tr[r.length] = String.fromCharCode(n);\n\t\t\tn = 0;\n\t\t}\n\t}\n\n\tr[r.length] = n\n    ? String.fromCharCode(n)\n    : \"\";\n\n\treturn (this.bigEndian ? r.reverse() : r).join(\"\");\n};\n\nBinaryParser.encodeInt = function encodeInt (data, bits, signed, forceBigEndian) {\n\tvar max = maxBits[bits];\n\n  if (data >= max || data < -(max / 2)) {\n    this.warn(\"encodeInt::overflow\");\n    data = 0;\n  }\n\n\tif (data < 0) {\n    data += max;\n  }\n\n\tfor (var r = []; data; r[r.length] = String.fromCharCode(data % 256), data = Math.floor(data / 256));\n\n\tfor (bits = -(-bits >> 3) - r.length; bits--; r[r.length] = \"\\0\");\n\n  return ((this.bigEndian || forceBigEndian) ? r.reverse() : r).join(\"\");\n};\n\nBinaryParser.toSmall    = function( data ){ return this.decodeInt( data,  8, true  ); };\nBinaryParser.fromSmall  = function( data ){ return this.encodeInt( data,  8, true  ); };\nBinaryParser.toByte     = function( data ){ return this.decodeInt( data,  8, false ); };\nBinaryParser.fromByte   = function( data ){ return this.encodeInt( data,  8, false ); };\nBinaryParser.toShort    = function( data ){ return this.decodeInt( data, 16, true  ); };\nBinaryParser.fromShort  = function( data ){ return this.encodeInt( data, 16, true  ); };\nBinaryParser.toWord     = function( data ){ return this.decodeInt( data, 16, false ); };\nBinaryParser.fromWord   = function( data ){ return this.encodeInt( data, 16, false ); };\nBinaryParser.toInt      = function( data ){ return this.decodeInt( data, 32, true  ); };\nBinaryParser.fromInt    = function( data ){ return this.encodeInt( data, 32, true  ); };\nBinaryParser.toLong     = function( data ){ return this.decodeInt( data, 64, true  ); };\nBinaryParser.fromLong   = function( data ){ return this.encodeInt( data, 64, true  ); };\nBinaryParser.toDWord    = function( data ){ return this.decodeInt( data, 32, false ); };\nBinaryParser.fromDWord  = function( data ){ return this.encodeInt( data, 32, false ); };\nBinaryParser.toQWord    = function( data ){ return this.decodeInt( data, 64, true ); };\nBinaryParser.fromQWord  = function( data ){ return this.encodeInt( data, 64, true ); };\nBinaryParser.toFloat    = function( data ){ return this.decodeFloat( data, 23, 8   ); };\nBinaryParser.fromFloat  = function( data ){ return this.encodeFloat( data, 23, 8   ); };\nBinaryParser.toDouble   = function( data ){ return this.decodeFloat( data, 52, 11  ); };\nBinaryParser.fromDouble = function( data ){ return this.encodeFloat( data, 52, 11  ); };\n\n// Factor out the encode so it can be shared by add_header and push_int32\nBinaryParser.encode_int32 = function encode_int32 (number, asArray) {\n  var a, b, c, d, unsigned;\n  unsigned = (number < 0) ? (number + 0x100000000) : number;\n  a = Math.floor(unsigned / 0xffffff);\n  unsigned &= 0xffffff;\n  b = Math.floor(unsigned / 0xffff);\n  unsigned &= 0xffff;\n  c = Math.floor(unsigned / 0xff);\n  unsigned &= 0xff;\n  d = Math.floor(unsigned);\n  return asArray ? [chr(a), chr(b), chr(c), chr(d)] : chr(a) + chr(b) + chr(c) + chr(d);\n};\n\nBinaryParser.encode_int64 = function encode_int64 (number) {\n  var a, b, c, d, e, f, g, h, unsigned;\n  unsigned = (number < 0) ? (number + 0x10000000000000000) : number;\n  a = Math.floor(unsigned / 0xffffffffffffff);\n  unsigned &= 0xffffffffffffff;\n  b = Math.floor(unsigned / 0xffffffffffff);\n  unsigned &= 0xffffffffffff;\n  c = Math.floor(unsigned / 0xffffffffff);\n  unsigned &= 0xffffffffff;\n  d = Math.floor(unsigned / 0xffffffff);\n  unsigned &= 0xffffffff;\n  e = Math.floor(unsigned / 0xffffff);\n  unsigned &= 0xffffff;\n  f = Math.floor(unsigned / 0xffff);\n  unsigned &= 0xffff;\n  g = Math.floor(unsigned / 0xff);\n  unsigned &= 0xff;\n  h = Math.floor(unsigned);\n  return chr(a) + chr(b) + chr(c) + chr(d) + chr(e) + chr(f) + chr(g) + chr(h);\n};\n\n/**\n * UTF8 methods\n */\n\n// Take a raw binary string and return a utf8 string\nBinaryParser.decode_utf8 = function decode_utf8 (binaryStr) {\n  var len = binaryStr.length\n    , decoded = ''\n    , i = 0\n    , c = 0\n    , c1 = 0\n    , c2 = 0\n    , c3;\n\n  while (i < len) {\n    c = binaryStr.charCodeAt(i);\n    if (c < 128) {\n      decoded += String.fromCharCode(c);\n      i++;\n    } else if ((c > 191) && (c < 224)) {\n\t    c2 = binaryStr.charCodeAt(i+1);\n      decoded += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n      i += 2;\n    } else {\n\t    c2 = binaryStr.charCodeAt(i+1);\n\t    c3 = binaryStr.charCodeAt(i+2);\n      decoded += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n      i += 3;\n    }\n  }\n\n  return decoded;\n};\n\n// Encode a cstring\nBinaryParser.encode_cstring = function encode_cstring (s) {\n  return unescape(encodeURIComponent(s)) + BinaryParser.fromByte(0);\n};\n\n// Take a utf8 string and return a binary string\nBinaryParser.encode_utf8 = function encode_utf8 (s) {\n  var a = \"\"\n    , c;\n\n  for (var n = 0, len = s.length; n < len; n++) {\n    c = s.charCodeAt(n);\n\n    if (c < 128) {\n\t    a += String.fromCharCode(c);\n    } else if ((c > 127) && (c < 2048)) {\n\t    a += String.fromCharCode((c>>6) | 192) ;\n\t    a += String.fromCharCode((c&63) | 128);\n    } else {\n      a += String.fromCharCode((c>>12) | 224);\n      a += String.fromCharCode(((c>>6) & 63) | 128);\n      a += String.fromCharCode((c&63) | 128);\n    }\n  }\n\n  return a;\n};\n\nBinaryParser.hprint = function hprint (s) {\n  var number;\n\n  for (var i = 0, len = s.length; i < len; i++) {\n    if (s.charCodeAt(i) < 32) {\n      number = s.charCodeAt(i) <= 15\n        ? \"0\" + s.charCodeAt(i).toString(16)\n        : s.charCodeAt(i).toString(16);        \n      process.stdout.write(number + \" \")\n    } else {\n      number = s.charCodeAt(i) <= 15\n        ? \"0\" + s.charCodeAt(i).toString(16)\n        : s.charCodeAt(i).toString(16);\n        process.stdout.write(number + \" \")\n    }\n  }\n  \n  process.stdout.write(\"\\n\\n\");\n};\n\nBinaryParser.ilprint = function hprint (s) {\n  var number;\n\n  for (var i = 0, len = s.length; i < len; i++) {\n    if (s.charCodeAt(i) < 32) {\n      number = s.charCodeAt(i) <= 15\n        ? \"0\" + s.charCodeAt(i).toString(10)\n        : s.charCodeAt(i).toString(10);\n\n      require('util').debug(number+' : ');\n    } else {\n      number = s.charCodeAt(i) <= 15\n        ? \"0\" + s.charCodeAt(i).toString(10)\n        : s.charCodeAt(i).toString(10);\n      require('util').debug(number+' : '+ s.charAt(i));\n    }\n  }\n};\n\nBinaryParser.hlprint = function hprint (s) {\n  var number;\n\n  for (var i = 0, len = s.length; i < len; i++) {\n    if (s.charCodeAt(i) < 32) {\n      number = s.charCodeAt(i) <= 15\n        ? \"0\" + s.charCodeAt(i).toString(16)\n        : s.charCodeAt(i).toString(16);\n      require('util').debug(number+' : ');\n    } else {\n      number = s.charCodeAt(i) <= 15\n        ? \"0\" + s.charCodeAt(i).toString(16)\n        : s.charCodeAt(i).toString(16);\n      require('util').debug(number+' : '+ s.charAt(i));\n    }\n  }\n};\n\n/**\n * BinaryParser buffer constructor.\n */\nfunction BinaryParserBuffer (bigEndian, buffer) {\n  this.bigEndian = bigEndian || 0;\n  this.buffer = [];\n  this.setBuffer(buffer);\n};\n\nBinaryParserBuffer.prototype.setBuffer = function setBuffer (data) {\n  var l, i, b;\n\n\tif (data) {\n    i = l = data.length;\n    b = this.buffer = new Array(l);\n\t\tfor (; i; b[l - i] = data.charCodeAt(--i));\n\t\tthis.bigEndian && b.reverse();\n\t}\n};\n\nBinaryParserBuffer.prototype.hasNeededBits = function hasNeededBits (neededBits) {\n\treturn this.buffer.length >= -(-neededBits >> 3);\n};\n\nBinaryParserBuffer.prototype.checkBuffer = function checkBuffer (neededBits) {\n\tif (!this.hasNeededBits(neededBits)) {\n\t\tthrow new Error(\"checkBuffer::missing bytes\");\n  }\n};\n\nBinaryParserBuffer.prototype.readBits = function readBits (start, length) {\n\t//shl fix: Henri Torgemane ~1996 (compressed by Jonas Raoni)\n\n\tfunction shl (a, b) {\n\t\tfor (; b--; a = ((a %= 0x7fffffff + 1) & 0x40000000) == 0x40000000 ? a * 2 : (a - 0x40000000) * 2 + 0x7fffffff + 1);\n\t\treturn a;\n\t}\n\n\tif (start < 0 || length <= 0) {\n\t\treturn 0;\n  }\n\n\tthis.checkBuffer(start + length);\n\n  var offsetLeft\n    , offsetRight = start % 8\n    , curByte = this.buffer.length - ( start >> 3 ) - 1\n    , lastByte = this.buffer.length + ( -( start + length ) >> 3 )\n    , diff = curByte - lastByte\n    , sum = ((this.buffer[ curByte ] >> offsetRight) & ((1 << (diff ? 8 - offsetRight : length)) - 1)) + (diff && (offsetLeft = (start + length) % 8) ? (this.buffer[lastByte++] & ((1 << offsetLeft) - 1)) << (diff-- << 3) - offsetRight : 0);\n\n\tfor(; diff; sum += shl(this.buffer[lastByte++], (diff-- << 3) - offsetRight));\n\n\treturn sum;\n};\n\n/**\n * Expose.\n */\nBinaryParser.Buffer = BinaryParserBuffer;\n\nexports.BinaryParser = BinaryParser;\n"]}