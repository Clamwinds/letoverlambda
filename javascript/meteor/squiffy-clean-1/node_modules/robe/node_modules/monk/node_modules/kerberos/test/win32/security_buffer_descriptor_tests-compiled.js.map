{"version":3,"sources":["security_buffer_descriptor_tests.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,KAAK,GAAG,UAAS,QAAQ,EAAE;AACjC,UAAQ,EAAE,CAAC;CACZ,CAAA;;AAED,OAAO,CAAC,QAAQ,GAAG,UAAS,QAAQ,EAAE;AACpC,UAAQ,EAAE,CAAC;CACZ,CAAA;;AAED,OAAO,CAAC,yCAAyC,CAAC,GAAG,UAAS,IAAI,EAAE;AAClE,MAAI,wBAAwB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,wBAAwB,CAAA;AAClF,gBAAc,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,cAAc;;;AAAC,AAG/D,MAAI,kBAAkB,GAAG,IAAI,wBAAwB,CAAC,GAAG,CAAC,CAAC;AAC3D,MAAI;;AAEF,sBAAkB,GAAG,IAAI,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7D,QAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;GAChB,CAAC,OAAM,GAAG,EAAC,EAAE;;;AAAA,AAGd,MAAI,MAAM,GAAG,IAAI,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC1D,oBAAkB,GAAG,IAAI,wBAAwB,CAAC,CAAC,MAAM,CAAC,CAAC;;AAAC,AAE5D,MAAI,MAAM,GAAG,kBAAkB,CAAC,QAAQ,EAAE,CAAC;AAC3C,MAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC;;;AAAC,AAG/B,MAAI,MAAM,GAAG,IAAI,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AAChF,oBAAkB,GAAG,IAAI,wBAAwB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5D,MAAI,MAAM,GAAG,kBAAkB,CAAC,QAAQ,EAAE,CAAC;AAC3C,MAAI,CAAC,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;;;AAAC,AAG7C,MAAI,MAAM,GAAG,IAAI,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AAChF,MAAI,OAAO,GAAG,IAAI,cAAc,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;AACpF,oBAAkB,GAAG,IAAI,wBAAwB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;AACrE,MAAI,MAAM,GAAG,kBAAkB,CAAC,QAAQ,EAAE,CAAC;AAC3C,MAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AACzD,MAAI,CAAC,IAAI,EAAE,CAAC;CACb,CAAA","file":"security_buffer_descriptor_tests-compiled.js","sourcesContent":["exports.setUp = function(callback) {\n  callback();\n}\n\nexports.tearDown = function(callback) {\n  callback();\n}\n\nexports['Initialize a security Buffer Descriptor'] = function(test) {\n  var SecurityBufferDescriptor = require('../../lib/sspi.js').SecurityBufferDescriptor\n    SecurityBuffer = require('../../lib/sspi.js').SecurityBuffer;\n\n  // Create descriptor with single Buffer\n  var securityDescriptor = new SecurityBufferDescriptor(100);\n  try {\n    // Fail to work due to no valid Security Buffer\n    securityDescriptor = new SecurityBufferDescriptor([\"hello\"]);\n    test.ok(false);\n  } catch(err){}\n\n  // Should Correctly construct SecurityBuffer\n  var buffer = new SecurityBuffer(SecurityBuffer.DATA, 100);\n  securityDescriptor = new SecurityBufferDescriptor([buffer]);\n  // Should correctly return a buffer\n  var result = securityDescriptor.toBuffer();\n  test.equal(100, result.length);\n\n  // Should Correctly construct SecurityBuffer\n  var buffer = new SecurityBuffer(SecurityBuffer.DATA, new Buffer(\"hello world\"));\n  securityDescriptor = new SecurityBufferDescriptor([buffer]);\n  var result = securityDescriptor.toBuffer();\n  test.equal(\"hello world\", result.toString());\n\n  // Test passing in more than one Buffer\n  var buffer = new SecurityBuffer(SecurityBuffer.DATA, new Buffer(\"hello world\"));\n  var buffer2 = new SecurityBuffer(SecurityBuffer.STREAM, new Buffer(\"adam and eve\"));\n  securityDescriptor = new SecurityBufferDescriptor([buffer, buffer2]);\n  var result = securityDescriptor.toBuffer();\n  test.equal(\"hello worldadam and eve\", result.toString());\n  test.done();\n}"]}