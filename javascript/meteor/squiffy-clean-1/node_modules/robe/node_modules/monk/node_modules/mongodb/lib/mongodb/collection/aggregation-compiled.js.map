{"version":3,"sources":["aggregation.js"],"names":[],"mappings":"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","file":"aggregation-compiled.js","sourcesContent":["var shared = require('./shared')\n  , utils = require('../utils')\n  , AggregationCursor = require('../aggregation_cursor').AggregationCursor\n  , Code = require('bson').Code  \n  , DbCommand = require('../commands/db_command').DbCommand;\n\n/**\n * Functions that are passed as scope args must\n * be converted to Code instances.\n * @ignore\n */\nfunction processScope (scope) {\n  if (!utils.isObject(scope)) {\n    return scope;\n  }\n\n  var keys = Object.keys(scope);\n  var i = keys.length;\n  var key;\n  var new_scope = {};\n\n  while (i--) {\n    key = keys[i];\n    if ('function' == typeof scope[key]) {\n      new_scope[key] = new Code(String(scope[key]));\n    } else {\n      new_scope[key] = processScope(scope[key]);\n    }\n  }\n\n  return new_scope;\n}\n\nvar pipe = function() {\n  return new AggregationCursor(this, this.serverCapabilities);\n}\n\nvar mapReduce = function mapReduce (map, reduce, options, callback) {\n  if ('function' === typeof options) callback = options, options = {};\n  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)\n  if(null == options.out) {\n    throw new Error(\"the out option parameter must be defined, see mongodb docs for possible values\");\n  }\n\n  if ('function' === typeof map) {\n    map = map.toString();\n  }\n\n  if ('function' === typeof reduce) {\n    reduce = reduce.toString();\n  }\n\n  if ('function' === typeof options.finalize) {\n    options.finalize = options.finalize.toString();\n  }\n\n  var mapCommandHash = {\n      mapreduce: this.collectionName\n    , map: map\n    , reduce: reduce\n  };\n\n  // Add any other options passed in\n  for (var name in options) {\n    if ('scope' == name) {\n      mapCommandHash[name] = processScope(options[name]);\n    } else {\n      mapCommandHash[name] = options[name];\n    }\n  }\n\n  // Set read preference if we set one\n  var readPreference = shared._getReadConcern(this, options);\n\n  // If we have a read preference and inline is not set as output fail hard\n  if((readPreference != false && readPreference != 'primary') \n    && options['out'] && (options['out'].inline != 1 && options['out'] != 'inline')) {\n      readPreference = 'primary';    \n  }\n\n  // self\n  var self = this;\n  var cmd = DbCommand.createDbCommand(this.db, mapCommandHash);\n\n  this.db._executeQueryCommand(cmd, {readPreference:readPreference}, function (err, result) {\n    if(err) return callback(err);\n    if(!result || !result.documents || result.documents.length == 0)\n      return callback(Error(\"command failed to return results\"), null)\n\n    // Check if we have an error\n    if(1 != result.documents[0].ok || result.documents[0].err || result.documents[0].errmsg) {\n      return callback(utils.toError(result.documents[0]));\n    }\n\n    // Create statistics value\n    var stats = {};\n    if(result.documents[0].timeMillis) stats['processtime'] = result.documents[0].timeMillis;\n    if(result.documents[0].counts) stats['counts'] = result.documents[0].counts;\n    if(result.documents[0].timing) stats['timing'] = result.documents[0].timing;\n\n    // invoked with inline?\n    if(result.documents[0].results) {\n      // If we wish for no verbosity\n      if(options['verbose'] == null || !options['verbose']) {\n        return callback(null, result.documents[0].results);\n      }\n      return callback(null, result.documents[0].results, stats);\n    }\n\n    // The returned collection\n    var collection = null;\n\n    // If we have an object it's a different db\n    if(result.documents[0].result != null && typeof result.documents[0].result == 'object') {\n      var doc = result.documents[0].result;\n      collection = self.db.db(doc.db).collection(doc.collection);\n    } else {\n      // Create a collection object that wraps the result collection\n      collection = self.db.collection(result.documents[0].result)\n    }\n\n    // If we wish for no verbosity\n    if(options['verbose'] == null || !options['verbose']) {\n      return callback(err, collection);\n    }\n\n    // Return stats as third set of values\n    callback(err, collection, stats);\n  });\n};\n\n/**\n * Group function helper\n * @ignore\n */\nvar groupFunction = function () {\n  var c = db[ns].find(condition);\n  var map = new Map();\n  var reduce_function = reduce;\n\n  while (c.hasNext()) {\n    var obj = c.next();\n    var key = {};\n\n    for (var i = 0, len = keys.length; i < len; ++i) {\n      var k = keys[i];\n      key[k] = obj[k];\n    }\n\n    var aggObj = map.get(key);\n\n    if (aggObj == null) {\n      var newObj = Object.extend({}, key);\n      aggObj = Object.extend(newObj, initial);\n      map.put(key, aggObj);\n    }\n\n    reduce_function(obj, aggObj);\n  }\n\n  return { \"result\": map.values() };\n}.toString();\n\nvar group = function group(keys, condition, initial, reduce, finalize, command, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 3);\n  callback = args.pop();\n  // Fetch all commands\n  reduce = args.length ? args.shift() : null;\n  finalize = args.length ? args.shift() : null;\n  command = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Make sure we are backward compatible\n  if(!(typeof finalize == 'function')) {\n    command = finalize;\n    finalize = null;\n  }\n\n  if (!Array.isArray(keys) && keys instanceof Object && typeof(keys) !== 'function' && !(keys instanceof Code)) {\n    keys = Object.keys(keys);\n  }\n\n  if(typeof reduce === 'function') {\n    reduce = reduce.toString();\n  }\n\n  if(typeof finalize === 'function') {\n    finalize = finalize.toString();\n  }\n\n  // Set up the command as default\n  command = command == null ? true : command;\n\n  // Execute using the command\n  if(command) {\n    var reduceFunction = reduce instanceof Code\n        ? reduce\n        : new Code(reduce);\n\n    var selector = {\n      group: {\n          'ns': this.collectionName\n        , '$reduce': reduceFunction\n        , 'cond': condition\n        , 'initial': initial\n        , 'out': \"inline\"\n      }\n    };\n\n    // if finalize is defined\n    if(finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || keys instanceof Code) {\n      selector.group.$keyf = keys instanceof Code\n        ? keys\n        : new Code(keys);\n    } else {\n      var hash = {};\n      keys.forEach(function (key) {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    // Set read preference if we set one\n    var readPreference = shared._getReadConcern(this, options);\n    // Execute command\n    this.db.command(selector, {readPreference: readPreference}, function(err, result) {\n      if(err) return callback(err, null);\n      callback(null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    var scope = reduce != null && reduce instanceof Code\n      ? reduce.scope\n      : {};\n\n    scope.ns = this.collectionName;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    var groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    this.db.eval(new Code(groupfn, scope), function (err, results) {\n      if (err) return callback(err, null);\n      callback(null, results.result || results);\n    });\n  }\n};\n\nvar aggregate = function(pipeline, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  var self = this;\n\n  // If we have any of the supported options in the options object\n  var opts = args[args.length - 1];\n  options = opts.readPreference \n    || opts.explain \n    || opts.cursor \n    || opts.out\n    || opts.allowDiskUse ? args.pop() : {}\n  // If the callback is the option (as for cursor override it)\n  if(typeof callback == 'object' && callback != null) options = callback;\n\n  // Convert operations to an array\n  if(!Array.isArray(args[0])) {\n    pipeline = [];\n    // Push all the operations to the pipeline\n    for(var i = 0; i < args.length; i++) pipeline.push(args[i]);\n  }\n\n  // Is the user requesting a cursor\n  if(options.cursor != null && options.out == null) {\n    // Set the aggregation cursor options\n    var agg_cursor_options = options.cursor;\n    agg_cursor_options.pipe = pipeline;\n    agg_cursor_options.allowDiskUse = options.allowDiskUse == null ? false : options.allowDiskUse;\n    // Return the aggregation cursor\n    return new AggregationCursor(this, this.serverCapabilities, agg_cursor_options);\n  }\n\n  // If out was specified\n  if(typeof options.out == 'string') {\n    pipeline.push({$out: options.out});\n  }\n\n  // Build the command\n  var command = { aggregate : this.collectionName, pipeline : pipeline};\n  // If we have allowDiskUse defined\n  if(options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;\n\n  // Ensure we have the right read preference inheritance\n  options.readPreference = shared._getReadConcern(this, options);\n  // If explain has been specified add it\n  if(options.explain) command.explain = options.explain;\n  // Execute the command\n  this.db.command(command, options, function(err, result) {\n    if(err) {\n      callback(err);\n    } else if(result['err'] || result['errmsg']) {\n      callback(utils.toError(result));\n    } else if(typeof result == 'object' && result['serverPipeline']) {\n      callback(null, result['serverPipeline']);\n    } else if(typeof result == 'object' && result['stages']) {\n      callback(null, result['stages']);\n    } else {\n      callback(null, result.result);\n    }\n  });\n}\n\nexports.mapReduce = mapReduce;\nexports.group = group;\nexports.aggregate = aggregate;\nexports.pipe = pipe;"]}