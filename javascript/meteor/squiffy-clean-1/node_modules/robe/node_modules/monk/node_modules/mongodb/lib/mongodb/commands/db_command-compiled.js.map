{"version":3,"sources":["db_command.js"],"names":[],"mappings":"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","file":"db_command-compiled.js","sourcesContent":["var QueryCommand = require('./query_command').QueryCommand,\n  InsertCommand = require('./insert_command').InsertCommand,\n  inherits = require('util').inherits,\n  utils = require('../utils'),\n  crypto = require('crypto');\n\n/**\n  Db Command\n**/\nvar DbCommand = exports.DbCommand = function(dbInstance, collectionName, queryOptions, numberToSkip, numberToReturn, query, returnFieldSelector, options) {\n  QueryCommand.call(this);\n  this.collectionName = collectionName;\n  this.queryOptions = queryOptions;\n  this.numberToSkip = numberToSkip;\n  this.numberToReturn = numberToReturn;\n  this.query = query;\n  this.returnFieldSelector = returnFieldSelector;\n  this.db = dbInstance;\n\n  // Set the slave ok bit\n  if(this.db && this.db.slaveOk) {\n    this.queryOptions |= QueryCommand.OPTS_SLAVE;\n  }\n\n  // Make sure we don't get a null exception\n  options = options == null ? {} : options;\n\n  // Allow for overriding the BSON checkKeys function\n  this.checkKeys = typeof options['checkKeys'] == 'boolean' ? options[\"checkKeys\"] : true;\n\n  // Let us defined on a command basis if we want functions to be serialized or not\n  if(options['serializeFunctions'] != null && options['serializeFunctions']) {\n    this.serializeFunctions = true;\n  }\n};\n\ninherits(DbCommand, QueryCommand);\n\n// Constants\nDbCommand.SYSTEM_NAMESPACE_COLLECTION = \"system.namespaces\";\nDbCommand.SYSTEM_INDEX_COLLECTION = \"system.indexes\";\nDbCommand.SYSTEM_PROFILE_COLLECTION = \"system.profile\";\nDbCommand.SYSTEM_USER_COLLECTION = \"system.users\";\nDbCommand.SYSTEM_COMMAND_COLLECTION = \"$cmd\";\nDbCommand.SYSTEM_JS_COLLECTION = \"system.js\";\n\n// New commands\nDbCommand.NcreateIsMasterCommand = function(db, databaseName) {\n  return new DbCommand(db, databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'ismaster':1}, null);\n};\n\n// Provide constructors for different db commands\nDbCommand.createIsMasterCommand = function(db) {\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, {'ismaster':1}, null);\n};\n\nDbCommand.createGetLastErrorCommand = function(options, db) {\n  if (typeof db === 'undefined') {\n    db =  options;\n    options = {};\n  }\n  // Final command\n  var command = {'getlasterror':1};\n  // If we have an options Object let's merge in the fields (fsync/wtimeout/w)\n  if('object' === typeof options) {\n    for(var name in options) {\n      command[name] = options[name]\n    }\n  }\n\n  // Special case for w == 1, remove the w\n  if(1 == command.w) {\n    delete command.w;\n  }\n\n  // Execute command\n  return new DbCommand(db, db.databaseName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command, null);\n};\n\nDbCommand.createGetLastStatusCommand = DbCommand.createGetLastErrorCommand;\n\nDbCommand.createDbCommand = function(db, command_hash, options, auth_db) {\n  var db_name = (auth_db ? auth_db : db.databaseName) + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION;\n  options = options == null ? {checkKeys: false} : options;\n  return new DbCommand(db, db_name, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null, options);\n};\n\nDbCommand.createAdminDbCommand = function(db, command_hash) {\n  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT, 0, -1, command_hash, null);\n};\n\nDbCommand.createAdminDbCommandSlaveOk = function(db, command_hash) {\n  return new DbCommand(db, \"admin.\" + DbCommand.SYSTEM_COMMAND_COLLECTION, QueryCommand.OPTS_NO_CURSOR_TIMEOUT | QueryCommand.OPTS_SLAVE, 0, -1, command_hash, null);\n};\n\nDbCommand.createDbSlaveOkCommand = function(db, command_hash, options) {\n  options = options == null ? {checkKeys: false} : options;\n  var dbName = options.dbName ? options.dbName : db.databaseName;\n  var flags = options.slaveOk ? QueryCommand.OPTS_NO_CURSOR_TIMEOUT | QueryCommand.OPTS_SLAVE : QueryCommand.OPTS_NO_CURSOR_TIMEOUT;\n  return new DbCommand(db, dbName + \".\" + DbCommand.SYSTEM_COMMAND_COLLECTION, flags, 0, -1, command_hash, null, options);\n};\n"]}