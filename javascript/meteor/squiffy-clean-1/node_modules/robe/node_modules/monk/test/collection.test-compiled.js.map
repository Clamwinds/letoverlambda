{"version":3,"sources":["collection.test.js"],"names":[],"mappings":"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","file":"collection.test-compiled.js","sourcesContent":["/*global expect*/\n\nvar monk = require('../lib/monk')\n  , db\n  , users, indexes;\n\ndescribe('collection', function () {\n  before(function () {\n    db = monk('127.0.0.1/monk');\n    users = db.get('users-' + Date.now());\n    indexes = db.get('indexes-' + Date.now());\n  });\n\n  describe('casting method', function () {\n    it('string -> oid', function () {\n      var oid = users.id('4ee0fd75d6bd52107c000118');\n      expect(oid.toHexString()).to.equal('4ee0fd75d6bd52107c000118');\n    });\n\n    it('oid -> oid', function () {\n      var oid = users.id(users.id('4ee0fd75d6bd52107c000118'));\n      expect(oid.toHexString()).to.equal('4ee0fd75d6bd52107c000118');\n    });\n\n    it('new oid', function () {\n      var oid = users.id();\n      expect(oid.toHexString()).to.be.a('string');\n    });\n\n    it('#oid', function(){\n      var oid = users.oid();\n      expect(oid.toHexString()).to.be.a('string');\n    });\n  });\n\n  describe('indexes', function () {\n    it('should accept a field string', function (done) {\n      users.index('name.first', function (err) {\n        expect(err).to.be(null);\n        users.indexes(function (err, indexes) {\n          expect(err).to.be(null);\n          expect(indexes['name.first_1']).to.not.be(undefined);\n          done();\n        });\n      });\n    });\n\n    it('should accept space-delimited compound indexes', function (done) {\n      users.index('name last', function (err) {\n        expect(err).to.be(null);\n        users.indexes(function (err, indexes) {\n          expect(err).to.be(null);\n          expect(indexes.name_1_last_1).to.not.be(undefined);\n          done();\n        });\n      });\n    });\n\n    it('should accept array compound indexes', function (done) {\n      users.index(['nombre', 'apellido'], function (err) {\n        expect(err).to.be(null);\n        users.indexes(function (err, indexes) {\n          expect(err).to.be(null);\n          expect(indexes.nombre_1_apellido_1).to.not.be(undefined);\n          done();\n        });\n      });\n    });\n\n    it('should accept object compound indexes', function (done) {\n      users.index({ up: 1, down: -1 }, function (err) {\n        expect(err).to.be(null);\n        users.indexes(function (err, indexes) {\n          expect(err).to.be(null);\n          expect(indexes['up_1_down_-1']).to.not.be(undefined);\n          done();\n        });\n      });\n    });\n\n    it('should accept options', function (done) {\n      indexes.index({ woot: 1 }, { unique: true }, function (err) {\n        expect(err).to.be(null);\n        indexes.indexes(function (err, indexes) {\n          expect(err).to.be(null);\n          expect(indexes.woot_1).to.not.be(undefined);\n          done();\n        });\n      });\n    });\n  });\n\n  describe('inserting', function () {\n    it('should force callback in next tick', function (done) {\n      var p = users.insert({ a: 'b' });\n      p.complete(done);\n    });\n\n    it('should give you an object with the _id', function (done) {\n      var p = users.insert({ a: 'b' }, function (err, obj) {\n        expect(obj._id).to.be.an('object');\n        expect(obj._id.toHexString).to.not.be(undefined);\n        done();\n      });\n    });\n  });\n\n  describe('finding', function () {\n    it('should find by id', function (done) {\n      users.insert({ c: 'd' }, function (err, doc) {\n        expect(err).to.be(null);\n        users.findById(doc._id, function (err, doc) {\n          expect(err).to.be(null);\n          expect(doc.c).to.be('d');\n          done();\n        });\n      });\n    });\n\n    it('should only provide selected fields', function (done) {\n      users.insert({ a: 'b', c: 'd', e: 'f' }, function (err, doc) {\n        expect(err).to.be(null);\n        users.findOne(doc._id, 'a e', function (err, doc) {\n          expect(err).to.be(null);\n          expect(doc.a).to.be('b');\n          expect(doc.e).to.be('f');\n          expect(doc.c).to.be(undefined);\n          done();\n        });\n      });\n    });\n\n    it('should work with streaming', function (done) {\n      var query = { a: { $exists: true } }\n        , found = 0;\n      users.count(query, function (err, total) {\n        users.find(query)\n          .each(function (doc) {\n            expect(doc.a).to.not.eql(null);\n            found++;\n          })\n          .error(function (err) {\n            done(err);\n          })\n          .success(function () {\n            expect(found).to.be(total);\n            done();\n          });\n      });\n    });\n\n    it('should work with streaming option', function (done) {\n      var query = { a: { $exists: true } }\n        , found = 0;\n      users.count(query, function (err, total) {\n        var promise = users.find(query, { stream: true });\n        process.nextTick(function () {\n          promise\n            .each(function (doc) {\n              expect(doc.a).to.not.eql(null);\n              found++;\n            })\n            .error(function (err) {\n              done(err);\n            })\n            .success(function () {\n              expect(found).to.be(total);\n              done();\n            });\n        });\n      });\n    });\n\n    it('should allow stream cursor destroy', function(done){\n      var query = { a: { $exists: true } }\n        , found = 0;\n      users.count(query, function (err, total) {\n        if (total <= 1) throw new Error('Bad test');\n        var cursor = users.find(query)\n          .each(function (doc) {\n            expect(doc.a).to.not.eql(null);\n            found++;\n            if (2 == found) cursor.destroy();\n          })\n          .error(function (err) {\n            done(err);\n          })\n          .success(function () {\n            setTimeout(function() {\n              expect(found).to.be(2);\n              done();\n            }, 100);\n          });\n      });\n    });\n  });\n\n  describe('counting', function () {\n    it('should work', function (done) {\n      users.count({ a: 'counting' }, function (err, count) {\n        expect(err).to.be(null);\n        expect(count).to.be(0);\n\n        users.insert({ a: 'counting' }, function (err) {\n          expect(err).to.be(null);\n\n          users.count({ a: 'counting' }, function (err, count) {\n            expect(err).to.be(null);\n            expect(count).to.be(1);\n            done();\n          });\n        });\n      });\n    });\n  });\n\n  describe('distinct', function(){\n    it('should work', function(done){\n      users.insert({ distinct: 'a' }, function(err){\n        expect(err).to.be(null);\n        users.insert({ distinct: 'a' }, function(err){\n          expect(err).to.be(null);\n          users.insert({ distinct: 'b' }, function(err){\n            expect(err).to.be(null);\n            users.distinct('distinct', function(err, docs){\n              expect(err).to.be(null);\n              expect(docs).to.eql(['a', 'b']);\n              done();\n            });\n          });\n        });\n      });\n    });\n  });\n\n  describe('updating', function () {\n    it('should update', function (done) {\n      users.insert({ d: 'e' }, function (err, doc) {\n        expect(err).to.be(null);\n        var p = users.update({ _id: doc._id }, { $set: { d: 'f' } });\n        p.complete(function (err) {\n          expect(err).to.be(null);\n          users.findById(doc._id, function (err, doc) {\n            expect(err).to.be(null);\n            expect(doc.d).to.be('f');\n            done();\n          });\n        });\n      });\n    });\n\n    it('should work with an objectid', function (done) {\n      users.insert({ worked: false }, function (err, doc) {\n        expect(err).to.be(null);\n        users.update(doc._id, { $set: { worked: true } }, function (err) {\n          expect(err).to.be(null);\n          users.findOne(doc._id, function (err, doc) {\n            expect(err).to.be(null);\n            expect(doc.worked).to.be(true);\n            done();\n          });\n        });\n      });\n    });\n\n    it('should work with an objectid (string)', function (done) {\n      users.insert({ worked: false }, function (err, doc) {\n        expect(err).to.be(null);\n        users.update(doc._id.toString(), { $set: { worked: true } }, function (err) {\n          expect(err).to.be(null);\n          users.findOne(doc._id, function (err, doc) {\n            expect(err).to.be(null);\n            expect(doc.worked).to.be(true);\n            done();\n          });\n        });\n      });\n    });\n  });\n\n  describe('remove', function () {\n    it('should remove a document', function (done) {\n      users.insert({ name: 'Tobi' }, function (err, doc) {\n        if (err) return done(err);\n        users.remove({ name: 'Tobi' }, function (err) {\n          if (err) return done(err);\n          users.find({ name: 'Tobi' }, function (err, doc) {\n            if (err) return done(err);\n            expect(doc).to.eql([]);\n            done();\n          });\n        });\n      });\n    });\n  });\n\n  describe('findAndModifying', function () {\n    it('should alter an existing document', function (done) {\n      var rand = 'now-' + Date.now();\n      users.insert({ find: rand }, function (err, doc) {\n        expect(err).to.be(null);\n        users.findAndModify({ find: rand }, { find: 'woot' }, { new: true }, function (err, doc) {\n          expect(err).to.be(null);\n          expect(doc.find).to.be('woot');\n          users.findById(doc._id, function (err, found) {\n            expect(err).to.be(null);\n            expect(found._id.toString()).to.equal(doc._id.toString());\n            expect(found.find).to.be('woot');\n            done();\n          });\n        });\n      });\n    });\n\n    it('should accept an id as query param', function(done){\n      users.insert({ locate: 'me' }, function(err, user){\n        expect(err).to.be(null);\n        users.findAndModify(user._id, { $set: { locate: 'you' } }, function(err){\n          expect(err).to.be(null);\n          users.findOne(user._id, function(err, user){\n            expect(err).to.be(null);\n            expect(user.locate).to.be('you');\n            done();\n          });\n        });\n      });\n    });\n\n    it('should accept an id as query param (mongo syntax)', function(done){\n      users.insert({ locate: 'me' }, function(err, user){\n        expect(err).to.be(null);\n        users.findAndModify({ query: user._id, update: { $set: { locate: 'you' } } }, function(err){\n          expect(err).to.be(null);\n          users.findOne(user._id, function(err, user){\n            expect(err).to.be(null);\n            expect(user.locate).to.be('you');\n            done();\n          });\n        });\n      });\n    });\n\n    it('should upsert', function (done) {\n      function callback (err, doc) {\n        if (err) return done(err);\n        expect(doc.find).to.be(rand);\n        users.findOne({ find: rand }, function (err, found) {\n          expect(err).to.be(null);\n          expect(found._id.toString()).to.be(doc._id.toString());\n          expect(found.find).to.be(rand);\n          done();\n        });\n      }\n\n      var rand = 'now-' + Date.now();\n\n      users.findAndModify(\n          { find: rand }\n        , { find: rand }\n        , { upsert: true }\n        , callback\n      );\n    });\n  });\n\n  describe('options', function () {\n    it('should allow defaults', function (done) {\n      db.options.multi = true;\n      users.update({}, { $set: { f: 'g' } }, function (err, num) {\n        expect(err).to.be(null);\n        expect(num).to.be.a('number'); // only a number of multi=true\n\n        users.options.safe = false;\n        users.options.multi = false;\n        users.update({}, { $set: { g: 'h' } }, function (err, num) {\n          expect(err).to.be(null);\n          expect(num).to.be(null);\n\n          users.options.safe = true;\n          users.options.multi = true;\n          users.update({}, { $set: { g: 'h' } }, { safe: false, multi: false }, function (err, num) {\n            expect(err).to.be(null);\n            expect(num).to.be(null);\n            done();\n          });\n        });\n      });\n    });\n  });\n\n  describe('promises', function () {\n    var Promise = monk.Promise;\n\n    it('insert', function () {\n      var p = users.insert();\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('insert');\n    });\n\n    it('findOne', function () {\n      var p = users.findOne();\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('findOne');\n    });\n\n    it('find', function () {\n      var p = users.findOne();\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('findOne');\n    });\n\n    it('update', function () {\n      var p = users.findOne();\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('findOne');\n    });\n\n    it('findAndModify', function () {\n      var p = users.findAndModify();\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('findAndModify');\n    });\n\n    it('remove', function () {\n      var p = users.remove();\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('remove');\n    });\n\n    it('index', function () {\n      var p = users.index('eee');\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('index');\n    });\n\n    it('indexes', function () {\n      var p = users.indexes();\n      expect(p).to.be.a(Promise);\n      expect(p.col).to.be(users);\n      expect(p.type).to.be('indexes');\n    });\n\n    it('drop', function (done) {\n      var col = db.get('drop-' + Date.now());\n      col.insert({}, function (err) {\n        expect(err).to.be(null);\n        var p = col.drop(done);\n        expect(p).to.be.a(Promise);\n        expect(p.type).to.be('drop');\n      });\n    });\n\n    it('options', function () {\n      var p = users.find({}, '-test');\n      expect(p.opts).to.eql({ fields: { test: 0 }, safe: true, multi: true });\n    });\n\n    it('query', function(done){\n      var qry = { a: 'woot' };\n      var p  = users.find(qry);\n      expect(p.query).to.be(qry);\n      p.once('complete', function(){\n        setTimeout(function(){\n          expect(p.qry).to.be(undefined);\n          done();\n        }, 50);\n      });\n    });\n  });\n\n  after(function (done) {\n    users.drop(function (err) {\n      expect(err).to.be(null);\n      indexes.drop(done);\n    });\n  });\n});\n"]}