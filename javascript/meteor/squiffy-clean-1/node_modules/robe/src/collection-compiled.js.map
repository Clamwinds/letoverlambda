{"version":3,"sources":["collection.js"],"names":[],"mappings":"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","file":"collection-compiled.js","sourcesContent":["\"use strict\";\n\n\nvar _ = require('lodash'),\n  compose = require('generator-compose'),\n  Class = require('class-extend'),\n  Q = require('bluebird'),\n  schemaBuilder = require('simple-mongo-schema');\n\n\nvar Cursor = require('./cursor'),\n  Document = require('./document'),\n  RobeUtils = require('./utils');\n\n\n\n/**\n * Represents a collection in the database.\n */\nclass Collection {\n  /**\n   * Constructor.\n   *\n   * @param  {Object} db Underlying database connection.\n   * @param  {Object} collection The underlying collection.\n   * @param  {Object} options Additional options.\n   * @param  {Object} [options.schema] Database schema.\n   * @param  {Array} [options.indexes] Database indexex to setup.\n   * @param  {Boolean} [options.rawMode] Whether to enable raw query mode by default. Default if false.\n   * @param  {Object} [options.methods] Convenience methods to make available on this collection instance. Each method is specified as a `name`:`function *` pair.\n   * @param  {Object} [options.docMethods] Convenience methods to make available on this collection's `Document` instances. Each method is specified as a `name`:`function *` pair.\n   */\n  constructor (db, collection, options = {}) {\n    this.db = db;\n\n    this.options = _.defaults(options, {\n      schema: {},\n      rawMode: false,\n      docMethods: {},\n    });\n\n    this.schema = schemaBuilder(options.schema);\n    this.indexes = options.indexes || [];\n\n    this.collection = collection;\n\n    Object.defineProperty(this, '_hooks', {\n      value: {\n        before: {\n          insert: [],\n          update: [],\n          remove: [],\n        },\n        after: {\n          insert: [],\n          update: [],\n          remove: [],\n        }\n      },\n      enumerable: false\n    });\n\n    // methods\n    for (let name in options.methods || {}) {\n      let method = options.methods[name];\n\n      if (RobeUtils.isGen(method)) {\n        this[name] = RobeUtils.bindGen(method, this);\n      } else {\n        this[name] = _.bind(method, this);\n      }\n    }\n  }\n\n\n  /**\n   * Ensure all configured indexes exist in the database.\n   *\n   * This looks through the indexes supplied during construction and sets them \n   * up.\n   */\n  * ensureIndexes () {\n    var self = this;\n\n    yield Q.map(this.indexes, function(idx) {\n      return self.collection.ensureIndex(idx.fields, idx.options || {});\n    });\n  }\n\n\n  /**\n   * Execute given handler before given event\n   *\n   * @param {String} eventName Name of event. One of `insert`, `remove`, `update`\n   * @param {Function} genFn Generator function which takes a callback as a parameter.\n   */\n  before (eventName, genFn) {\n    this._hooks.before[eventName].push(genFn);\n  }\n\n  /**\n   * Execute given handler after given event\n   *\n   * @param {String} eventName Name of event. One of `insert`, `remove`, `update`\n   * @param {Function} genFn Generator function which takes a callback as a parameter.\n   */\n  after (eventName, genFn) {\n    this._hooks.after[eventName].push(genFn);\n  }\n\n\n\n  /**\n   * Execute given hook\n   * @param  {String} when Hook type.\n   * @param  {String} eventName Hook event.\n   * @param  {Array} [args] Parameters to pass to hook.\n   *\n   * @private\n   */\n  * _runHook (when, eventName, ...args) {\n    var fn = compose(this._hooks[when][eventName]);\n\n    yield fn.apply(this, args);\n  }\n\n\n  /**\n   * Insert a document.\n   * \n   * @param  {Object} attrs The document attributes.\n   * @param {Object} [options] Additional options.\n   * @param {Boolean} [options.rawMode] Whether to return the resulting raw document as-is. Overrides the default for the collection.\n   * @return {Document} the newly inserted document.\n   */\n  * insert (attrs, options) {\n    yield this._runHook('before', 'insert', attrs);\n\n    // validate against schema\n    yield this.schema.validate(attrs);\n\n    var res = yield this.collection.insert(attrs);\n\n    yield this._runHook('after', 'insert', res);\n\n    return this._createDocumentFromQueryResult(res, options);\n  }\n\n\n  /**\n   * Update documents.\n   * \n   * @param {Object} [search] Filtering query.\n   * @param  {Object} update The update to make.\n   */\n  * update (search = {}, update) {\n    yield this._runHook('before', 'update', search, update);\n\n    // validate against schema\n    if (update.$set) {\n      yield this.schema.validate(update.$set, {\n        ignoreMissing: true\n      });\n    } else {\n      yield this.schema.validate(update, {\n        ignoreMissing: false\n      });      \n    }\n\n    var ret = yield this.collection.update(search, update);\n\n    yield this._runHook('after', 'update', search, update, ret);\n\n    return ret;\n  }\n\n\n  /**\n   * Remove documents.\n   * \n   * @param {Object} [search] Filtering query.\n   */\n  * remove (search) {\n    yield this._runHook('before', 'remove', search);\n\n    var ret = yield this.collection.remove(search);\n\n    yield this._runHook('after', 'remove', search, ret);\n\n    return ret;\n  }\n\n\n  /**\n   * Find documents from this collection.\n   *\n   * @param {Object} [selector] Filtering query.\n   * @param {Object} [options] Query options.\n   * @param {Object} [options.sort] Sort filter (Mongo syntax).\n   * @param {Number} [options.skip] Number of records to skip at the beginning.\n   * @param {Number} [options.limit] Max. no of records to return.\n   * @param {Object} [options.fields] Fields to return or exclude (Mongo syntax).\n   * @param {Boolean} [options.rawMode] Whether to return the resulting raw document as-is. Overrides the default for the collection.\n   *\n   * @return {Array} Results\n   */\n  * find (selector = {}, options = {}) {\n    var self = this;\n\n    var res = yield this.collection.find(selector, _.extend({}, options));\n\n    return res.map( v => self._createDocumentFromQueryResult(v, options) );\n  }\n\n\n\n  /**\n   * Count documents in this collection.\n   *\n   * @param {Object} [selector] Filtering query.\n   *\n   * @return {Array} Results\n   */\n  * count (selector = {}) {\n    return yield this.collection.count(selector);\n  }\n\n\n\n  /**\n   * Find a single document from this collection.\n   *\n   * @param {String|Object} selector ObjectId or filtering query.\n   * @param {Object} [options] Query options.\n   * @param {Object} [options.sort] Sort filter (Mongo syntax).\n   * @param {Number} [options.skip] Number of records to skip at the beginning.\n   * @param {Object} [options.fields] Fields to return or exclude (Mongo syntax).\n   */\n  * findOne (selector, options = {}) {\n    var self = this;\n\n    options.limit = 1;\n\n    var results = yield this.collection.find(selector, options);\n\n    return results.length \n      ? this._createDocumentFromQueryResult(results.pop(), options) \n      : null;\n  }\n\n\n\n\n  /**\n   * Stream documents from this collection.\n   *\n   * @param {Object} [selector] Filtering query.\n   * @param {Object} [options] Query options.\n   * @param {Object} [options.sort] Sort filter (Mongo syntax).\n   * @param {Number} [options.skip] Number of records to skip at the beginning.\n   * @param {Number} [options.limit] Max. no of records to return.\n   * @param {Object} [options.fields] Fields to return or exclude (Mongo syntax).\n   * @param {Boolean} [options.rawMode] Whether to return the resulting raw document as-is. Overrides the default for the collection.\n   *\n   * @return {Cursor} cursor object\n   */\n  * findStream (selector = {}, options = {}) {\n    _.extend(options, {\n      stream: true,\n      timeout: false,\n    });\n\n    return new Cursor(\n      this,\n      this.collection.find(selector, options),\n      options\n    );\n  }\n\n\n  /**\n   * Add watcher to this collection's oplog tailing cursor.\n   *\n   * The Mongo oplog will be observed for changes to this collection. If \n   * something happens the callback will be invoked.\n   *\n   * @param {Function} callback Callback to add to observers list.\n   * @see Robe.Oplog\n   */\n  * addWatcher (callback) {\n    (yield this.db.oplog()).on(this.collection.name + ':*', callback);\n  }\n\n\n\n  /**\n   * Remove watcher from this collection's oplog tailing cursor.\n   *\n   * @param {Function} callback Callback to remove from the observers list.\n   */\n  * removeWatcher (callback) {\n    (yield this.db.oplog()).off(this.collection.name + ':*', callback);\n  }\n\n\n\n  /**\n   * Create Mongo document from given raw object.\n   *\n   * @param {Object} mongoDoc Mongo document returned as a query result.\n   * \n   * @return {Document|Object}\n   *\n   * @private\n   */\n  _createDocument (mongoDoc) {\n    var d = new Document(this, mongoDoc);\n\n    for (let key in this.options.docMethods) {\n      let method = this.options.docMethods[key];\n\n      if (RobeUtils.isGen(method)) {\n        d[key] = RobeUtils.bindGen(method, d);\n      } else {\n        d[key] = _.bind(method, d);\n      }\n    }\n\n    return d;\n  }\n\n\n\n  /**\n   * Create Mongo document from given raw object returned by query.\n   *\n   * @param {Object} mongoDoc Mongo document returned as a query result.\n   * @param {Object} [options] Additional options.\n   * @param {Boolean} [options.rawMode] Whether to return the resulting raw document as-is. Overrides the default for the collection.\n   * \n   * @return {Document|Object}\n   *\n   * @private\n   */\n  _createDocumentFromQueryResult (mongoDoc, options = {}) {\n    if (options.rawMode || this.options.rawMode) {\n      return mongoDoc;\n    } else {\n      return this._createDocument(mongoDoc);\n    }\n  }\n\n}\n\n\nCollection.extend = Class.extend;\n\nmodule.exports = Collection;\n\n\n"]}