{"version":3,"sources":["array.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAI/B,OAAO,CAAC,OAAO,GAAG,aAAY;AAC5B,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAI,CAAC,CAAC,GAAG,MAAM,CAAC;AACd,SAAK,EAAE;AACL,UAAI,EAAE;AACJ,YAAI,EAAE;AACJ,cAAI,EAAE,KAAK;SACZ;OACF;KACF;GACF,CAAC,CAAC;;AAEH,MAAI,gBAAgB,GAAG,CACrB;AACE,SAAK,EAAE,EAAE;GACV,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,IAAI;KACX;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,SAAS;KAChB;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,IAAI;KACX;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE;AACJ,SAAC,EAAE,GAAG;OACP;KACF;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,YAAW,EAAE;KACpB;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,QAAQ;KACf;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,IAAI;KACX;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,EAAE;KACT;GACF,CACF,CAAC;;AAGF,kBAAgB,CAAC,OAAO,CAAC,UAAS,CAAC,EAAE;AACnC,QAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACjC,CAAC,CAAC;CACJ,CAAC;;AAMF,OAAO,CAAC,QAAQ,GAAG,aAAY;AAC7B,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAI,CAAC,GAAG,MAAM,CAAC;AACb,SAAK,EAAE;AACL,UAAI,EAAE;AACJ,YAAI,EAAE;AACJ,cAAI,EAAE,CAAC;AACL,iBAAK,EAAE;AACL,kBAAI,EAAE,OAAO;aACd;WACF,CAAC;SACH;OACF;KACF;GACF,CAAC,CAAC;;AAEH,GAAC,CAAC,OAAO,CAAC;AACR,SAAK,EAAE;AACL,UAAI,EAAE,CACJ;AACE,aAAK,EAAE,OAAO;OACf,EACD;AACE,aAAK,EAAE,KAAK;OACb,CACF;KACF;GACF,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;AACZ,SAAK,EAAE;AACL,UAAI,EAAE,CACJ;AACE,aAAK,EAAE,KAAK;OACb,EACD;AACE,aAAK,EAAE,IAAI;OACZ,CACF;KACF;GACF,CAAC,CAAC;CACJ,CAAC","file":"array-compiled.js","sourcesContent":["\"use strict\";\n\nvar schema = require('../../');\n\n\n\nexports.default = function*() {\n  var self = this;\n\n  this.s = schema({\n    first: {\n      type: {\n        name: {\n          type: Array\n        },\n      }\n    }\n  });\n\n  var neutralTestCases = [\n    {\n      first: {}\n    },\n    {\n      first: {\n        name: null\n      }\n    },\n    {\n      first: {\n        name: undefined\n      }\n    },\n    {\n      first: {\n        name: true\n      }\n    },\n    {\n      first: {\n        name: {\n          a: 123\n        }\n      }\n    },\n    {\n      first: {\n        name: function() {}\n      }\n    },\n    {\n      first: {\n        name: 'blabla'\n      }\n    },\n    {\n      first: {\n        name: 2323\n      }\n    },\n    {\n      first: {\n        name: []\n      }\n    },\n  ];\n\n\n  neutralTestCases.forEach(function(c) {\n    self.s.typeify(c).should.eql(c);\n  });\n};\n\n\n\n\n\nexports.specific = function*() {\n  var self = this;\n\n  var s = schema({\n    first: {\n      type: {\n        name: {\n          type: [{\n            alive: {\n              type: Boolean\n            }\n          }]\n        },\n      }\n    }\n  });\n\n  s.typeify({\n    first: {\n      name: [\n        {\n          alive: 'false'\n        },\n        {\n          alive: 'yes'\n        }\n      ]\n    }\n  }).should.eql({\n    first: {\n      name: [\n        {\n          alive: false\n        },\n        {\n          alive: true\n        }\n      ]\n    }    \n  });\n};\n"]}