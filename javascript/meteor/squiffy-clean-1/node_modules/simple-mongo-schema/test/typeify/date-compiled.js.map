{"version":3,"sources":["date.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAI/B,MAAM,CAAC,OAAO,GAAG,aAAY;AAC3B,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAI,CAAC,CAAC,GAAG,MAAM,CAAC;AACd,SAAK,EAAE;AACL,UAAI,EAAE;AACJ,YAAI,EAAE;AACJ,cAAI,EAAE,IAAI;SACX;OACF;KACF;GACF,CAAC,CAAC;;AAEH,MAAI,gBAAgB,GAAG,CACrB;AACE,SAAK,EAAE,EAAE;GACV,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,IAAI;KACX;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,SAAS;KAChB;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,CAAC,KAAK,CAAC;KACd;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE;AACJ,SAAC,EAAE,GAAG;OACP;KACF;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,YAAW,EAAE;KACpB;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,QAAQ;KACf;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,IAAI;KACX;GACF,CACF,CAAC;;AAGF,MAAI,aAAa,GAAG,CAClB;AACE,SAAK,EAAE;AACL,UAAI,EAAE,IAAI,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC;KACzB;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,IAAI,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;KACpC;GACF,EACD;AACE,SAAK,EAAE;AACL,UAAI,EAAE,qBAAqB;KAC5B;GACF,CACF,CAAA;;AAED,kBAAgB,CAAC,OAAO,CAAC,UAAS,CAAC,EAAE;AACnC,QAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACjC,CAAC,CAAC;;AAEH,eAAa,CAAC,OAAO,CAAC,UAAS,CAAC,EAAE;AAChC,QAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;AAE5B,OAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;GACnE,CAAC,CAAC;CACJ,CAAC","file":"date-compiled.js","sourcesContent":["\"use strict\";\n\nvar schema = require('../../');\n\n\n\nmodule.exports = function*() {\n  var self = this;\n\n  this.s = schema({\n    first: {\n      type: {\n        name: {\n          type: Date\n        },\n      }\n    }\n  });\n\n  var neutralTestCases = [\n    {\n      first: {}\n    },\n    {\n      first: {\n        name: null\n      }\n    },\n    {\n      first: {\n        name: undefined\n      }\n    },\n    {\n      first: {\n        name: ['bla']\n      }\n    },\n    {\n      first: {\n        name: {\n          a: 123\n        }\n      }\n    },\n    {\n      first: {\n        name: function() {}\n      }\n    },\n    {\n      first: {\n        name: 'blabla'\n      }\n    },\n    {\n      first: {\n        name: 2323\n      }\n    },\n  ];\n\n\n  var dateTestCases = [\n    {\n      first: {\n        name: new Date(2014,0,2)\n      }\n    },\n    {\n      first: {\n        name: new Date(2014,0,2).toString()\n      }\n    },\n    {\n      first: {\n        name: '2014-01-02 00:00:00'\n      }\n    },\n  ]\n\n  neutralTestCases.forEach(function(c) {\n    self.s.typeify(c).should.eql(c);\n  });\n\n  dateTestCases.forEach(function(c) {\n    var ret = self.s.typeify(c);\n\n    ret.first.name.getTime().should.eql(new Date(2014,0,2).getTime());\n  });\n};\n\n\n\n"]}