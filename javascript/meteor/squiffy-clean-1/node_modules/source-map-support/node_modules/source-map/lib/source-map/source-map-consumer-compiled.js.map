{"version":3,"sources":["source-map-consumer.js"],"names":[],"mappings":"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","file":"source-map-consumer-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n  var binarySearch = require('./binary-search');\n  var ArraySet = require('./array-set').ArraySet;\n  var base64VLQ = require('./base64-vlq');\n\n  /**\n   * A SourceMapConsumer instance represents a parsed source map which we can\n   * query for information about the original file positions by giving it a file\n   * position in the generated source.\n   *\n   * The only parameter is the raw source map (either as a JSON string, or\n   * already parsed to an object). According to the spec, source maps have the\n   * following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - sources: An array of URLs to the original source files.\n   *   - names: An array of identifiers which can be referrenced by individual mappings.\n   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n   *   - sourcesContent: Optional. An array of contents of the original source files.\n   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n   *   - file: The generated file this source map is associated with.\n   *\n   * Here is an example source map, taken from the source map spec[0]:\n   *\n   *     {\n   *       version : 3,\n   *       file: \"out.js\",\n   *       sourceRoot : \"\",\n   *       sources: [\"foo.js\", \"bar.js\"],\n   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *       mappings: \"AA,AB;;ABCDE;\"\n   *     }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n   */\n  function SourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sources = util.getArg(sourceMap, 'sources');\n    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n    // requires the array) to play nice here.\n    var names = util.getArg(sourceMap, 'names', []);\n    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n    var mappings = util.getArg(sourceMap, 'mappings');\n    var file = util.getArg(sourceMap, 'file', null);\n\n    // Once again, Sass deviates from the spec and supplies the version as a\n    // string rather than a number, so we use loose equality checking here.\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    // Pass `true` below to allow duplicate names and sources. While source maps\n    // are intended to be compressed and deduplicated, the TypeScript compiler\n    // sometimes generates source maps with duplicates in them. See Github issue\n    // #72 and bugzil.la/889492.\n    this._names = ArraySet.fromArray(names, true);\n    this._sources = ArraySet.fromArray(sources, true);\n\n    this.sourceRoot = sourceRoot;\n    this.sourcesContent = sourcesContent;\n    this._mappings = mappings;\n    this.file = file;\n  }\n\n  /**\n   * Create a SourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @returns SourceMapConsumer\n   */\n  SourceMapConsumer.fromSourceMap =\n    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n      var smc = Object.create(SourceMapConsumer.prototype);\n\n      smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n      smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n      smc.sourceRoot = aSourceMap._sourceRoot;\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                              smc.sourceRoot);\n      smc.file = aSourceMap._file;\n\n      smc.__generatedMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByGeneratedPositions);\n      smc.__originalMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByOriginalPositions);\n\n      return smc;\n    };\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  SourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(SourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      return this._sources.toArray().map(function (s) {\n        return this.sourceRoot ? util.join(this.sourceRoot, s) : s;\n      }, this);\n    }\n  });\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n\n  SourceMapConsumer.prototype.__generatedMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n    get: function () {\n      if (!this.__generatedMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__generatedMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype.__originalMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n    get: function () {\n      if (!this.__originalMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__originalMappings;\n    }\n  });\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  SourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      var generatedLine = 1;\n      var previousGeneratedColumn = 0;\n      var previousOriginalLine = 0;\n      var previousOriginalColumn = 0;\n      var previousSource = 0;\n      var previousName = 0;\n      var mappingSeparator = /^[,;]/;\n      var str = aStr;\n      var mapping;\n      var temp;\n\n      while (str.length > 0) {\n        if (str.charAt(0) === ';') {\n          generatedLine++;\n          str = str.slice(1);\n          previousGeneratedColumn = 0;\n        }\n        else if (str.charAt(0) === ',') {\n          str = str.slice(1);\n        }\n        else {\n          mapping = {};\n          mapping.generatedLine = generatedLine;\n\n          // Generated column.\n          temp = base64VLQ.decode(str);\n          mapping.generatedColumn = previousGeneratedColumn + temp.value;\n          previousGeneratedColumn = mapping.generatedColumn;\n          str = temp.rest;\n\n          if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n            // Original source.\n            temp = base64VLQ.decode(str);\n            mapping.source = this._sources.at(previousSource + temp.value);\n            previousSource += temp.value;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source, but no line and column');\n            }\n\n            // Original line.\n            temp = base64VLQ.decode(str);\n            mapping.originalLine = previousOriginalLine + temp.value;\n            previousOriginalLine = mapping.originalLine;\n            // Lines are stored 0-based\n            mapping.originalLine += 1;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source and line, but no column');\n            }\n\n            // Original column.\n            temp = base64VLQ.decode(str);\n            mapping.originalColumn = previousOriginalColumn + temp.value;\n            previousOriginalColumn = mapping.originalColumn;\n            str = temp.rest;\n\n            if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n              // Original name.\n              temp = base64VLQ.decode(str);\n              mapping.name = this._names.at(previousName + temp.value);\n              previousName += temp.value;\n              str = temp.rest;\n            }\n          }\n\n          this.__generatedMappings.push(mapping);\n          if (typeof mapping.originalLine === 'number') {\n            this.__originalMappings.push(mapping);\n          }\n        }\n      }\n\n      this.__generatedMappings.sort(util.compareByGeneratedPositions);\n      this.__originalMappings.sort(util.compareByOriginalPositions);\n    };\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  SourceMapConsumer.prototype._findMapping =\n    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                           aColumnName, aComparator) {\n      // To return the position we are searching for, we must first find the\n      // mapping for the given position and then return the opposite position it\n      // points to. Because the mappings are sorted, we can use binary search to\n      // find the best mapping.\n\n      if (aNeedle[aLineName] <= 0) {\n        throw new TypeError('Line must be greater than or equal to 1, got '\n                            + aNeedle[aLineName]);\n      }\n      if (aNeedle[aColumnName] < 0) {\n        throw new TypeError('Column must be greater than or equal to 0, got '\n                            + aNeedle[aColumnName]);\n      }\n\n      return binarySearch.search(aNeedle, aMappings, aComparator);\n    };\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  SourceMapConsumer.prototype.originalPositionFor =\n    function SourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      var mapping = this._findMapping(needle,\n                                      this._generatedMappings,\n                                      \"generatedLine\",\n                                      \"generatedColumn\",\n                                      util.compareByGeneratedPositions);\n\n      if (mapping) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source && this.sourceRoot) {\n          source = util.join(this.sourceRoot, source);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: util.getArg(mapping, 'name', null)\n        };\n      }\n\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * availible.\n   */\n  SourceMapConsumer.prototype.sourceContentFor =\n    function SourceMapConsumer_sourceContentFor(aSource) {\n      if (!this.sourcesContent) {\n        return null;\n      }\n\n      if (this.sourceRoot) {\n        aSource = util.relative(this.sourceRoot, aSource);\n      }\n\n      if (this._sources.has(aSource)) {\n        return this.sourcesContent[this._sources.indexOf(aSource)];\n      }\n\n      var url;\n      if (this.sourceRoot\n          && (url = util.urlParse(this.sourceRoot))) {\n        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n        // many users. We can help them out when they expect file:// URIs to\n        // behave like it would if they were running a local HTTP server. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n        if (url.scheme == \"file\"\n            && this._sources.has(fileUriAbsPath)) {\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n        }\n\n        if ((!url.path || url.path == \"/\")\n            && this._sources.has(\"/\" + aSource)) {\n          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n        }\n      }\n\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  SourceMapConsumer.prototype.generatedPositionFor =\n    function SourceMapConsumer_generatedPositionFor(aArgs) {\n      var needle = {\n        source: util.getArg(aArgs, 'source'),\n        originalLine: util.getArg(aArgs, 'line'),\n        originalColumn: util.getArg(aArgs, 'column')\n      };\n\n      if (this.sourceRoot) {\n        needle.source = util.relative(this.sourceRoot, needle.source);\n      }\n\n      var mapping = this._findMapping(needle,\n                                      this._originalMappings,\n                                      \"originalLine\",\n                                      \"originalColumn\",\n                                      util.compareByOriginalPositions);\n\n      if (mapping) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null)\n        };\n      }\n\n      return {\n        line: null,\n        column: null\n      };\n    };\n\n  SourceMapConsumer.GENERATED_ORDER = 1;\n  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  SourceMapConsumer.prototype.eachMapping =\n    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n      var context = aContext || null;\n      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n      var mappings;\n      switch (order) {\n      case SourceMapConsumer.GENERATED_ORDER:\n        mappings = this._generatedMappings;\n        break;\n      case SourceMapConsumer.ORIGINAL_ORDER:\n        mappings = this._originalMappings;\n        break;\n      default:\n        throw new Error(\"Unknown order of iteration.\");\n      }\n\n      var sourceRoot = this.sourceRoot;\n      mappings.map(function (mapping) {\n        var source = mapping.source;\n        if (source && sourceRoot) {\n          source = util.join(sourceRoot, source);\n        }\n        return {\n          source: source,\n          generatedLine: mapping.generatedLine,\n          generatedColumn: mapping.generatedColumn,\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: mapping.name\n        };\n      }).forEach(aCallback, context);\n    };\n\n  exports.SourceMapConsumer = SourceMapConsumer;\n\n});\n"]}