{"version":3,"sources":["test-source-map-consumer.js"],"names":[],"mappings":"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","file":"test-source-map-consumer-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n\n  exports['test that we can instantiate with a string or an objects'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(util.testMap);\n    });\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test that the `sources` field has the original sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var sources = map.sources;\n\n    assert.equal(sources[0], '/the/root/one.js');\n    assert.equal(sources[1], '/the/root/two.js');\n    assert.equal(sources.length, 2);\n  };\n\n  exports['test that the source root is reflected in a mapping\\'s source field'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var mapping;\n\n    mapping = map.originalPositionFor({\n      line: 2,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/two.js');\n\n    mapping = map.originalPositionFor({\n      line: 1,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/one.js');\n  };\n\n  exports['test mapping tokens back exactly'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    util.assertMapping(1, 1, '/the/root/one.js', 1, 1, null, map, assert);\n    util.assertMapping(1, 5, '/the/root/one.js', 1, 5, null, map, assert);\n    util.assertMapping(1, 9, '/the/root/one.js', 1, 11, null, map, assert);\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 21, 'bar', map, assert);\n    util.assertMapping(1, 21, '/the/root/one.js', 2, 3, null, map, assert);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 10, 'baz', map, assert);\n    util.assertMapping(1, 32, '/the/root/one.js', 2, 14, 'bar', map, assert);\n\n    util.assertMapping(2, 1, '/the/root/two.js', 1, 1, null, map, assert);\n    util.assertMapping(2, 5, '/the/root/two.js', 1, 5, null, map, assert);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 11, null, map, assert);\n    util.assertMapping(2, 18, '/the/root/two.js', 1, 21, 'n', map, assert);\n    util.assertMapping(2, 21, '/the/root/two.js', 2, 3, null, map, assert);\n    util.assertMapping(2, 28, '/the/root/two.js', 2, 10, 'n', map, assert);\n  };\n\n  exports['test mapping tokens fuzzy'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    // Finding original positions\n    util.assertMapping(1, 20, '/the/root/one.js', 1, 21, 'bar', map, assert, true);\n    util.assertMapping(1, 30, '/the/root/one.js', 2, 10, 'baz', map, assert, true);\n    util.assertMapping(2, 12, '/the/root/two.js', 1, 11, null, map, assert, true);\n\n    // Finding generated positions\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 22, 'bar', map, assert, null, true);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 13, 'baz', map, assert, null, true);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 16, null, map, assert, null, true);\n  };\n\n  exports['test creating source map consumers with )]}\\' prefix'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(\")]}'\" + JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test eachMapping'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.generatedLine >= previousLine);\n\n      if (mapping.source) {\n        assert.equal(mapping.source.indexOf(util.testMap.sourceRoot), 0);\n      }\n\n      if (mapping.generatedLine === previousLine) {\n        assert.ok(mapping.generatedColumn >= previousColumn);\n        previousColumn = mapping.generatedColumn;\n      }\n      else {\n        previousLine = mapping.generatedLine;\n        previousColumn = -Infinity;\n      }\n    });\n  };\n\n  exports['test iterating over mappings in a different order'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    var previousSource = \"\";\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.source >= previousSource);\n\n      if (mapping.source === previousSource) {\n        assert.ok(mapping.originalLine >= previousLine);\n\n        if (mapping.originalLine === previousLine) {\n          assert.ok(mapping.originalColumn >= previousColumn);\n          previousColumn = mapping.originalColumn;\n        }\n        else {\n          previousLine = mapping.originalLine;\n          previousColumn = -Infinity;\n        }\n      }\n      else {\n        previousSource = mapping.source;\n        previousLine = -Infinity;\n        previousColumn = -Infinity;\n      }\n    }, null, SourceMapConsumer.ORIGINAL_ORDER);\n  };\n\n  exports['test that we can set the context for `this` in eachMapping'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var context = {};\n    map.eachMapping(function () {\n      assert.equal(this, context);\n    }, context);\n  };\n\n  exports['test that the `sourcesContent` field has the original sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sourcesContent = map.sourcesContent;\n\n    assert.equal(sourcesContent[0], ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(sourcesContent[1], ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(sourcesContent.length, 2);\n  };\n\n  exports['test that we can get the original sources for the sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sources = map.sources;\n\n    assert.equal(map.sourceContentFor(sources[0]), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(sources[1]), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(map.sourceContentFor(\"one.js\"), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(\"two.js\"), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.throws(function () {\n      map.sourceContentFor(\"\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"/the/root/three.js\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"three.js\");\n    }, Error);\n  };\n\n  exports['test sourceRoot + generatedPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map.addMapping({\n      original: { line: 5, column: 5 },\n      generated: { line: 6, column: 6 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    // Should handle without sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    // Should handle with sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'foo/bar/bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n  };\n\n  exports['test sourceRoot + originalPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2,\n    });\n\n    // Should always have the prepended source root\n    assert.equal(pos.source, 'foo/bar/bang.coffee');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n  };\n\n  exports['test github issue #56'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://',\n      file: 'www.example.com/foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'www.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1);\n    assert.equal(sources[0], 'http://www.example.com/original.js');\n  };\n\n  exports['test github issue #43'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'http://cdn.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://cdn.example.com/original.js',\n                 'Should not be joined with the sourceRoot.');\n  };\n\n  exports['test absolute path, but same host sources'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/foo/bar',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: '/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://example.com/original.js',\n                 'Source should be relative the host of the source root.');\n  };\n\n  exports['test github issue #64'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"http://example.com/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    assert.equal(map.sourceContentFor(\"a\"), \"foo\");\n    assert.equal(map.sourceContentFor(\"/a\"), \"foo\");\n  };\n\n  exports['test bug 885597'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"file:///Users/AlGore/Invented/The/Internet/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    var s = map.sources[0];\n    assert.equal(map.sourceContentFor(s), \"foo\");\n  };\n\n  exports['test github issue #72, duplicate sources'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source1.js\", \"source1.js\", \"source3.js\"],\n      \"names\": [],\n      \"mappings\": \";EAAC;;IAEE;;MEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.source, 'http://example.com/source3.js');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test github issue #72, duplicate names'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source.js\"],\n      \"names\": [\"name1\", \"name1\", \"name3\"],\n      \"mappings\": \";EAACA;;IAEEA;;MAEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.name, 'name3');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test SourceMapConsumer.fromSourceMap'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/',\n      file: 'foo.js'\n    });\n    smg.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.js'\n    });\n    smg.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 4, column: 4 },\n      source: 'baz.js',\n      name: 'dirtMcGirt'\n    });\n    smg.setSourceContent('baz.js', 'baz.js content');\n\n    var smc = SourceMapConsumer.fromSourceMap(smg);\n    assert.equal(smc.file, 'foo.js');\n    assert.equal(smc.sourceRoot, 'http://example.com/');\n    assert.equal(smc.sources.length, 2);\n    assert.equal(smc.sources[0], 'http://example.com/bar.js');\n    assert.equal(smc.sources[1], 'http://example.com/baz.js');\n    assert.equal(smc.sourceContentFor('baz.js'), 'baz.js content');\n\n    var pos = smc.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n    assert.equal(pos.source, 'http://example.com/bar.js');\n    assert.equal(pos.name, null);\n\n    pos = smc.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'http://example.com/bar.js'\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    pos = smc.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n    assert.equal(pos.source, 'http://example.com/baz.js');\n    assert.equal(pos.name, 'dirtMcGirt');\n\n    pos = smc.generatedPositionFor({\n      line: 2,\n      column: 2,\n      source: 'http://example.com/baz.js'\n    });\n    assert.equal(pos.line, 4);\n    assert.equal(pos.column, 4);\n  };\n});\n"]}