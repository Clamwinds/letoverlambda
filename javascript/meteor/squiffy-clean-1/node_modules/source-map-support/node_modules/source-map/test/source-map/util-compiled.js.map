{"version":3,"sources":["util.js"],"names":[],"mappings":"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","file":"util-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('../../lib/source-map/util');\n\n  // This is a test mapping which maps functions from two different files\n  // (one.js and two.js) to a minified generated source.\n  //\n  // Here is one.js:\n  //\n  //   ONE.foo = function (bar) {\n  //     return baz(bar);\n  //   };\n  //\n  // Here is two.js:\n  //\n  //   TWO.inc = function (n) {\n  //     return n + 1;\n  //   };\n  //\n  // And here is the generated code (min.js):\n  //\n  //   ONE.foo=function(a){return baz(a);};\n  //   TWO.inc=function(a){return a+1;};\n  exports.testGeneratedCode = \" ONE.foo=function(a){return baz(a);};\\n\"+\n                              \" TWO.inc=function(a){return a+1;};\";\n  exports.testMap = {\n    version: 3,\n    file: 'min.js',\n    names: ['bar', 'baz', 'n'],\n    sources: ['one.js', 'two.js'],\n    sourceRoot: '/the/root',\n    mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n  };\n  exports.testMapWithSourcesContent = {\n    version: 3,\n    file: 'min.js',\n    names: ['bar', 'baz', 'n'],\n    sources: ['one.js', 'two.js'],\n    sourcesContent: [\n      ' ONE.foo = function (bar) {\\n' +\n      '   return baz(bar);\\n' +\n      ' };',\n      ' TWO.inc = function (n) {\\n' +\n      '   return n + 1;\\n' +\n      ' };'\n    ],\n    sourceRoot: '/the/root',\n    mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n  };\n  exports.emptyMap = {\n    version: 3,\n    file: 'min.js',\n    names: [],\n    sources: [],\n    mappings: ''\n  };\n\n\n  function assertMapping(generatedLine, generatedColumn, originalSource,\n                         originalLine, originalColumn, name, map, assert,\n                         dontTestGenerated, dontTestOriginal) {\n    if (!dontTestOriginal) {\n      var origMapping = map.originalPositionFor({\n        line: generatedLine,\n        column: generatedColumn\n      });\n      assert.equal(origMapping.name, name,\n                   'Incorrect name, expected ' + JSON.stringify(name)\n                   + ', got ' + JSON.stringify(origMapping.name));\n      assert.equal(origMapping.line, originalLine,\n                   'Incorrect line, expected ' + JSON.stringify(originalLine)\n                   + ', got ' + JSON.stringify(origMapping.line));\n      assert.equal(origMapping.column, originalColumn,\n                   'Incorrect column, expected ' + JSON.stringify(originalColumn)\n                   + ', got ' + JSON.stringify(origMapping.column));\n\n      var expectedSource;\n\n      if (originalSource && map.sourceRoot && originalSource.indexOf(map.sourceRoot) === 0) {\n        expectedSource = originalSource;\n      } else if (originalSource) {\n        expectedSource = map.sourceRoot\n          ? util.join(map.sourceRoot, originalSource)\n          : originalSource;\n      } else {\n        expectedSource = null;\n      }\n\n      assert.equal(origMapping.source, expectedSource,\n                   'Incorrect source, expected ' + JSON.stringify(expectedSource)\n                   + ', got ' + JSON.stringify(origMapping.source));\n    }\n\n    if (!dontTestGenerated) {\n      var genMapping = map.generatedPositionFor({\n        source: originalSource,\n        line: originalLine,\n        column: originalColumn\n      });\n      assert.equal(genMapping.line, generatedLine,\n                   'Incorrect line, expected ' + JSON.stringify(generatedLine)\n                   + ', got ' + JSON.stringify(genMapping.line));\n      assert.equal(genMapping.column, generatedColumn,\n                   'Incorrect column, expected ' + JSON.stringify(generatedColumn)\n                   + ', got ' + JSON.stringify(genMapping.column));\n    }\n  }\n  exports.assertMapping = assertMapping;\n\n  function assertEqualMaps(assert, actualMap, expectedMap) {\n    assert.equal(actualMap.version, expectedMap.version, \"version mismatch\");\n    assert.equal(actualMap.file, expectedMap.file, \"file mismatch\");\n    assert.equal(actualMap.names.length,\n                 expectedMap.names.length,\n                 \"names length mismatch: \" +\n                   actualMap.names.join(\", \") + \" != \" + expectedMap.names.join(\", \"));\n    for (var i = 0; i < actualMap.names.length; i++) {\n      assert.equal(actualMap.names[i],\n                   expectedMap.names[i],\n                   \"names[\" + i + \"] mismatch: \" +\n                     actualMap.names.join(\", \") + \" != \" + expectedMap.names.join(\", \"));\n    }\n    assert.equal(actualMap.sources.length,\n                 expectedMap.sources.length,\n                 \"sources length mismatch: \" +\n                   actualMap.sources.join(\", \") + \" != \" + expectedMap.sources.join(\", \"));\n    for (var i = 0; i < actualMap.sources.length; i++) {\n      assert.equal(actualMap.sources[i],\n                   expectedMap.sources[i],\n                   \"sources[\" + i + \"] length mismatch: \" +\n                   actualMap.sources.join(\", \") + \" != \" + expectedMap.sources.join(\", \"));\n    }\n    assert.equal(actualMap.sourceRoot,\n                 expectedMap.sourceRoot,\n                 \"sourceRoot mismatch: \" +\n                   actualMap.sourceRoot + \" != \" + expectedMap.sourceRoot);\n    assert.equal(actualMap.mappings, expectedMap.mappings,\n                 \"mappings mismatch:\\nActual:   \" + actualMap.mappings + \"\\nExpected: \" + expectedMap.mappings);\n    if (actualMap.sourcesContent) {\n      assert.equal(actualMap.sourcesContent.length,\n                   expectedMap.sourcesContent.length,\n                   \"sourcesContent length mismatch\");\n      for (var i = 0; i < actualMap.sourcesContent.length; i++) {\n        assert.equal(actualMap.sourcesContent[i],\n                     expectedMap.sourcesContent[i],\n                     \"sourcesContent[\" + i + \"] mismatch\");\n      }\n    }\n  }\n  exports.assertEqualMaps = assertEqualMaps;\n\n});\n"]}