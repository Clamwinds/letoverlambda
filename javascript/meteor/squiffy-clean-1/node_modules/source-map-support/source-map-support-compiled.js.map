{"version":3,"sources":["source-map-support.js"],"names":[],"mappings":"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","file":"source-map-support-compiled.js","sourcesContent":["var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\nvar fs = require('fs');\n\n// Only install once if called multiple times\nvar alreadyInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\nfunction isInBrowser() {\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function'));\n}\n\nfunction retrieveFile(path) {\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  try {\n    // Use SJAX if we are in the browser\n    if (isInBrowser()) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, false);\n      xhr.send(null);\n      var contents = xhr.readyState === 4 ? xhr.responseText : null;\n    }\n\n    // Otherwise, use the filesystem\n    else {\n      var contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (e) {\n    var contents = null;\n  }\n\n  return fileContentsCache[path] = contents;\n}\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', source, false);\n    xhr.send(null);\n    fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n    // Support providing a sourceMappingURL via the SourceMap header\n    var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                          xhr.getResponseHeader(\"X-SourceMap\");\n    if (sourceMapHeader) {\n      return sourceMapHeader;\n    }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var match = /\\/\\/[#@]\\s*sourceMappingURL=(.*)\\s*$/m.exec(fileData);\n  if (!match) return null;\n  return match[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nfunction retrieveSourceMap(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  var dataUrlPrefix = \"data:application/json;base64,\";\n  if (sourceMappingURL.slice(0, dataUrlPrefix.length).toLowerCase() == dataUrlPrefix) {\n    // Support source map URL as a data url\n    sourceMapData = new Buffer(sourceMappingURL.slice(dataUrlPrefix.length), \"base64\").toString();\n    sourceMappingURL = null;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL, 'utf8');\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n}\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map) {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame) {\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var position = mapSourcePosition({\n      source: source,\n      line: frame.getLineNumber(),\n      column: frame.getColumnNumber() - 1\n    });\n    frame = cloneCallSite(frame);\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n  return error + stack.map(function(frame) {\n    return '\\n    at ' + wrapCallSite(frame);\n  }).join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs.existsSync(source)) {\n      contents = fs.readFileSync(source, 'utf8');\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return '\\n' + source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\n// Mimic node's stack trace printing when an exception escapes the process\nfunction handleUncaughtExceptions(error) {\n  if (!error || !error.stack) {\n    console.log('Uncaught exception:', error);\n  } else {\n    var source = getErrorSource(error);\n    if (source !== null) console.log(source);\n    console.log(error.stack);\n  }\n  process.exit(1);\n}\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  if (!alreadyInstalled) {\n    alreadyInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n\n    // Configure options\n    options = options || {};\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n\n    // Allow sources to be found by methods other than reading the files\n    // directly from disk.\n    if (options.retrieveFile)\n      retrieveFile = options.retrieveFile;\n\n    // Allow source maps to be found by methods other than reading the files\n    // directly from disk.\n    if (options.retrieveSourceMap)\n      retrieveSourceMap = options.retrieveSourceMap;\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && !isInBrowser()) {\n      process.on('uncaughtException', handleUncaughtExceptions);\n    }\n  }\n};\n"]}