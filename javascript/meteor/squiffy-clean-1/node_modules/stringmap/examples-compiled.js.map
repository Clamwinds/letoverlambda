{"version":3,"sources":["examples.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEvC,IAAI,GAAG,GAAG,IAAI,SAAS,EAAE,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC9B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;AACzB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAAC,AACjC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAAC,AAClC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACvB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AAAC,AACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;AAAC,AAC1B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAAC,AACzB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;;AAAC,AAE5B,IAAI,GAAG,GAAG,IAAI,SAAS,CAAC;AACpB,OAAG,EAAE,CAAC;AACN,OAAG,EAAE,CAAC;CACT,CAAC,CAAC;AACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,UAAS,KAAK,EAAE,GAAG,EAAE;AACrC,WAAO,KAAK,GAAG,KAAK,CAAC;CACxB,CAAC,CAAC;AAAC,AACJ,GAAG,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE,GAAG,EAAE;;CAEhC,CAAC,CAAC;AACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;AAAC,AAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;;AAAC,AAExB,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;AACtB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACf,GAAG,CAAC,OAAO,CAAC;AACR,KAAC,EAAE,EAAE;AACL,KAAC,EAAE,EAAE;CACR,CAAC,CAAC;AACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;AAAC","file":"examples-compiled.js","sourcesContent":["var StringMap = require(\"./stringmap\");\n\nvar sm1 = new StringMap();\nsm1.set(\"greeting\", \"yoyoma\");\nsm1.set(\"check\", true);\nsm1.set(\"__proto__\", -1);\nconsole.log(sm1.has(\"greeting\")); // true\nconsole.log(sm1.get(\"__proto__\")); // -1\nsm1.remove(\"greeting\");\nconsole.log(sm1.keys()); // [ 'check', '__proto__' ]\nconsole.log(sm1.values()); // [ true, -1 ]\nconsole.log(sm1.items()); // [ [ 'check', true ], [ '__proto__', -1 ] ]\nconsole.log(sm1.toString()); // {\"check\":true,\"__proto__\":-1}\n\nvar sm2 = new StringMap({\n    one: 1,\n    two: 2,\n});\nconsole.log(sm2.map(function(value, key) {\n    return value * value;\n})); // [ 1, 4 ]\nsm2.forEach(function(value, key) {\n    // ...\n});\nconsole.log(sm2.isEmpty()); // false\nconsole.log(sm2.size()); // 2\n\nvar sm3 = sm1.clone();\nsm3.merge(sm2);\nsm3.setMany({\n    a: {},\n    b: [],\n});\nconsole.log(sm3.toString()); // {\"check\":true,\"one\":1,\"two\":2,\"a\":{},\"b\":[],\"__proto__\":-1}\n"]}