;(function () {
  'use strict';

  var Base = require('./base');

  var Auth = Base.extend(function () {
    this._url = this._baseUrl + '/authorize';
  })
    .methods({
      getAuthorizeUrl: function getAuthorizeUrl(opts) {
        (opts = opts || {
          response_type: 'code',
          client_id: null,
          redirect_uri: '',
          state: (Math.random().toString())
        });

        return this.buildUrl(this._url, opts);
      },
      getAccessToken: function getAccessToken(code, fn) {
        if (!code) {
          throw new Error('`code` argument missing from `Auth.getAccessToken` method.');
        }

        if (!fn) {
          throw new Error('missing `callback` in `Auth.getAccessToken` method.');
        }

        this.request(this._getAccessTokenUrl(), 'POST', {
          grant_type: 'authorization_code',
          code: code
        }, fn);

      },
      refreshToken: function refreshToken(token, fn) {
        if (!token) {
          throw new Error('`token` argument missing from `Auth.refreshToken` method.');
        }

        if (!fn) {
          throw new Error('missing `callback` in `Auth.refreshToken` method.');
        }

        this.request(this._getAccessTokenUrl(), 'POST', {
          grant_type: 'refresh_token',
          refresh_token: token
        }, fn);
      },
      _getAccessTokenUrl: function _getAccessTokenCallUrl() {
        return this._baseUrl + '/grant';
      }
    });

    module.exports = Auth;
}());
