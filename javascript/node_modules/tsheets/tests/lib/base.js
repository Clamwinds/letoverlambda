var expect = require('chai').expect;
var Base = require('../../lib/base');

describe('#lib', function() {

  describe('#base', function() {

    it('should be exported object', function() {
      expect(Base).to.be.an.instanceOf(Object);
    });

    it('should be able to create new object', function() {
      expect(new Base).to.be.an.instanceOf(Base);
    });

    describe('#methods', function() {

      var base;
      before(function() {
        base = new Base;
      });

      describe('`buildUrl`', function() {

        it('should exists', function() {
          expect(base.buildUrl).to.be.ok;
        });

        it('should be an Error if `url` not provided', function () {
          try {
            var _url = base.buildUrl();
          } catch (e) {
            expect(e).to.be.an.instanceOf(Error);
          }
        });

        it('should be an `Error` if `obj` not provided', function () {
          try {
            var _url = base.buildUrl('hello');
          } catch (e) {
            expect(e).to.be.an.instanceOf(Error);
          }
        });

        it('should build url', function() {
          var _url = base.buildUrl('http://somewhere.now', {live: 'far', why: 'away'})
          expect(_url).to.equals('http://somewhere.now?live=far&why=away')
        });
      });
    })
  });
})
