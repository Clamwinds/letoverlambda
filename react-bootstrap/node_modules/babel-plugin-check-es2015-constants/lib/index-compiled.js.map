{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC,SAAS,CAAC,CAAC;;AAE5E,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;AAE1B,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,KAAK,EAAE;AACpC,MAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;;AAE9B,SAAO;AACL,WAAO,EAAE;AACP,WAAK,EAAE,SAAS,KAAK,CAAC,KAAK,EAAE;AAC3B,YAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;AAExB,aAAK,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE;AAChC,cAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpC,cAAI,OAAO,CAAC,IAAI,KAAK,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE,SAAS;;AAEpE,eAAK,IAAI,SAAS,GAAI,OAAO,CAAC,kBAAkB,YAAA,AAAa,EAAE,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,SAAS,GAAG,QAAQ,GAAG,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI;AACxK,gBAAI,IAAI,CAAC;;AAET,gBAAI,QAAQ,EAAE;AACZ,kBAAI,EAAE,IAAI,SAAS,CAAC,MAAM,EAAE,MAAM;AAClC,kBAAI,GAAG,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;aACxB,MAAM;AACL,gBAAE,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,kBAAI,EAAE,CAAC,IAAI,EAAE,MAAM;AACnB,kBAAI,GAAG,EAAE,CAAC,KAAK,CAAC;aACjB;;AAED,gBAAI,SAAS,GAAG,IAAI,CAAC;;AAErB,kBAAM,SAAS,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;WACtE;SACF;OACF;KACF;GACF,CAAC;CACH,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nexports.__esModule = true;\n\nexports[\"default\"] = function (_ref2) {\n  var messages = _ref2.messages;\n\n  return {\n    visitor: {\n      Scope: function Scope(_ref3) {\n        var scope = _ref3.scope;\n\n        for (var _name in scope.bindings) {\n          var binding = scope.bindings[_name];\n          if (binding.kind !== \"const\" && binding.kind !== \"module\") continue;\n\n          for (var _iterator = (binding.constantViolations /*: Array*/), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var violation = _ref;\n\n            throw violation.buildCodeFrameError(messages.get(\"readOnly\", _name));\n          }\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}