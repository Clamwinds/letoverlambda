{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nexports.__esModule = true;\n\nexports[\"default\"] = function (_ref4) {\n  var t = _ref4.types;\n\n  function isString(node) {\n    return t.isLiteral(node) && typeof node.value === \"string\";\n  }\n\n  function buildBinaryExpression(left, right) {\n    return t.binaryExpression(\"+\", left, right);\n  }\n\n  return {\n    visitor: {\n      TaggedTemplateExpression: function TaggedTemplateExpression(path, state) {\n        var node = path.node;\n\n        var quasi = node.quasi;\n        var args = [];\n\n        var strings = [];\n        var raw = [];\n\n        for (var _iterator = (quasi.quasis /*: Array*/), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var elem = _ref;\n\n          strings.push(t.stringLiteral(elem.value.cooked));\n          raw.push(t.stringLiteral(elem.value.raw));\n        }\n\n        strings = t.arrayExpression(strings);\n        raw = t.arrayExpression(raw);\n\n        var templateName = \"taggedTemplateLiteral\";\n        if (state.opts.loose) templateName += \"Loose\";\n\n        var templateObject = state.file.addTemplateObject(templateName, strings, raw);\n        args.push(templateObject);\n\n        args = args.concat(quasi.expressions);\n\n        path.replaceWith(t.callExpression(node.tag, args));\n      },\n\n      TemplateLiteral: function TemplateLiteral(path, state) {\n        var nodes /*: Array<Object>*/ = [];\n\n        var expressions = path.get(\"expressions\");\n\n        for (var _iterator2 = (path.node.quasis /*: Array*/), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var elem = _ref2;\n\n          nodes.push(t.stringLiteral(elem.value.cooked));\n\n          var expr = expressions.shift();\n          if (expr) {\n            if (state.opts.spec && !expr.isBaseType(\"string\") && !expr.isBaseType(\"number\")) {\n              nodes.push(t.callExpression(t.identifier(\"String\"), [expr.node]));\n            } else {\n              nodes.push(expr.node);\n            }\n          }\n        }\n\n        // filter out empty string literals\n        nodes = nodes.filter(function (n) {\n          return !t.isLiteral(n, { value: \"\" });\n        });\n\n        // since `+` is left-to-right associative\n        // ensure the first node is a string if first/second isn't\n        if (!isString(nodes[0]) && !isString(nodes[1])) {\n          nodes.unshift(t.stringLiteral(\"\"));\n        }\n\n        if (nodes.length > 1) {\n          var root = buildBinaryExpression(nodes.shift(), nodes.shift());\n\n          for (var _iterator3 = nodes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n            var _ref3;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref3 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref3 = _i3.value;\n            }\n\n            var node = _ref3;\n\n            root = buildBinaryExpression(root, node);\n          }\n\n          path.replaceWith(root);\n        } else {\n          path.replaceWith(nodes[0]);\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}