{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC,SAAS,CAAC,CAAC;;AAE5E,IAAI,uBAAuB,GAAG,OAAO,CAAC,gDAAgD,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEnG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;AAE1B,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEzC,IAAI,CAAC,GAAG,uBAAuB,CAAC,WAAW,CAAC,CAAC;;AAE7C,OAAO,CAAC,SAAS,CAAC,GAAG,YAAY;AAC/B,SAAO;AACL,WAAO,EAAE;AACP,aAAO,EAAE,SAAS,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE;AACrC,YAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE,OAAO;;AAExC,YAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;AAErB,aAAK,IAAI,SAAS,GAAI,IAAI,CAAC,UAAU,oBAAA,AAAqB,EAAE,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,SAAS,GAAG,QAAQ,GAAG,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI;AACrK,cAAI,IAAI,CAAC;;AAET,cAAI,QAAQ,EAAE;AACZ,gBAAI,EAAE,IAAI,SAAS,CAAC,MAAM,EAAE,MAAM;AAClC,gBAAI,GAAG,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;WACxB,MAAM;AACL,cAAE,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,gBAAI,EAAE,CAAC,IAAI,EAAE,MAAM;AACnB,gBAAI,GAAG,EAAE,CAAC,KAAK,CAAC;WACjB;;AAED,cAAI,SAAS,GAAG,IAAI,CAAC;;AAErB,cAAI,SAAS,CAAC,KAAK,CAAC,KAAK,KAAK,YAAY,EAAE,OAAO;SACpD;;AAED,YAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;OACpF;KACF;GACF,CAAC;CACH,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nexports[\"default\"] = function () {\n  return {\n    visitor: {\n      Program: function Program(path, state) {\n        if (state.opts.strict === false) return;\n\n        var node = path.node;\n\n        for (var _iterator = (node.directives /*: Array<Object>*/), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var directive = _ref;\n\n          if (directive.value.value === \"use strict\") return;\n        }\n\n        path.unshiftContainer(\"directives\", t.directive(t.directiveLiteral(\"use strict\")));\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}