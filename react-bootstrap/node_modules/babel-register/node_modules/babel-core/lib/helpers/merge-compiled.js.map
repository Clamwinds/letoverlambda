{"version":3,"sources":["merge.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC,SAAS,CAAC,CAAC;;AAE5E,IAAI,sBAAsB,GAAG,OAAO,CAAC,+CAA+C,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEjG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;AAE1B,IAAI,kBAAkB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAExD,IAAI,mBAAmB,GAAG,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;;AAErE,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,qBAAI,EAAmB,oBAAG,eAAiC;AACxF,MAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,OAAO;;AAE1B,SAAO,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;AAC/D,QAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;AACzB,UAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;AAE1B,WAAK,IAAI,SAAS,GAAG,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,SAAS,GAAG,QAAQ,GAAG,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI;AACjI,YAAI,IAAI,CAAC;;AAET,YAAI,QAAQ,EAAE;AACZ,cAAI,EAAE,IAAI,SAAS,CAAC,MAAM,EAAE,MAAM;AAClC,cAAI,GAAG,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;SACxB,MAAM;AACL,YAAE,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,cAAI,EAAE,CAAC,IAAI,EAAE,MAAM;AACnB,cAAI,GAAG,EAAE,CAAC,KAAK,CAAC;SACjB;;AAED,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAC9B,kBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;OACF;;AAED,aAAO,QAAQ,CAAC;KACjB;GACF,CAAC,CAAC;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"merge-compiled.js","sourcesContent":["/* @flow */\n\n\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _lodashObjectMerge = require(\"lodash/object/merge\");\n\nvar _lodashObjectMerge2 = _interopRequireDefault(_lodashObjectMerge);\n\nexports[\"default\"] = function (dest /*:: ?: Object*/, src /*:: ?: Object*/) /*: ?Object*/ {\n  if (!dest || !src) return;\n\n  return _lodashObjectMerge2[\"default\"](dest, src, function (a, b) {\n    if (b && Array.isArray(a)) {\n      var newArray = b.slice(0);\n\n      for (var _iterator = a, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var item = _ref;\n\n        if (newArray.indexOf(item) < 0) {\n          newArray.push(item);\n        }\n      }\n\n      return newArray;\n    }\n  });\n};\n\nmodule.exports = exports[\"default\"];"]}