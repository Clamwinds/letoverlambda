{"version":3,"sources":["build-external-helpers.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,uBAAuB,GAAG,OAAO,CAAC,gDAAgD,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEnG,IAAI,sBAAsB,GAAG,OAAO,CAAC,+CAA+C,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEjG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;;AAE1B,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAE7C,IAAI,OAAO,GAAG,uBAAuB,CAAC,aAAa,CAAC,CAAC;;AAErD,IAAI,eAAe,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAEjD,IAAI,gBAAgB,GAAG,sBAAsB,CAAC,eAAe,CAAC,CAAC;;AAE/D,IAAI,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAE/C,IAAI,QAAQ,GAAG,uBAAuB,CAAC,cAAc,CAAC,CAAC;;AAEvD,IAAI,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAE/C,IAAI,eAAe,GAAG,sBAAsB,CAAC,cAAc,CAAC,CAAC;;AAE7D,IAAI,qBAAqB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;;AAE9D,IAAI,sBAAsB,GAAG,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;;AAE3E,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEzC,IAAI,CAAC,GAAG,uBAAuB,CAAC,WAAW,CAAC,CAAC;;AAE7C,IAAI,eAAe,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,uVAAuV,CAAC,CAAC;;AAE1Y,SAAS,WAAW,CAAC,SAAS,EAAE,OAAO,EAAE;AACvC,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAI,SAAS,GAAG,CAAC,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7F,MAAI,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExG,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvL,SAAO,CAAC,IAAI,CAAC,CAAC;;AAEd,SAAO,IAAI,CAAC;CACb;;AAED,SAAS,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE;AACpC,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnG,SAAO,CAAC,IAAI,CAAC,CAAC;;AAEd,SAAO,CAAC,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC;AAChC,sBAAkB,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC;AAC1C,qBAAiB,EAAE,CAAC,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;AAC3H,oBAAgB,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;AACzC,iBAAa,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;AAC9D,gBAAY,EAAE,IAAI;AAClB,YAAQ,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;GAC/B,CAAC,CAAC,CAAC,CAAC;CACN;;AAED,SAAS,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE;AACpC,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnG,SAAO,CAAC,IAAI,CAAC,CAAC;AACd,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;AAC5C,SAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;CACxB;;AAED,SAAS,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;AAChD,wBAAsB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,IAAI,EAAE;AAC9D,QAAI,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO;;AAErD,QAAI,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAI,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;GACtH,CAAC,CAAC;CACJ;;AAED,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,iCAAS,EAA0B;AAChE,MAAI,yCAAU,GAAkC,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAE9H,MAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;;AAE7C,MAAI,OAAO,GAAG,SAAS,OAAO,CAAC,IAAI,EAAE;AACnC,WAAO,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;GACjD,CAAC;;AAEF,MAAI,IAAI,GAAG,SAAS,CAAC;;AAErB,MAAI,KAAK,GAAG,CAAC;AACX,UAAM,EAAE,WAAW;AACnB,OAAG,EAAE,QAAQ;AACb,SAAK,EAAE,QAAQ;IAChB,CAAE,UAAU,CAAC,CAAC;;AAEf,MAAI,KAAK,EAAE;AACT,QAAI,GAAG,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;GAClC,MAAM;AACL,UAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAC,CAAC;GACpE;;AAED,SAAO,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;CAC/C,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"build-external-helpers-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _babelHelpers = require(\"babel-helpers\");\n\nvar helpers = _interopRequireWildcard(_babelHelpers);\n\nvar _babelGenerator = require(\"babel-generator\");\n\nvar _babelGenerator2 = _interopRequireDefault(_babelGenerator);\n\nvar _babelMessages = require(\"babel-messages\");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _lodashCollectionEach = require(\"lodash/collection/each\");\n\nvar _lodashCollectionEach2 = _interopRequireDefault(_lodashCollectionEach);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar buildUmdWrapper = _babelTemplate2[\"default\"](\"\\n  (function (root, factory) {\\n    if (typeof define === \\\"function\\\" && define.amd) {\\n      define(AMD_ARGUMENTS, factory);\\n    } else if (typeof exports === \\\"object\\\") {\\n      factory(COMMON_ARGUMENTS);\\n    } else {\\n      factory(BROWSER_ARGUMENTS);\\n    }\\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\\n    FACTORY_BODY\\n  });\\n\");\n\nfunction buildGlobal(namespace, builder) {\n  var body = [];\n  var container = t.functionExpression(null, [t.identifier(\"global\")], t.blockStatement(body));\n  var tree = t.program([t.expressionStatement(t.callExpression(container, [helpers.get(\"selfGlobal\")]))]);\n\n  body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(namespace, t.assignmentExpression(\"=\", t.memberExpression(t.identifier(\"global\"), namespace), t.objectExpression([])))]));\n\n  builder(body);\n\n  return tree;\n}\n\nfunction buildUmd(namespace, builder) {\n  var body = [];\n  body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(namespace, t.identifier(\"global\"))]));\n\n  builder(body);\n\n  return t.program([buildUmdWrapper({\n    FACTORY_PARAMETERS: t.identifier(\"global\"),\n    BROWSER_ARGUMENTS: t.assignmentExpression(\"=\", t.memberExpression(t.identifier(\"root\"), namespace), t.objectExpression([])),\n    COMMON_ARGUMENTS: t.identifier(\"exports\"),\n    AMD_ARGUMENTS: t.arrayExpression([t.stringLiteral(\"exports\")]),\n    FACTORY_BODY: body,\n    UMD_ROOT: t.identifier(\"this\")\n  })]);\n}\n\nfunction buildVar(namespace, builder) {\n  var body = [];\n  body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(namespace, t.objectExpression([]))]));\n  builder(body);\n  body.push(t.expressionStatement(namespace));\n  return t.program(body);\n}\n\nfunction buildHelpers(body, namespace, whitelist) {\n  _lodashCollectionEach2[\"default\"](helpers.list, function (name) {\n    if (whitelist && whitelist.indexOf(name) < 0) return;\n\n    var key = t.identifier(name);\n    body.push(t.expressionStatement(t.assignmentExpression(\"=\", t.memberExpression(namespace, key), helpers.get(name))));\n  });\n}\n\nexports[\"default\"] = function (whitelist /*:: ?: Array<string>*/) {\n  var outputType /*: \"global\" | \"umd\" | \"var\"*/ = arguments.length <= 1 || arguments[1] === undefined ? \"global\" : arguments[1];\n\n  var namespace = t.identifier(\"babelHelpers\");\n\n  var builder = function builder(body) {\n    return buildHelpers(body, namespace, whitelist);\n  };\n\n  var tree = undefined;\n\n  var build = ({\n    global: buildGlobal,\n    umd: buildUmd,\n    \"var\": buildVar\n  })[outputType];\n\n  if (build) {\n    tree = build(namespace, builder);\n  } else {\n    throw new Error(messages.get(\"unsupportedOutputType\", outputType));\n  }\n\n  return _babelGenerator2[\"default\"](tree).code;\n};\n\nmodule.exports = exports[\"default\"];"]}