{"version":3,"sources":["config.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,MAAM,CAAC,OAAO,GAAG;AACf,UAAQ,EAAE;AACR,QAAI,EAAE,UAAU;AAChB,eAAW,EAAE,wFAAwF;AACrG,aAAS,EAAE,SAAS;AACpB,aAAS,EAAE,GAAG;GACf;;AAED,kBAAgB,EAAE;AAChB,UAAM,EAAE,IAAI;AACZ,QAAI,EAAE,QAAQ;GACf;;AAED,gBAAc,EAAE;AACd,UAAM,EAAE,IAAI;GACb;;AAED,KAAG,EAAE;AACH,UAAM,EAAE,IAAI;AACZ,aAAS,EAAE,EAAE;GACd;;AAED,MAAI,EAAE;AACJ,eAAW,EAAE,EAAE;AACf,UAAM,EAAE,IAAI;GACb;;AAED,aAAW,EAAE;AACX,QAAI,EAAE,SAAS;AACf,aAAS,EAAE,KAAK;AAChB,eAAW,EAAE,uDAAuD;GACrE;;AAED,eAAa,EAAE;AACb,eAAW,EAAE,wEAAwE;AACrF,QAAI,EAAE,SAAS;AACf,aAAS,EAAE,IAAI;GAChB;;AAED,6BAA2B,EAAE;AAC3B,QAAI,EAAE,SAAS;AACf,aAAS,EAAE,KAAK;AAChB,UAAM,EAAE,IAAI;GACb;;AAED,SAAO,EAAE;AACP,QAAI,EAAE,MAAM;AACZ,eAAW,EAAE,EAAE;AACf,aAAS,EAAE,EAAE;GACd;;AAED,SAAO,EAAE;AACP,QAAI,EAAE,MAAM;AACZ,aAAS,EAAE,EAAE;AACb,eAAW,EAAE,EAAE;GAChB;;AAED,QAAM,EAAE;AACN,QAAI,EAAE,MAAM;AACZ,eAAW,EAAE,uCAAuC;AACpD,aAAS,EAAE,EAAE;GACd;;AAED,MAAI,EAAE;AACJ,QAAI,EAAE,MAAM;AACZ,eAAW,EAAE,wCAAwC;GACtD;;AAED,MAAI,EAAE;AACJ,UAAM,EAAE,IAAI;AACZ,aAAS,EAAE,IAAI;AACf,QAAI,EAAE,SAAS;GAChB;;AAED,UAAQ,EAAE;AACR,UAAM,EAAE,IAAI;AACZ,aAAS,EAAE,IAAI;AACf,QAAI,EAAE,SAAS;GAChB;;AAED,KAAG,EAAE;AACH,UAAM,EAAE,IAAI;AACZ,aAAS,EAAE,IAAI;AACf,QAAI,EAAE,SAAS;GAChB;;AAED,WAAS,EAAE;AACT,QAAI,EAAE,QAAQ;AACd,UAAM,EAAE,IAAI;GACb;;AAED,UAAQ,EAAE;AACR,QAAI,EAAE,SAAS;AACf,aAAS,EAAE,IAAI;AACf,eAAW,EAAE,sDAAsD;GACpE;;AAED,oBAAkB,EAAE;AAClB,UAAM,EAAE,IAAI;AACZ,eAAW,EAAE,qHAAqH;GACnI;;AAED,SAAO,EAAE;AACP,QAAI,EAAE,eAAe;AACrB,aAAS,EAAE,MAAM;AACjB,eAAW,EAAE,yFAAyF;GACvG;;AAED,UAAQ,EAAE;AACR,QAAI,EAAE,SAAS;AACf,aAAS,EAAE,KAAK;AAChB,eAAW,EAAE,+CAA+C;GAC7D;;AAED,WAAS,EAAE;AACT,SAAK,EAAE,YAAY;AACnB,UAAM,EAAE,IAAI;GACb;;AAED,YAAU,EAAE;AACV,QAAI,EAAE,eAAe;AACrB,eAAW,EAAE,qBAAqB;AAClC,aAAS,EAAE,KAAK;AAChB,aAAS,EAAE,GAAG;GACf;;AAED,iBAAe,EAAE;AACf,QAAI,EAAE,QAAQ;AACd,eAAW,EAAE,mCAAmC;GACjD;;AAED,gBAAc,EAAE;AACd,QAAI,EAAE,QAAQ;AACd,eAAW,EAAE,yCAAyC;GACvD;;AAED,YAAU,EAAE;AACV,QAAI,EAAE,UAAU;AAChB,eAAW,EAAE,8CAA8C;GAC5D;;AAED,SAAO,EAAE;AACP,eAAW,EAAE,2DAA2D;AACxE,QAAI,EAAE,SAAS;AACf,aAAS,EAAE,IAAI;GAChB;;AAED,YAAU,EAAE;AACV,eAAW,EAAE,EAAE;AACf,aAAS,EAAE,QAAQ;GACpB;;AAED,wBAAsB,EAAE;AACtB,QAAI,EAAE,QAAQ;AACd,eAAW,EAAE,mDAAmD;GACjE;;AAED,uBAAqB,EAAE;AACrB,QAAI,EAAE,QAAQ;AACd,eAAW,EAAE,kDAAkD;GAChE;;AAED,qBAAmB,EAAE;AACnB,UAAM,EAAE,IAAI;GACb;;AAED,aAAW,EAAE;AACX,UAAM,EAAE,IAAI;GACb;;AAED,YAAU,EAAE;AACV,QAAI,EAAE,UAAU;AAChB,eAAW,EAAE,yGAAyG;GACvH;;AAED,WAAS,EAAE;AACT,QAAI,EAAE,SAAS;AACf,aAAS,EAAE,KAAK;AAChB,aAAS,EAAE,GAAG;AACd,eAAW,EAAE,mCAAmC;GACjD;;AAED,UAAQ,EAAE;AACR,eAAW,EAAE,sCAAsC;AACnD,QAAI,EAAE,QAAQ;GACf;CACF,CAAC","file":"config-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = {\n  filename: {\n    type: \"filename\",\n    description: \"filename to use when reading from stdin - this will be used in source-maps, errors etc\",\n    \"default\": \"unknown\",\n    shorthand: \"f\"\n  },\n\n  filenameRelative: {\n    hidden: true,\n    type: \"string\"\n  },\n\n  inputSourceMap: {\n    hidden: true\n  },\n\n  env: {\n    hidden: true,\n    \"default\": {}\n  },\n\n  mode: {\n    description: \"\",\n    hidden: true\n  },\n\n  retainLines: {\n    type: \"boolean\",\n    \"default\": false,\n    description: \"retain line numbers - will result in really ugly code\"\n  },\n\n  highlightCode: {\n    description: \"enable/disable ANSI syntax highlighting of code frames (on by default)\",\n    type: \"boolean\",\n    \"default\": true\n  },\n\n  suppressDeprecationMessages: {\n    type: \"boolean\",\n    \"default\": false,\n    hidden: true\n  },\n\n  presets: {\n    type: \"list\",\n    description: \"\",\n    \"default\": []\n  },\n\n  plugins: {\n    type: \"list\",\n    \"default\": [],\n    description: \"\"\n  },\n\n  ignore: {\n    type: \"list\",\n    description: \"list of glob paths to **not** compile\",\n    \"default\": []\n  },\n\n  only: {\n    type: \"list\",\n    description: \"list of glob paths to **only** compile\"\n  },\n\n  code: {\n    hidden: true,\n    \"default\": true,\n    type: \"boolean\"\n  },\n\n  metadata: {\n    hidden: true,\n    \"default\": true,\n    type: \"boolean\"\n  },\n\n  ast: {\n    hidden: true,\n    \"default\": true,\n    type: \"boolean\"\n  },\n\n  \"extends\": {\n    type: \"string\",\n    hidden: true\n  },\n\n  comments: {\n    type: \"boolean\",\n    \"default\": true,\n    description: \"write comments to generated output (true by default)\"\n  },\n\n  shouldPrintComment: {\n    hidden: true,\n    description: \"optional callback to control whether a comment should be inserted, when this is used the comments option is ignored\"\n  },\n\n  compact: {\n    type: \"booleanString\",\n    \"default\": \"auto\",\n    description: \"do not include superfluous whitespace characters and line terminators [true|false|auto]\"\n  },\n\n  minified: {\n    type: \"boolean\",\n    \"default\": false,\n    description: \"save as much bytes when printing [true|false]\"\n  },\n\n  sourceMap: {\n    alias: \"sourceMaps\",\n    hidden: true\n  },\n\n  sourceMaps: {\n    type: \"booleanString\",\n    description: \"[true|false|inline]\",\n    \"default\": false,\n    shorthand: \"s\"\n  },\n\n  sourceMapTarget: {\n    type: \"string\",\n    description: \"set `file` on returned source map\"\n  },\n\n  sourceFileName: {\n    type: \"string\",\n    description: \"set `sources[0]` on returned source map\"\n  },\n\n  sourceRoot: {\n    type: \"filename\",\n    description: \"the root from which all sources are relative\"\n  },\n\n  babelrc: {\n    description: \"Whether or not to look up .babelrc and .babelignore files\",\n    type: \"boolean\",\n    \"default\": true\n  },\n\n  sourceType: {\n    description: \"\",\n    \"default\": \"module\"\n  },\n\n  auxiliaryCommentBefore: {\n    type: \"string\",\n    description: \"print a comment before any injected non-user code\"\n  },\n\n  auxiliaryCommentAfter: {\n    type: \"string\",\n    description: \"print a comment after any injected non-user code\"\n  },\n\n  resolveModuleSource: {\n    hidden: true\n  },\n\n  getModuleId: {\n    hidden: true\n  },\n\n  moduleRoot: {\n    type: \"filename\",\n    description: \"optional prefix for the AMD module formatter that will be prepend to the filename on module definitions\"\n  },\n\n  moduleIds: {\n    type: \"boolean\",\n    \"default\": false,\n    shorthand: \"M\",\n    description: \"insert an explicit id for modules\"\n  },\n\n  moduleId: {\n    description: \"specify a custom name for module ids\",\n    type: \"string\"\n  }\n};"]}