{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,uBAAuB,GAAG,OAAO,CAAC,gDAAgD,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEnG,IAAI,sBAAsB,GAAG,OAAO,CAAC,+CAA+C,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEjG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAC1B,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;;AAE5C,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAEpC,IAAI,OAAO,GAAG,uBAAuB,CAAC,QAAQ,CAAC,CAAC;;AAEhD,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAElC,IAAI,QAAQ,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;;AAE/C,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;;AAErC,SAAS,gBAAgB,eAAgB;AACvC,MAAI,oBAAO,GAAgB,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAEnG,OAAK,IAAI,GAAG,IAAI,OAAO,EAAE;AACvB,QAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACvB,QAAI,GAAG,IAAI,IAAI,EAAE,SAAS;;AAE1B,QAAI,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;AACnC,QAAI,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3D,QAAI,CAAC,GAAG,EAAE,SAAS;;AAEnB,QAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC/B,QAAI,MAAM,EAAE,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;;AAE9B,WAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;GACpB;;AAED,SAAO,OAAO,CAAC;CAChB","file":"index-compiled.js","sourcesContent":["/* @flow */\n\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nexports.__esModule = true;\nexports.normaliseOptions = normaliseOptions;\n\nvar _parsers = require(\"./parsers\");\n\nvar parsers = _interopRequireWildcard(_parsers);\n\nvar _config = require(\"./config\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nexports.config = _config2[\"default\"];\n\nfunction normaliseOptions() /*: Object*/ {\n  var options /*: Object*/ = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  for (var key in options) {\n    var val = options[key];\n    if (val == null) continue;\n\n    var opt = _config2[\"default\"][key];\n    if (opt && opt.alias) opt = _config2[\"default\"][opt.alias];\n    if (!opt) continue;\n\n    var parser = parsers[opt.type];\n    if (parser) val = parser(val);\n\n    options[key] = val;\n  }\n\n  return options;\n}"]}