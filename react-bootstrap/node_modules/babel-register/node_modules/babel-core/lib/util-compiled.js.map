{"version":3,"sources":["util.js"],"names":[],"mappings":"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","file":"util-compiled.js","sourcesContent":["/* @noflow */\n\n\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nexports.__esModule = true;\nexports.canCompile = canCompile;\nexports.list = list;\nexports.regexify = regexify;\nexports.arrayify = arrayify;\nexports.booleanify = booleanify;\nexports.shouldIgnore = shouldIgnore;\n\nvar _lodashStringEscapeRegExp = require(\"lodash/string/escapeRegExp\");\n\nvar _lodashStringEscapeRegExp2 = _interopRequireDefault(_lodashStringEscapeRegExp);\n\nvar _lodashStringStartsWith = require(\"lodash/string/startsWith\");\n\nvar _lodashStringStartsWith2 = _interopRequireDefault(_lodashStringStartsWith);\n\nvar _lodashLangIsBoolean = require(\"lodash/lang/isBoolean\");\n\nvar _lodashLangIsBoolean2 = _interopRequireDefault(_lodashLangIsBoolean);\n\nvar _minimatch = require(\"minimatch\");\n\nvar _minimatch2 = _interopRequireDefault(_minimatch);\n\nvar _lodashCollectionContains = require(\"lodash/collection/contains\");\n\nvar _lodashCollectionContains2 = _interopRequireDefault(_lodashCollectionContains);\n\nvar _lodashLangIsString = require(\"lodash/lang/isString\");\n\nvar _lodashLangIsString2 = _interopRequireDefault(_lodashLangIsString);\n\nvar _lodashLangIsRegExp = require(\"lodash/lang/isRegExp\");\n\nvar _lodashLangIsRegExp2 = _interopRequireDefault(_lodashLangIsRegExp);\n\nvar _path = require(\"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _slash = require(\"slash\");\n\nvar _slash2 = _interopRequireDefault(_slash);\n\nvar _util = require(\"util\");\n\nexports.inherits = _util.inherits;\nexports.inspect = _util.inspect;\n\n/**\n * Test if a filename ends with a compilable extension.\n */\n\nfunction canCompile(filename /*: string*/, altExts /*:: ?: Array<string>*/) {\n  var exts = altExts || canCompile.EXTENSIONS;\n  var ext = _path2[\"default\"].extname(filename);\n  return _lodashCollectionContains2[\"default\"](exts, ext);\n}\n\n/**\n * Default set of compilable extensions.\n */\n\ncanCompile.EXTENSIONS = [\".js\", \".jsx\", \".es6\", \".es\"];\n\n/**\n * Create an array from any value, splitting strings by \",\".\n */\n\nfunction list(val /*:: ?: string*/) /*: Array<string>*/ {\n  if (!val) {\n    return [];\n  } else if (Array.isArray(val)) {\n    return val;\n  } else if (typeof val === \"string\") {\n    return val.split(\",\");\n  } else {\n    return [val];\n  }\n}\n\n/**\n * Create a RegExp from a string, array, or regexp.\n */\n\nfunction regexify(val /*: any*/) /*: RegExp*/ {\n  if (!val) {\n    return new RegExp(/.^/);\n  }\n\n  if (Array.isArray(val)) {\n    val = new RegExp(val.map(_lodashStringEscapeRegExp2[\"default\"]).join(\"|\"), \"i\");\n  }\n\n  if (typeof val === \"string\") {\n    // normalise path separators\n    val = _slash2[\"default\"](val);\n\n    // remove starting wildcards or relative separator if present\n    if (_lodashStringStartsWith2[\"default\"](val, \"./\") || _lodashStringStartsWith2[\"default\"](val, \"*/\")) val = val.slice(2);\n    if (_lodashStringStartsWith2[\"default\"](val, \"**/\")) val = val.slice(3);\n\n    var regex = _minimatch2[\"default\"].makeRe(val, { nocase: true });\n    return new RegExp(regex.source.slice(1, -1), \"i\");\n  }\n\n  if (_lodashLangIsRegExp2[\"default\"](val)) {\n    return val;\n  }\n\n  throw new TypeError(\"illegal type for regexify\");\n}\n\n/**\n * Create an array from a boolean, string, or array, mapped by and optional function.\n */\n\nfunction arrayify(val /*: any*/, mapFn /*:: ?: Function*/) /*: Array<any>*/ {\n  if (!val) return [];\n  if (_lodashLangIsBoolean2[\"default\"](val)) return arrayify([val], mapFn);\n  if (_lodashLangIsString2[\"default\"](val)) return arrayify(list(val), mapFn);\n\n  if (Array.isArray(val)) {\n    if (mapFn) val = val.map(mapFn);\n    return val;\n  }\n\n  return [val];\n}\n\n/**\n * Makes boolean-like strings into booleans.\n */\n\nfunction booleanify(val /*: any*/) /*: boolean | any*/ {\n  if (val === \"true\" || val == 1) {\n    return true;\n  }\n\n  if (val === \"false\" || val == 0 || !val) {\n    return false;\n  }\n\n  return val;\n}\n\n/**\n * Tests if a filename should be ignored based on \"ignore\" and \"only\" options.\n */\n\nfunction shouldIgnore(filename /*: string*/, ignore /*: Array<RegExp | Function>*/, only /*:: ?: Array<RegExp | Function>*/) /*: boolean*/ {\n  if (ignore === undefined) ignore = [];\n\n  filename = _slash2[\"default\"](filename);\n\n  if (only) {\n    for (var _iterator = only, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pattern = _ref;\n\n      if (_shouldIgnore(pattern, filename)) return false;\n    }\n    return true;\n  } else if (ignore.length) {\n    for (var _iterator2 = ignore, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var pattern = _ref2;\n\n      if (_shouldIgnore(pattern, filename)) return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns result of calling function with filename if pattern is a function.\n * Otherwise returns result of matching pattern Regex with filename.\n */\n\nfunction _shouldIgnore(pattern /*: Function | RegExp*/, filename /*: string*/) {\n  if (typeof pattern === \"function\") {\n    return pattern(filename);\n  } else {\n    return pattern.test(filename);\n  }\n}"]}