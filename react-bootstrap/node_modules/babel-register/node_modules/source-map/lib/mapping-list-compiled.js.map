{"version":3,"sources":["mapping-list.js"],"names":[],"mappings":";;;;;;;;AAMA;MACM,IAAI;;;;;;;;;QAMC,sBAAsB,GAA/B,SAAS,sBAAsB,CAAC,QAAQ,EAAE,QAAQ,EAAE;;AAElD,UAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC;AACnC,UAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC;AACnC,UAAI,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC;AACvC,UAAI,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC;AACvC,aAAO,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,OAAO,IAAI,OAAO,IACrD,IAAI,CAAC,mCAAmC,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC1E;;;;;;;;QAOQ,WAAW,GAApB,SAAS,WAAW,GAAG;AACrB,UAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACjB,UAAI,CAAC,OAAO,GAAG,IAAI;;AAAC,AAEpB,UAAI,CAAC,KAAK,GAAG,EAAC,aAAa,EAAE,CAAC,CAAC,EAAE,eAAe,EAAE,CAAC,EAAC,CAAC;KACtD;;;;;;;;;AA1BG,QAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;AAkC5B,eAAW,CAAC,SAAS,CAAC,eAAe,GACnC,SAAS,mBAAmB,CAAC,SAAS,EAAE,QAAQ,EAAE;AAChD,UAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KAC1C;;;;;;;AAAC,AAOJ,eAAW,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,eAAe,CAAC,QAAQ,EAAE;AAC7D,UAAI,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;AAChD,YAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;AACtB,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC5B,MAAM;AACL,YAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC5B;KACF;;;;;;;;;;;AAAC,AAWF,eAAW,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,mBAAmB,GAAG;AAC7D,UAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACjB,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;AAC3D,YAAI,CAAC,OAAO,GAAG,IAAI,CAAC;OACrB;AACD,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB,CAAC;;AAEF,WAAO,CAAC,WAAW,GAAG,WAAW,CAAC;;CACnC","file":"mapping-list-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n{\n  var util = require('./util');\n\n  /**\n   * Determine whether mappingB is after mappingA with respect to generated\n   * position.\n   */\n  function generatedPositionAfter(mappingA, mappingB) {\n    // Optimized for most common case\n    var lineA = mappingA.generatedLine;\n    var lineB = mappingB.generatedLine;\n    var columnA = mappingA.generatedColumn;\n    var columnB = mappingB.generatedColumn;\n    return lineB > lineA || lineB == lineA && columnB >= columnA ||\n           util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n  }\n\n  /**\n   * A data structure to provide a sorted view of accumulated mappings in a\n   * performance conscious manner. It trades a neglibable overhead in general\n   * case for a large speedup in case of mappings being added in order.\n   */\n  function MappingList() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  MappingList.prototype.unsortedForEach =\n    function MappingList_forEach(aCallback, aThisArg) {\n      this._array.forEach(aCallback, aThisArg);\n    };\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  MappingList.prototype.add = function MappingList_add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  };\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  MappingList.prototype.toArray = function MappingList_toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  };\n\n  exports.MappingList = MappingList;\n}\n"]}