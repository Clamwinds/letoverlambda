{"version":3,"sources":["cache.js"],"names":[],"mappings":";;;;;QAYgB,IAAI,GAAJ,IAAI;QAmBJ,IAAI,GAAJ,IAAI;QAmBJ,GAAG,GAAH,GAAG;;;;;;;;;;;;;;;;;;;;AA7CnB,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,eAAK,IAAI,sBAAY,aAAa,CAAC,CAAC;AACrF,IAAI,IAAI,GAAG,EAAE;;;;;;AAAC,AAMP,SAAS,IAAI,GAAG;AACrB,MAAI,UAAU,GAAG,EAAE,CAAC;AACpB,MAAI;AACF,cAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;GAC/C,CAAC,OAAO,GAAG,EAAE;AACZ,QAAI,GAAG,CAAC,OAAO,KAAK,uBAAuB,EAAE;AAC3C,SAAG,CAAC,OAAO,GAAG,uCAAuC,CAAC;AACtD,aAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC1B,MAAM;AACL,YAAM,GAAG,CAAC;KACX;GACF;AACD,eAAG,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;CACxC;;;;;;AAAA,AAMM,SAAS,IAAI,GAAG;AACrB,MAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO;;AAE5C,SAAO,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACzB,SAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;AAEvB,MAAI,CAAC,qBAAW,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO;;AAEvC,MAAI;AACF,QAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;GAC9C,CAAC,OAAO,GAAG,EAAE;AACZ,WAAO;GACR;CACF;;;;;;AAAA,AAMM,SAAS,GAAG,GAAG;AACpB,SAAO,IAAI,CAAC;CACb","file":"cache-compiled.js","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport homeOrTmp from \"home-or-tmp\";\nimport pathExists from \"path-exists\";\n\nconst FILENAME = process.env.BABEL_CACHE_PATH || path.join(homeOrTmp, \".babel.json\");\nlet data = {};\n\n/**\n * Write stringified cache to disk.\n */\n\nexport function save() {\n  let serialised = {};\n  try {\n    serialised = JSON.stringify(data, null, \"  \");\n  } catch (err) {\n    if (err.message === \"Invalid string length\") {\n      err.message = \"Cache too large so it's been cleared.\";\n      console.error(err.stack);\n    } else {\n      throw err;\n    }\n  }\n  fs.writeFileSync(FILENAME, serialised);\n}\n\n/**\n * Load cache from disk and parse.\n */\n\nexport function load() {\n  if (process.env.BABEL_DISABLE_CACHE) return;\n\n  process.on(\"exit\", save);\n  process.nextTick(save);\n\n  if (!pathExists.sync(FILENAME)) return;\n\n  try {\n    data = JSON.parse(fs.readFileSync(FILENAME));\n  } catch (err) {\n    return;\n  }\n}\n\n/**\n * Retrieve data from cache.\n */\n\nexport function get() {\n  return data;\n}\n"]}