{"version":3,"sources":["converters.js"],"names":[],"mappings":"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","file":"converters-compiled.js","sourcesContent":["\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nvar _Number$MAX_SAFE_INTEGER = require(\"babel-runtime/core-js/number/max-safe-integer\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\nexports.toComputedKey = toComputedKey;\nexports.toSequenceExpression = toSequenceExpression;\nexports.toKeyAlias = toKeyAlias;\nexports.toIdentifier = toIdentifier;\nexports.toBindingIdentifierName = toBindingIdentifierName;\nexports.toStatement = toStatement;\nexports.toExpression = toExpression;\nexports.toBlock = toBlock;\nexports.valueToNode = valueToNode;\n\nvar _lodashLangIsPlainObject = require(\"lodash/lang/isPlainObject\");\n\nvar _lodashLangIsPlainObject2 = _interopRequireDefault(_lodashLangIsPlainObject);\n\nvar _lodashLangIsNumber = require(\"lodash/lang/isNumber\");\n\nvar _lodashLangIsNumber2 = _interopRequireDefault(_lodashLangIsNumber);\n\nvar _lodashLangIsRegExp = require(\"lodash/lang/isRegExp\");\n\nvar _lodashLangIsRegExp2 = _interopRequireDefault(_lodashLangIsRegExp);\n\nvar _lodashLangIsString = require(\"lodash/lang/isString\");\n\nvar _lodashLangIsString2 = _interopRequireDefault(_lodashLangIsString);\n\nvar _babelTraverse = require(\"babel-traverse\");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\n/*:: import type { Scope } from \"babel-traverse\";*/\nfunction toComputedKey(node /*: Object*/) /*: Object*/ {\n  var key /*: Object*/ = arguments.length <= 1 || arguments[1] === undefined ? node.key || node.property : arguments[1];\n  return (function () {\n    if (!node.computed) {\n      if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n    }\n    return key;\n  })();\n}\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\n\nfunction toSequenceExpression(nodes /*: Array<Object>*/, scope /*: Scope*/) /*: ?Object*/ {\n  if (!nodes || !nodes.length) return;\n\n  var declars = [];\n  var bailed = false;\n\n  var result = convert(nodes);\n  if (bailed) return;\n\n  for (var i = 0; i < declars.length; i++) {\n    scope.push(declars[i]);\n  }\n\n  return result;\n\n  function convert(nodes) {\n    var ensureLastUndefined = false;\n    var exprs = [];\n\n    for (var _iterator = (nodes /*: Array*/), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var node = _ref;\n\n      if (t.isExpression(node)) {\n        exprs.push(node);\n      } else if (t.isExpressionStatement(node)) {\n        exprs.push(node.expression);\n      } else if (t.isVariableDeclaration(node)) {\n        if (node.kind !== \"var\") return bailed = true; // bailed\n\n        for (var _iterator2 = (node.declarations /*: Array*/), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var declar = _ref2;\n\n          var bindings = t.getBindingIdentifiers(declar);\n          for (var key in bindings) {\n            declars.push({\n              kind: node.kind,\n              id: bindings[key]\n            });\n          }\n\n          if (declar.init) {\n            exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\n          }\n        }\n\n        ensureLastUndefined = true;\n        continue;\n      } else if (t.isIfStatement(node)) {\n        var consequent = node.consequent ? convert([node.consequent]) : scope.buildUndefinedNode();\n        var alternate = node.alternate ? convert([node.alternate]) : scope.buildUndefinedNode();\n        if (!consequent || !alternate) return bailed = true;\n\n        exprs.push(t.conditionalExpression(node.test, consequent, alternate));\n      } else if (t.isBlockStatement(node)) {\n        exprs.push(convert(node.body));\n      } else if (t.isEmptyStatement(node)) {\n        // empty statement so ensure the last item is undefined if we're last\n        ensureLastUndefined = true;\n        continue;\n      } else {\n        // bailed, we can't turn this statement into an expression\n        return bailed = true;\n      }\n\n      ensureLastUndefined = false;\n    }\n\n    if (ensureLastUndefined || exprs.length === 0) {\n      exprs.push(scope.buildUndefinedNode());\n    }\n\n    //\n\n    if (exprs.length === 1) {\n      return exprs[0];\n    } else {\n      return t.sequenceExpression(exprs);\n    }\n  }\n}\n\nfunction toKeyAlias(node /*: Object*/) /*: string*/ {\n  var key /*: Object*/ = arguments.length <= 1 || arguments[1] === undefined ? node.key : arguments[1];\n  return (function () {\n    var alias = undefined;\n\n    if (node.kind === \"method\") {\n      return toKeyAlias.increment() + \"\";\n    } else if (t.isIdentifier(key)) {\n      alias = key.name;\n    } else if (t.isStringLiteral(key)) {\n      alias = JSON.stringify(key.value);\n    } else {\n      alias = JSON.stringify(_babelTraverse2[\"default\"].removeProperties(t.cloneDeep(key)));\n    }\n\n    if (node.computed) {\n      alias = \"[\" + alias + \"]\";\n    }\n\n    if (node[\"static\"]) {\n      alias = \"static:\" + alias;\n    }\n\n    return alias;\n  })();\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= _Number$MAX_SAFE_INTEGER) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n\nfunction toIdentifier(name /*: string*/) /*: string*/ {\n  name = name + \"\";\n\n  // replace all non-valid identifiers with dashes\n  name = name.replace(/[^a-zA-Z0-9$_]/g, \"-\");\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!t.isValidIdentifier(name)) {\n    name = \"_\" + name;\n  }\n\n  return name || \"_\";\n}\n\nfunction toBindingIdentifierName(name /*: string*/) /*: string*/ {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}\n\n/**\n * [Please add a description.]\n * @returns {Object|Boolean}\n */\n\nfunction toStatement(node /*: Object*/, ignore /*:: ?: boolean*/) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType = undefined;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if (t.isAssignmentExpression(node)) {\n    return t.expressionStatement(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n}\n\nfunction toExpression(node /*: Object*/) /*: Object*/ {\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  if (t.isClass(node)) {\n    node.type = \"ClassExpression\";\n  } else if (t.isFunction(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (t.isExpression(node)) {\n    return node;\n  } else {\n    throw new Error(\"cannot turn \" + node.type + \" to an expression\");\n  }\n}\n\nfunction toBlock(node, parent /*: Object*/) /*: Object*/ {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (t.isEmptyStatement(node)) {\n    node = [];\n  }\n\n  if (!Array.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n}\n\nfunction valueToNode(value /*: any*/) /*: Object*/ {\n  // undefined\n  if (value === undefined) {\n    return t.identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return t.booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return t.nullLiteral();\n  }\n\n  // strings\n  if (_lodashLangIsString2[\"default\"](value)) {\n    return t.stringLiteral(value);\n  }\n\n  // numbers\n  if (_lodashLangIsNumber2[\"default\"](value)) {\n    return t.numericLiteral(value);\n  }\n\n  // regexes\n  if (_lodashLangIsRegExp2[\"default\"](value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return t.regExpLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return t.arrayExpression(value.map(t.valueToNode));\n  }\n\n  // object\n  if (_lodashLangIsPlainObject2[\"default\"](value)) {\n    var props = [];\n    for (var key in value) {\n      var nodeKey = undefined;\n      if (t.isValidIdentifier(key)) {\n        nodeKey = t.identifier(key);\n      } else {\n        nodeKey = t.stringLiteral(key);\n      }\n      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));\n    }\n    return t.objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"]}