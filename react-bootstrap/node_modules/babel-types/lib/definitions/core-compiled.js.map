{"version":3,"sources":["core.js"],"names":[],"mappings":"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","file":"core-compiled.js","sourcesContent":["/* @flow */\n\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _index = require(\"../index\");\n\nvar t = _interopRequireWildcard(_index);\n\nvar _constants = require(\"../constants\");\n\nvar _index2 = require(\"./index\");\n\nvar _index3 = _interopRequireDefault(_index2);\n\n_index3[\"default\"](\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeOrValueType(\"null\", \"Expression\", \"SpreadElement\")))\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n\n_index3[\"default\"](\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: _index2.assertValueType(\"string\")\n    },\n    left: {\n      validate: _index2.assertNodeType(\"LVal\")\n    },\n    right: {\n      validate: _index2.assertNodeType(\"Expression\")\n    }\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"]\n});\n\n_index3[\"default\"](\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.BINARY_OPERATORS)\n    },\n    left: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    right: {\n      validate: _index2.assertNodeType(\"Expression\")\n    }\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"]\n});\n\n_index3[\"default\"](\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: _index2.assertNodeType(\"DirectiveLiteral\")\n    }\n  }\n});\n\n_index3[\"default\"](\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: _index2.assertValueType(\"string\")\n    }\n  }\n});\n\n_index3[\"default\"](\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Directive\"))),\n      \"default\": []\n    },\n    body: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"]\n});\n\n_index3[\"default\"](\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: _index2.assertNodeType(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\n\n_index3[\"default\"](\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\"],\n  fields: {\n    callee: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    arguments: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Expression\", \"SpreadElement\")))\n    }\n  },\n  aliases: [\"Expression\"]\n});\n\n_index3[\"default\"](\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: _index2.assertNodeType(\"Identifier\")\n    },\n    body: {\n      validate: _index2.assertNodeType(\"BlockStatement\")\n    }\n  },\n  aliases: [\"Scopable\"]\n});\n\n_index3[\"default\"](\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    consequent: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    alternate: {\n      validate: _index2.assertNodeType(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\", \"Conditional\"]\n});\n\n_index3[\"default\"](\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: _index2.assertNodeType(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\n\n_index3[\"default\"](\"DebuggerStatement\", {\n  aliases: [\"Statement\"]\n});\n\n_index3[\"default\"](\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    body: {\n      validate: _index2.assertNodeType(\"Statement\")\n    }\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"]\n});\n\n_index3[\"default\"](\"EmptyStatement\", {\n  aliases: [\"Statement\"]\n});\n\n_index3[\"default\"](\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: _index2.assertNodeType(\"Expression\")\n    }\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"]\n});\n\n_index3[\"default\"](\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: _index2.assertNodeType(\"Program\")\n    }\n  }\n});\n\n_index3[\"default\"](\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: _index2.assertNodeType(\"VariableDeclaration\", \"LVal\")\n    },\n    right: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    body: {\n      validate: _index2.assertNodeType(\"Statement\")\n    }\n  }\n});\n\n_index3[\"default\"](\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: _index2.assertNodeType(\"VariableDeclaration\", \"Expression\"),\n      optional: true\n    },\n    test: {\n      validate: _index2.assertNodeType(\"Expression\"),\n      optional: true\n    },\n    update: {\n      validate: _index2.assertNodeType(\"Expression\"),\n      optional: true\n    },\n    body: {\n      validate: _index2.assertNodeType(\"Statement\")\n    }\n  }\n});\n\n_index3[\"default\"](\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: {\n    id: {\n      validate: _index2.assertNodeType(\"Identifier\")\n    },\n    params: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"LVal\")))\n    },\n    body: {\n      validate: _index2.assertNodeType(\"BlockStatement\")\n    },\n    generator: {\n      \"default\": false,\n      validate: _index2.assertValueType(\"boolean\")\n    },\n    async: {\n      \"default\": false,\n      validate: _index2.assertValueType(\"boolean\")\n    }\n  },\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Statement\", \"Pureish\", \"Declaration\"]\n});\n\n_index3[\"default\"](\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: {\n    id: {\n      validate: _index2.assertNodeType(\"Identifier\"),\n      optional: true\n    },\n    params: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"LVal\")))\n    },\n    body: {\n      validate: _index2.assertNodeType(\"BlockStatement\")\n    },\n    generator: {\n      \"default\": false,\n      validate: _index2.assertValueType(\"boolean\")\n    },\n    async: {\n      \"default\": false,\n      validate: _index2.assertValueType(\"boolean\")\n    }\n  }\n});\n\n_index3[\"default\"](\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    name: {\n      validate: function validate(node, key, val) {\n        if (!t.isValidIdentifier(val)) {\n          // todo\n        }\n      }\n    }\n  }\n});\n\n_index3[\"default\"](\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    consequent: {\n      validate: _index2.assertNodeType(\"Statement\")\n    },\n    alternate: {\n      optional: true,\n      validate: _index2.assertNodeType(\"Statement\")\n    }\n  }\n});\n\n_index3[\"default\"](\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: _index2.assertNodeType(\"Identifier\")\n    },\n    body: {\n      validate: _index2.assertNodeType(\"Statement\")\n    }\n  }\n});\n\n_index3[\"default\"](\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: _index2.assertValueType(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n_index3[\"default\"](\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: _index2.assertValueType(\"number\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n_index3[\"default\"](\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n_index3[\"default\"](\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: _index2.assertValueType(\"boolean\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n_index3[\"default\"](\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: _index2.assertValueType(\"string\")\n    },\n    flags: {\n      validate: _index2.assertValueType(\"string\"),\n      \"default\": \"\"\n    }\n  }\n});\n\n_index3[\"default\"](\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.LOGICAL_OPERATORS)\n    },\n    left: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    right: {\n      validate: _index2.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index3[\"default\"](\"MemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    object: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    property: {\n      validate: function validate(node, key, val) {\n        var expectedType = node.computed ? \"Expression\" : \"Identifier\";\n        _index2.assertNodeType(expectedType)(node, key, val);\n      }\n    },\n    computed: {\n      \"default\": false\n    }\n  }\n});\n\n_index3[\"default\"](\"NewExpression\", {\n  visitor: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    arguments: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Expression\", \"SpreadElement\")))\n    }\n  }\n});\n\n_index3[\"default\"](\"Program\", {\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\"],\n  fields: {\n    directives: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Directive\"))),\n      \"default\": []\n    },\n    body: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"FunctionParent\"]\n});\n\n_index3[\"default\"](\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"ObjectMethod\", \"ObjectProperty\", \"SpreadProperty\")))\n    }\n  }\n});\n\n_index3[\"default\"](\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\"],\n  fields: {\n    kind: {\n      validate: _index2.chain(_index2.assertValueType(\"string\"), _index2.assertOneOf(\"method\", \"get\", \"set\")),\n      \"default\": \"method\"\n    },\n    computed: {\n      validate: _index2.assertValueType(\"boolean\"),\n      \"default\": false\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    decorators: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Decorator\")))\n    },\n    body: {\n      validate: _index2.assertNodeType(\"BlockStatement\")\n    },\n    generator: {\n      \"default\": false,\n      validate: _index2.assertValueType(\"boolean\")\n    },\n    async: {\n      \"default\": false,\n      validate: _index2.assertValueType(\"boolean\")\n    }\n  },\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"UserWhitespacable\", \"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"ObjectMember\"]\n});\n\n_index3[\"default\"](\"ObjectProperty\", {\n  builder: [\"key\", \"value\", \"computed\", \"shorthand\", \"decorators\"],\n  fields: {\n    computed: {\n      validate: _index2.assertValueType(\"boolean\"),\n      \"default\": false\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    value: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    shorthand: {\n      validate: _index2.assertValueType(\"boolean\"),\n      \"default\": false\n    },\n    decorators: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Decorator\"))),\n      optional: true\n    }\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"]\n});\n\n_index3[\"default\"](\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  aliases: [\"LVal\"],\n  fields: {\n    argument: {\n      validate: _index2.assertNodeType(\"LVal\")\n    }\n  }\n});\n\n_index3[\"default\"](\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: _index2.assertNodeType(\"Expression\"),\n      optional: true\n    }\n  }\n});\n\n_index3[\"default\"](\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Expression\")))\n    }\n  },\n  aliases: [\"Expression\"]\n});\n\n_index3[\"default\"](\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: _index2.assertNodeType(\"Expression\"),\n      optional: true\n    },\n    consequent: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"Statement\")))\n    }\n  }\n});\n\n_index3[\"default\"](\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    cases: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"SwitchCase\")))\n    }\n  }\n});\n\n_index3[\"default\"](\"ThisExpression\", {\n  aliases: [\"Expression\"]\n});\n\n_index3[\"default\"](\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: _index2.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n// todo: at least handler or finalizer should be set to be valid\n_index3[\"default\"](\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    body: {\n      validate: _index2.assertNodeType(\"BlockStatement\")\n    },\n    handler: {\n      optional: true,\n      handler: _index2.assertNodeType(\"BlockStatement\")\n    },\n    finalizer: {\n      optional: true,\n      validate: _index2.assertNodeType(\"BlockStatement\")\n    }\n  }\n});\n\n_index3[\"default\"](\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      \"default\": false\n    },\n    argument: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.UNARY_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"]\n});\n\n_index3[\"default\"](\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      \"default\": false\n    },\n    argument: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.UPDATE_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"]\n});\n\n_index3[\"default\"](\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    kind: {\n      validate: _index2.chain(_index2.assertValueType(\"string\"), _index2.assertOneOf(\"var\", \"let\", \"const\"))\n    },\n    declarations: {\n      validate: _index2.chain(_index2.assertValueType(\"array\"), _index2.assertEach(_index2.assertNodeType(\"VariableDeclarator\")))\n    }\n  }\n});\n\n_index3[\"default\"](\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: _index2.assertNodeType(\"LVal\")\n    },\n    init: {\n      optional: true,\n      validate: _index2.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index3[\"default\"](\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: _index2.assertNodeType(\"Expression\")\n    },\n    body: {\n      validate: _index2.assertNodeType(\"BlockStatement\", \"Statement\")\n    }\n  }\n});\n\n_index3[\"default\"](\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      object: _index2.assertNodeType(\"Expression\")\n    },\n    body: {\n      validate: _index2.assertNodeType(\"BlockStatement\")\n    }\n  }\n});"]}