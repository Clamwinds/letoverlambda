{"version":3,"sources":["es2015.js"],"names":[],"mappings":"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","file":"es2015-compiled.js","sourcesContent":["/* @flow */\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\n_index2[\"default\"](\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    left: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    right: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    elements: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Expression\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\"],\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: {\n    params: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"LVal\")))\n    },\n    body: {\n      validate: _index.assertNodeType(\"BlockStatement\", \"Expression\")\n    },\n    async: {\n      validate: _index.assertValueType(\"boolean\"),\n      \"default\": false\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"ClassMethod\", \"ClassProperty\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassDeclaration\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\"id\", \"body\", \"superClass\", \"typeParameters\", \"superTypeParameters\", \"implements\", \"decorators\"],\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\", \"Pureish\"],\n  fields: {\n    id: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    body: {\n      validate: _index.assertNodeType(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    decorators: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Decorator\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassExpression\", {\n  inherits: \"ClassDeclaration\",\n  aliases: [\"Scopable\", \"Class\", \"Expression\", \"Pureish\"],\n  fields: {\n    id: {\n      optional: true,\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    body: {\n      validate: _index.assertNodeType(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    decorators: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Decorator\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    source: {\n      validate: _index.assertNodeType(\"StringLiteral\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: _index.assertNodeType(\"FunctionDeclaration\", \"ClassDeclaration\", \"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportNamedDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: _index.assertNodeType(\"Declaration\"),\n      optional: true\n    },\n    specifiers: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"ExportSpecifier\")))\n    },\n    source: {\n      validate: _index.assertNodeType(\"StringLiteral\"),\n      optional: true\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    imported: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: _index.assertNodeType(\"VariableDeclaration\", \"LVal\")\n    },\n    right: {\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    body: {\n      validate: _index.assertNodeType(\"Statement\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportDeclaration\", {\n  visitor: [\"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\n  fields: {\n    specifiers: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"ImportSpecifier\", \"ImportDefaultSpecifier\", \"ImportNamespaceSpecifier\")))\n    },\n    source: {\n      validate: _index.assertNodeType(\"StringLiteral\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: _index.assertNodeType(\"Identifier\")\n    },\n    imported: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    // todo: limit to new.target\n    meta: {\n      validate: _index.assertValueType(\"string\")\n    },\n    property: {\n      validate: _index.assertValueType(\"string\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  fields: {\n    kind: {\n      validate: _index.chain(_index.assertValueType(\"string\"), _index.assertOneOf(\"get\", \"set\", \"method\", \"constructor\")),\n      \"default\": \"method\"\n    },\n    computed: {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    },\n    \"static\": {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\n        _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    params: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"LVal\")))\n    },\n    body: {\n      validate: _index.assertNodeType(\"BlockStatement\")\n    },\n    generator: {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    },\n    async: {\n      \"default\": false,\n      validate: _index.assertValueType(\"boolean\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ObjectPattern\", {\n  visitor: [\"properties\", \"typeAnnotation\"],\n  aliases: [\"Pattern\", \"LVal\"],\n  fields: {\n    properties: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"RestProperty\", \"Property\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  fields: {\n    argument: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"Super\", {\n  aliases: [\"Expression\"]\n});\n\n_index2[\"default\"](\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: _index.assertNodeType(\"Expression\")\n    },\n    quasi: {\n      validate: _index.assertNodeType(\"TemplateLiteral\")\n    }\n  }\n});\n\n_index2[\"default\"](\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      // todo: flatten `raw` into main node\n    },\n    tail: {\n      validate: _index.assertValueType(\"boolean\"),\n      \"default\": false\n    }\n  }\n});\n\n_index2[\"default\"](\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"TemplateElement\")))\n    },\n    expressions: {\n      validate: _index.chain(_index.assertValueType(\"array\"), _index.assertEach(_index.assertNodeType(\"Expression\")))\n    }\n  }\n});\n\n_index2[\"default\"](\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: _index.assertValueType(\"boolean\"),\n      \"default\": false\n    },\n    argument: {\n      optional: true,\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});"]}