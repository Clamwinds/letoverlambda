{"version":3,"sources":["experimental.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,sBAAsB,GAAG,OAAO,CAAC,+CAA+C,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEjG,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEhC,IAAI,OAAO,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC;;AAE7C,OAAO,CAAC,SAAS,CAAC,CAAC,iBAAiB,EAAE;AACpC,SAAO,EAAE,CAAC,UAAU,CAAC;AACrB,SAAO,EAAE,CAAC,UAAU,CAAC;AACrB,SAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC;AACzC,QAAM,EAAE;AACN,YAAQ,EAAE;AACR,cAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;KAC9C;GACF;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE;AACnC,SAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;AAC7B,SAAO,EAAE,CAAC,YAAY,CAAC;AACvB,QAAM,EAAE;;GAEP;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE;AAC9B,SAAO,EAAE,CAAC,YAAY,CAAC;AACvB,QAAM,EAAE;AACN,cAAU,EAAE;AACV,cAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;KAC9C;GACF;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE;AACjC,SAAO,EAAE,CAAC,MAAM,CAAC;AACjB,SAAO,EAAE,CAAC,YAAY,CAAC;AACvB,QAAM,EAAE;AACN,QAAI,EAAE;AACJ,cAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,gBAAgB,CAAC;KAClD;GACF;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,SAAS,CAAC,CAAC,wBAAwB,EAAE;AAC3C,SAAO,EAAE,CAAC,UAAU,CAAC;AACrB,SAAO,EAAE,CAAC,iBAAiB,CAAC;AAC5B,QAAM,EAAE;AACN,YAAQ,EAAE;AACR,cAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;KAC9C;GACF;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,SAAS,CAAC,CAAC,0BAA0B,EAAE;AAC7C,SAAO,EAAE,CAAC,UAAU,CAAC;AACrB,SAAO,EAAE,CAAC,iBAAiB,CAAC;AAC5B,QAAM,EAAE;AACN,YAAQ,EAAE;AACR,cAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;KAC9C;GACF;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE;AACjC,SAAO,EAAE,CAAC,UAAU,CAAC;AACrB,SAAO,EAAE,CAAC,WAAW,CAAC;AACtB,QAAM,EAAE;AACN,YAAQ,EAAE;AACR,cAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC;KACxC;GACF;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE;AACnC,SAAO,EAAE,CAAC,UAAU,CAAC;AACrB,SAAO,EAAE,CAAC,WAAW,CAAC;AACtB,QAAM,EAAE;AACN,YAAQ,EAAE;AACR,cAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC;KAC9C;GACF;CACF,CAAC,CAAC","file":"experimental-compiled.js","sourcesContent":["/* @flow */\n\n\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\n_index2[\"default\"](\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: {\n    // todo\n  }\n});\n\n_index2[\"default\"](\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});\n\n_index2[\"default\"](\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: _index.assertNodeType(\"BlockStatement\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: _index.assertNodeType(\"Identifier\")\n    }\n  }\n});\n\n_index2[\"default\"](\"RestProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  fields: {\n    argument: {\n      validate: _index.assertNodeType(\"LVal\")\n    }\n  }\n});\n\n_index2[\"default\"](\"SpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  fields: {\n    argument: {\n      validate: _index.assertNodeType(\"Expression\")\n    }\n  }\n});"]}