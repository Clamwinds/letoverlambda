{"version":3,"sources":["index.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,oCAAoC,CAAC,CAAC,SAAS,CAAC,CAAC;;AAE5E,IAAI,uBAAuB,GAAG,OAAO,CAAC,gDAAgD,CAAC,CAAC,SAAS,CAAC,CAAC;;AAEnG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AAC1B,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;AAChC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;AAClC,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;AACxC,OAAO,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACtD,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AACtB,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;;AAEhC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEjC,IAAI,CAAC,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;;AAExC,IAAI,YAAY,GAAG,EAAE,CAAC;AACtB,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;AACpC,IAAI,UAAU,GAAG,EAAE,CAAC;AACpB,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;AAChC,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;AAClC,IAAI,YAAY,GAAG,EAAE,CAAC;AACtB,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;AACpC,IAAI,eAAe,GAAG,EAAE,CAAC;;AAEzB,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,SAAS,OAAO,CAAC,GAAG,EAAE;AACpB,MAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACtB,WAAO,OAAO,CAAC;GAChB,MAAM,IAAI,GAAG,KAAK,IAAI,EAAE;AACvB,WAAO,MAAM,CAAC;GACf,MAAM,IAAI,GAAG,KAAK,SAAS,EAAE;AAC5B,WAAO,WAAW,CAAC;GACpB,MAAM;AACL,kBAAc,GAAG,yCAAH,GAAG,EAAC;GACnB;CACF;;AAED,SAAS,UAAU,CAAC,uBAAQ,gBAAgC;AAC1D,WAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AACjC,QAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO;;AAEhC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,cAAQ,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7C;GACF;AACD,WAAS,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC1B,SAAO,SAAS,CAAC;CAClB;;AAED,SAAS,WAAW,iBAAkB;AACpC,OAAK,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE;AACnF,QAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;GAC9B;;AAED,WAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AAChC,QAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACzB,YAAM,IAAI,SAAS,CAAC,WAAW,GAAG,GAAG,GAAG,+BAA+B,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;KACrI;GACF;;AAED,UAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;;AAEtB,SAAO,QAAQ,CAAC;CACjB;;AAED,SAAS,cAAc,iBAAkB;AACvC,OAAK,IAAI,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;AAC1F,SAAK,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;GACjC;;AAED,WAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AAChC,QAAI,KAAK,GAAG,KAAK,CAAC;;AAElB,SAAK,IAAI,SAAS,GAAG,KAAK,EAAE,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,SAAS,GAAG,QAAQ,GAAG,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,IAAI;AACrI,UAAI,IAAI,CAAC;;AAET,UAAI,QAAQ,EAAE;AACZ,YAAI,EAAE,IAAI,SAAS,CAAC,MAAM,EAAE,MAAM;AAClC,YAAI,GAAG,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;OACxB,MAAM;AACL,UAAE,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,YAAI,EAAE,CAAC,IAAI,EAAE,MAAM;AACnB,YAAI,GAAG,EAAE,CAAC,KAAK,CAAC;OACjB;;AAED,UAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,UAAI,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;AACnB,aAAK,GAAG,IAAI,CAAC;AACb,cAAM;OACP;KACF;;AAED,QAAI,CAAC,KAAK,EAAE;AACV,YAAM,IAAI,SAAS,CAAC,WAAW,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,iCAAiC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KACjL;GACF;;AAED,UAAQ,CAAC,cAAc,GAAG,KAAK,CAAC;;AAEhC,SAAO,QAAQ,CAAC;CACjB;;AAED,SAAS,qBAAqB,iBAAkB;AAC9C,OAAK,IAAI,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;AAC1F,SAAK,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;GACjC;;AAED,WAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AAChC,QAAI,KAAK,GAAG,KAAK,CAAC;;AAElB,SAAK,IAAI,UAAU,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,UAAU,GAAG,SAAS,GAAG,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI;AAC7I,UAAI,KAAK,CAAC;;AAEV,UAAI,SAAS,EAAE;AACb,YAAI,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM;AACpC,aAAK,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;OAC3B,MAAM;AACL,WAAG,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;AACxB,YAAI,GAAG,CAAC,IAAI,EAAE,MAAM;AACpB,aAAK,GAAG,GAAG,CAAC,KAAK,CAAC;OACnB;;AAED,UAAI,IAAI,GAAG,KAAK,CAAC;;AAEjB,UAAI,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;AAC5C,aAAK,GAAG,IAAI,CAAC;AACb,cAAM;OACP;KACF;;AAED,QAAI,CAAC,KAAK,EAAE;AACV,YAAM,IAAI,SAAS,CAAC,WAAW,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,iCAAiC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KACjL;GACF;;AAED,UAAQ,CAAC,qBAAqB,GAAG,KAAK,CAAC;;AAEvC,SAAO,QAAQ,CAAC;CACjB;;AAED,SAAS,eAAe,CAAC,iBAAI,gBAA8B;AACzD,WAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AAChC,QAAI,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;;AAElC,QAAI,CAAC,KAAK,EAAE;AACV,YAAM,IAAI,SAAS,CAAC,WAAW,GAAG,GAAG,GAAG,oBAAoB,GAAG,IAAI,GAAG,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;KACnG;GACF;;AAED,UAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;;AAErB,SAAO,QAAQ,CAAC;CACjB;;AAED,SAAS,KAAK,iBAAkB;AAC9B,OAAK,IAAI,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;AACxF,OAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;GAC/B;;AAED,WAAS,QAAQ,GAAG;AAClB,SAAK,IAAI,UAAU,GAAG,GAAG,EAAE,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,UAAU,GAAG,SAAS,GAAG,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI;AAC3I,UAAI,KAAK,CAAC;;AAEV,UAAI,SAAS,EAAE;AACb,YAAI,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM;AACpC,aAAK,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;OAC3B,MAAM;AACL,WAAG,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;AACxB,YAAI,GAAG,CAAC,IAAI,EAAE,MAAM;AACpB,aAAK,GAAG,GAAG,CAAC,KAAK,CAAC;OACnB;;AAED,UAAI,EAAE,GAAG,KAAK,CAAC;;AAEf,QAAE,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;KAChC;GACF;AACD,UAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;AACvB,SAAO,QAAQ,CAAC;CACjB;;AAED,SAAS,UAAU,CAAC,iBAAI,EAAe;AACrC,MAAI;;;;;;gBAAI,GAMS,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAEzF,MAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;;AAE3D,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC;AACnD,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC;AACtD,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC;AACtD,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;;AAEtE,MAAI,IAAI,CAAC,eAAe,EAAE;AACxB,mBAAe,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;GAC9C;;;AAAA,AAGD,OAAK,IAAI,UAAU,GAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,qBAAC,AAAqB,EAAE,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,UAAU,GAAG,SAAS,GAAG,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI;AAC/L,QAAI,KAAK,CAAC;;AAEV,QAAI,SAAS,EAAE;AACb,UAAI,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM;AACpC,WAAK,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;KAC3B,MAAM;AACL,SAAG,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;AACxB,UAAI,GAAG,CAAC,IAAI,EAAE,MAAM;AACpB,WAAK,GAAG,GAAG,CAAC,KAAK,CAAC;KACnB;;AAED,QAAI,GAAG,GAAG,KAAK,CAAC;;AAEhB,QAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;GAC3C;;AAED,OAAK,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE;AAC3B,QAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;AAE7B,QAAI,KAAK,CAAC,SAAS,CAAC,KAAK,SAAS,EAAE;AAClC,WAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;KACzB,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AAC1B,WAAK,CAAC,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAC7D;GACF;;AAED,cAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;AAClC,cAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;AAClC,aAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AAChC,YAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;;AAEhC,OAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;CACpB;;AAED,IAAI,KAAK,GAAG,EAAE,CAAC","file":"index-compiled.js","sourcesContent":["/* @noflow */\n\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\nexports.assertEach = assertEach;\nexports.assertOneOf = assertOneOf;\nexports.assertNodeType = assertNodeType;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertValueType = assertValueType;\nexports.chain = chain;\nexports[\"default\"] = defineType;\n\nvar _index = require(\"../index\");\n\nvar t = _interopRequireWildcard(_index);\n\nvar VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nvar ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nvar NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nvar BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nvar DEPRECATED_KEYS = {};\n\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else if (val === undefined) {\n    return \"undefined\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction assertEach(callback /*: Function*/) /*: Function*/ {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (var i = 0; i < val.length; i++) {\n      callback(node, key + \"[\" + i + \"]\", val[i]);\n    }\n  }\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf() /*: Function*/ {\n  for (var _len = arguments.length, vals = Array(_len), _key = 0; _key < _len; _key++) {\n    vals[_key] = arguments[_key];\n  }\n\n  function validate(node, key, val) {\n    if (vals.indexOf(val) < 0) {\n      throw new TypeError(\"Property \" + key + \" expected value to be one of \" + JSON.stringify(vals) + \" but got \" + JSON.stringify(val));\n    }\n  }\n\n  validate.oneOf = vals;\n\n  return validate;\n}\n\nfunction assertNodeType() /*: Function*/ {\n  for (var _len2 = arguments.length, types = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    types[_key2] = arguments[_key2];\n  }\n\n  function validate(node, key, val) {\n    var valid = false;\n\n    for (var _iterator = types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (t.is(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(\"Property \" + key + \" of \" + node.type + \" expected node to be of a type \" + JSON.stringify(types) + \" but instead got \" + JSON.stringify(val && val.type));\n    }\n  }\n\n  validate.oneOfNodeTypes = types;\n\n  return validate;\n}\n\nfunction assertNodeOrValueType() /*: Function*/ {\n  for (var _len3 = arguments.length, types = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    types[_key3] = arguments[_key3];\n  }\n\n  function validate(node, key, val) {\n    var valid = false;\n\n    for (var _iterator2 = types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      if (getType(val) === type || t.is(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError(\"Property \" + key + \" of \" + node.type + \" expected node to be of a type \" + JSON.stringify(types) + \" but instead got \" + JSON.stringify(val && val.type));\n    }\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n\n  return validate;\n}\n\nfunction assertValueType(type /*: string*/) /*: Function*/ {\n  function validate(node, key, val) {\n    var valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(\"Property \" + key + \" expected type of \" + type + \" but got \" + getType(val));\n    }\n  }\n\n  validate.type = type;\n\n  return validate;\n}\n\nfunction chain() /*: Function*/ {\n  for (var _len4 = arguments.length, fns = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    fns[_key4] = arguments[_key4];\n  }\n\n  function validate() {\n    for (var _iterator3 = fns, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var fn = _ref3;\n\n      fn.apply(undefined, arguments);\n    }\n  }\n  validate.chainOf = fns;\n  return validate;\n}\n\nfunction defineType(type /*: string*/) {\n  var opts /*: {\n               fields?: Object;\n               visitor?: Array<string>;\n               aliases?: Array<string>;\n               builder?: Array<string>;\n               inherits?: string;\n             }*/ = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  var inherits = opts.inherits && store[opts.inherits] || {};\n\n  opts.fields = opts.fields || inherits.fields || {};\n  opts.visitor = opts.visitor || inherits.visitor || [];\n  opts.aliases = opts.aliases || inherits.aliases || [];\n  opts.builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  // ensure all field keys are represented in `fields`\n  for (var _iterator4 = (opts.visitor.concat(opts.builder) /*: Array<string>*/), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n    var _ref4;\n\n    if (_isArray4) {\n      if (_i4 >= _iterator4.length) break;\n      _ref4 = _iterator4[_i4++];\n    } else {\n      _i4 = _iterator4.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var key = _ref4;\n\n    opts.fields[key] = opts.fields[key] || {};\n  }\n\n  for (var key in opts.fields) {\n    var field = opts.fields[key];\n\n    if (field[\"default\"] === undefined) {\n      field[\"default\"] = null;\n    } else if (!field.validate) {\n      field.validate = assertValueType(getType(field[\"default\"]));\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor;\n  BUILDER_KEYS[type] = opts.builder;\n  NODE_FIELDS[type] = opts.fields;\n  ALIAS_KEYS[type] = opts.aliases;\n\n  store[type] = opts;\n}\n\nvar store = {};"]}