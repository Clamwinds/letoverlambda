{"version":3,"sources":["source-map-consumer.js"],"names":[],"mappings":"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","file":"source-map-consumer-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n{\n  var util = require('./util');\n  var binarySearch = require('./binary-search');\n  var ArraySet = require('./array-set').ArraySet;\n  var base64VLQ = require('./base64-vlq');\n  var quickSort = require('./quick-sort').quickSort;\n\n  function SourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    return sourceMap.sections != null\n      ? new IndexedSourceMapConsumer(sourceMap)\n      : new BasicSourceMapConsumer(sourceMap);\n  }\n\n  SourceMapConsumer.fromSourceMap = function(aSourceMap) {\n    return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n  }\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  SourceMapConsumer.prototype._version = 3;\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n\n  SourceMapConsumer.prototype.__generatedMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n    get: function () {\n      if (!this.__generatedMappings) {\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__generatedMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype.__originalMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n    get: function () {\n      if (!this.__originalMappings) {\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__originalMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype._charIsMappingSeparator =\n    function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n      var c = aStr.charAt(index);\n      return c === \";\" || c === \",\";\n    };\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  SourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      throw new Error(\"Subclasses must implement _parseMappings\");\n    };\n\n  SourceMapConsumer.GENERATED_ORDER = 1;\n  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n  SourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n  SourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  SourceMapConsumer.prototype.eachMapping =\n    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n      var context = aContext || null;\n      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n      var mappings;\n      switch (order) {\n      case SourceMapConsumer.GENERATED_ORDER:\n        mappings = this._generatedMappings;\n        break;\n      case SourceMapConsumer.ORIGINAL_ORDER:\n        mappings = this._originalMappings;\n        break;\n      default:\n        throw new Error(\"Unknown order of iteration.\");\n      }\n\n      var sourceRoot = this.sourceRoot;\n      mappings.map(function (mapping) {\n        var source = mapping.source === null ? null : this._sources.at(mapping.source);\n        if (source != null && sourceRoot != null) {\n          source = util.join(sourceRoot, source);\n        }\n        return {\n          source: source,\n          generatedLine: mapping.generatedLine,\n          generatedColumn: mapping.generatedColumn,\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: mapping.name === null ? null : this._names.at(mapping.name)\n        };\n      }, this).forEach(aCallback, context);\n    };\n\n  /**\n   * Returns all generated line and column information for the original source,\n   * line, and column provided. If no column is provided, returns all mappings\n   * corresponding to a either the line we are searching for or the next\n   * closest line that has any mappings. Otherwise, returns all mappings\n   * corresponding to the given line and either the column we are searching for\n   * or the next closest column that has any offsets.\n   *\n   * The only argument is an object with the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: Optional. the column number in the original source.\n   *\n   * and an array of objects is returned, each with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  SourceMapConsumer.prototype.allGeneratedPositionsFor =\n    function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n      var line = util.getArg(aArgs, 'line');\n\n      // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n      // returns the index of the closest mapping less than the needle. By\n      // setting needle.originalColumn to 0, we thus find the last mapping for\n      // the given line, provided such a mapping exists.\n      var needle = {\n        source: util.getArg(aArgs, 'source'),\n        originalLine: line,\n        originalColumn: util.getArg(aArgs, 'column', 0)\n      };\n\n      if (this.sourceRoot != null) {\n        needle.source = util.relative(this.sourceRoot, needle.source);\n      }\n      if (!this._sources.has(needle.source)) {\n        return [];\n      }\n      needle.source = this._sources.indexOf(needle.source);\n\n      var mappings = [];\n\n      var index = this._findMapping(needle,\n                                    this._originalMappings,\n                                    \"originalLine\",\n                                    \"originalColumn\",\n                                    util.compareByOriginalPositions,\n                                    binarySearch.LEAST_UPPER_BOUND);\n      if (index >= 0) {\n        var mapping = this._originalMappings[index];\n\n        if (aArgs.column === undefined) {\n          var originalLine = mapping.originalLine;\n\n          // Iterate until either we run out of mappings, or we run into\n          // a mapping for a different line than the one we found. Since\n          // mappings are sorted, this is guaranteed to find all mappings for\n          // the line we found.\n          while (mapping && mapping.originalLine === originalLine) {\n            mappings.push({\n              line: util.getArg(mapping, 'generatedLine', null),\n              column: util.getArg(mapping, 'generatedColumn', null),\n              lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n            });\n\n            mapping = this._originalMappings[++index];\n          }\n        } else {\n          var originalColumn = mapping.originalColumn;\n\n          // Iterate until either we run out of mappings, or we run into\n          // a mapping for a different line than the one we were searching for.\n          // Since mappings are sorted, this is guaranteed to find all mappings for\n          // the line we are searching for.\n          while (mapping &&\n                 mapping.originalLine === line &&\n                 mapping.originalColumn == originalColumn) {\n            mappings.push({\n              line: util.getArg(mapping, 'generatedLine', null),\n              column: util.getArg(mapping, 'generatedColumn', null),\n              lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n            });\n\n            mapping = this._originalMappings[++index];\n          }\n        }\n      }\n\n      return mappings;\n    };\n\n  exports.SourceMapConsumer = SourceMapConsumer;\n\n  /**\n   * A BasicSourceMapConsumer instance represents a parsed source map which we can\n   * query for information about the original file positions by giving it a file\n   * position in the generated source.\n   *\n   * The only parameter is the raw source map (either as a JSON string, or\n   * already parsed to an object). According to the spec, source maps have the\n   * following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - sources: An array of URLs to the original source files.\n   *   - names: An array of identifiers which can be referrenced by individual mappings.\n   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n   *   - sourcesContent: Optional. An array of contents of the original source files.\n   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n   *   - file: Optional. The generated file this source map is associated with.\n   *\n   * Here is an example source map, taken from the source map spec[0]:\n   *\n   *     {\n   *       version : 3,\n   *       file: \"out.js\",\n   *       sourceRoot : \"\",\n   *       sources: [\"foo.js\", \"bar.js\"],\n   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *       mappings: \"AA,AB;;ABCDE;\"\n   *     }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n   */\n  function BasicSourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sources = util.getArg(sourceMap, 'sources');\n    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n    // requires the array) to play nice here.\n    var names = util.getArg(sourceMap, 'names', []);\n    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n    var mappings = util.getArg(sourceMap, 'mappings');\n    var file = util.getArg(sourceMap, 'file', null);\n\n    // Once again, Sass deviates from the spec and supplies the version as a\n    // string rather than a number, so we use loose equality checking here.\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    sources = sources\n      // Some source maps produce relative source paths like \"./foo.js\" instead of\n      // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n      // See bugzil.la/1090768.\n      .map(util.normalize)\n      // Always ensure that absolute sources are internally stored relative to\n      // the source root, if the source root is absolute. Not doing this would\n      // be particularly problematic when the source root is a prefix of the\n      // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n      .map(function (source) {\n        return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n          ? util.relative(sourceRoot, source)\n          : source;\n      });\n\n    // Pass `true` below to allow duplicate names and sources. While source maps\n    // are intended to be compressed and deduplicated, the TypeScript compiler\n    // sometimes generates source maps with duplicates in them. See Github issue\n    // #72 and bugzil.la/889492.\n    this._names = ArraySet.fromArray(names, true);\n    this._sources = ArraySet.fromArray(sources, true);\n\n    this.sourceRoot = sourceRoot;\n    this.sourcesContent = sourcesContent;\n    this._mappings = mappings;\n    this.file = file;\n  }\n\n  BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n  BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n  /**\n   * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @returns BasicSourceMapConsumer\n   */\n  BasicSourceMapConsumer.fromSourceMap =\n    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n      var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n      var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n      var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n      smc.sourceRoot = aSourceMap._sourceRoot;\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                              smc.sourceRoot);\n      smc.file = aSourceMap._file;\n\n      // Because we are modifying the entries (by converting string sources and\n      // names to indices into the sources and names ArraySets), we have to make\n      // a copy of the entry or else bad things happen. Shared mutable state\n      // strikes again! See github issue #191.\n\n      var generatedMappings = aSourceMap._mappings.toArray().slice();\n      var destGeneratedMappings = smc.__generatedMappings = [];\n      var destOriginalMappings = smc.__originalMappings = [];\n\n      for (var i = 0, length = generatedMappings.length; i < length; i++) {\n        var srcMapping = generatedMappings[i];\n        var destMapping = new Mapping;\n        destMapping.generatedLine = srcMapping.generatedLine;\n        destMapping.generatedColumn = srcMapping.generatedColumn;\n\n        if (srcMapping.source) {\n          destMapping.source = sources.indexOf(srcMapping.source);\n          destMapping.originalLine = srcMapping.originalLine;\n          destMapping.originalColumn = srcMapping.originalColumn;\n\n          if (srcMapping.name) {\n            destMapping.name = names.indexOf(srcMapping.name);\n          }\n\n          destOriginalMappings.push(destMapping);\n        }\n\n        destGeneratedMappings.push(destMapping);\n      }\n\n      quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n      return smc;\n    };\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  BasicSourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      return this._sources.toArray().map(function (s) {\n        return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n      }, this);\n    }\n  });\n\n  /**\n   * Provide the JIT with a nice shape / hidden class.\n   */\n  function Mapping() {\n    this.generatedLine = 0;\n    this.generatedColumn = 0;\n    this.source = null;\n    this.originalLine = null;\n    this.originalColumn = null;\n    this.name = null;\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  BasicSourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      var generatedLine = 1;\n      var previousGeneratedColumn = 0;\n      var previousOriginalLine = 0;\n      var previousOriginalColumn = 0;\n      var previousSource = 0;\n      var previousName = 0;\n      var length = aStr.length;\n      var index = 0;\n      var cachedSegments = {};\n      var temp = {};\n      var originalMappings = [];\n      var generatedMappings = [];\n      var mapping, str, segment, end, value;\n\n      while (index < length) {\n        if (aStr.charAt(index) === ';') {\n          generatedLine++;\n          index++;\n          previousGeneratedColumn = 0;\n        }\n        else if (aStr.charAt(index) === ',') {\n          index++;\n        }\n        else {\n          mapping = new Mapping();\n          mapping.generatedLine = generatedLine;\n\n          // Because each offset is encoded relative to the previous one,\n          // many segments often have the same encoding. We can exploit this\n          // fact by caching the parsed variable length fields of each segment,\n          // allowing us to avoid a second parse if we encounter the same\n          // segment again.\n          for (end = index; end < length; end++) {\n            if (this._charIsMappingSeparator(aStr, end)) {\n              break;\n            }\n          }\n          str = aStr.slice(index, end);\n\n          segment = cachedSegments[str];\n          if (segment) {\n            index += str.length;\n          } else {\n            segment = [];\n            while (index < end) {\n              base64VLQ.decode(aStr, index, temp);\n              value = temp.value;\n              index = temp.rest;\n              segment.push(value);\n            }\n\n            if (segment.length === 2) {\n              throw new Error('Found a source, but no line and column');\n            }\n\n            if (segment.length === 3) {\n              throw new Error('Found a source and line, but no column');\n            }\n\n            cachedSegments[str] = segment;\n          }\n\n          // Generated column.\n          mapping.generatedColumn = previousGeneratedColumn + segment[0];\n          previousGeneratedColumn = mapping.generatedColumn;\n\n          if (segment.length > 1) {\n            // Original source.\n            mapping.source = previousSource + segment[1];\n            previousSource += segment[1];\n\n            // Original line.\n            mapping.originalLine = previousOriginalLine + segment[2];\n            previousOriginalLine = mapping.originalLine;\n            // Lines are stored 0-based\n            mapping.originalLine += 1;\n\n            // Original column.\n            mapping.originalColumn = previousOriginalColumn + segment[3];\n            previousOriginalColumn = mapping.originalColumn;\n\n            if (segment.length > 4) {\n              // Original name.\n              mapping.name = previousName + segment[4];\n              previousName += segment[4];\n            }\n          }\n\n          generatedMappings.push(mapping);\n          if (typeof mapping.originalLine === 'number') {\n            originalMappings.push(mapping);\n          }\n        }\n      }\n\n      quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n      this.__generatedMappings = generatedMappings;\n\n      quickSort(originalMappings, util.compareByOriginalPositions);\n      this.__originalMappings = originalMappings;\n    };\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  BasicSourceMapConsumer.prototype._findMapping =\n    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                           aColumnName, aComparator, aBias) {\n      // To return the position we are searching for, we must first find the\n      // mapping for the given position and then return the opposite position it\n      // points to. Because the mappings are sorted, we can use binary search to\n      // find the best mapping.\n\n      if (aNeedle[aLineName] <= 0) {\n        throw new TypeError('Line must be greater than or equal to 1, got '\n                            + aNeedle[aLineName]);\n      }\n      if (aNeedle[aColumnName] < 0) {\n        throw new TypeError('Column must be greater than or equal to 0, got '\n                            + aNeedle[aColumnName]);\n      }\n\n      return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n    };\n\n  /**\n   * Compute the last column for each generated mapping. The last column is\n   * inclusive.\n   */\n  BasicSourceMapConsumer.prototype.computeColumnSpans =\n    function SourceMapConsumer_computeColumnSpans() {\n      for (var index = 0; index < this._generatedMappings.length; ++index) {\n        var mapping = this._generatedMappings[index];\n\n        // Mappings do not contain a field for the last generated columnt. We\n        // can come up with an optimistic estimate, however, by assuming that\n        // mappings are contiguous (i.e. given two consecutive mappings, the\n        // first mapping ends where the second one starts).\n        if (index + 1 < this._generatedMappings.length) {\n          var nextMapping = this._generatedMappings[index + 1];\n\n          if (mapping.generatedLine === nextMapping.generatedLine) {\n            mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n            continue;\n          }\n        }\n\n        // The last mapping for each line spans the entire line.\n        mapping.lastGeneratedColumn = Infinity;\n      }\n    };\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  BasicSourceMapConsumer.prototype.originalPositionFor =\n    function SourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      var index = this._findMapping(\n        needle,\n        this._generatedMappings,\n        \"generatedLine\",\n        \"generatedColumn\",\n        util.compareByGeneratedPositionsDeflated,\n        util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n      );\n\n      if (index >= 0) {\n        var mapping = this._generatedMappings[index];\n\n        if (mapping.generatedLine === needle.generatedLine) {\n          var source = util.getArg(mapping, 'source', null);\n          if (source !== null) {\n            source = this._sources.at(source);\n            if (this.sourceRoot != null) {\n              source = util.join(this.sourceRoot, source);\n            }\n          }\n          var name = util.getArg(mapping, 'name', null);\n          if (name !== null) {\n            name = this._names.at(name);\n          }\n          return {\n            source: source,\n            line: util.getArg(mapping, 'originalLine', null),\n            column: util.getArg(mapping, 'originalColumn', null),\n            name: name\n          };\n        }\n      }\n\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    };\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  BasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n    function BasicSourceMapConsumer_hasContentsOfAllSources() {\n      if (!this.sourcesContent) {\n        return false;\n      }\n      return this.sourcesContent.length >= this._sources.size() &&\n        !this.sourcesContent.some(function (sc) { return sc == null; });\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  BasicSourceMapConsumer.prototype.sourceContentFor =\n    function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n      if (!this.sourcesContent) {\n        return null;\n      }\n\n      if (this.sourceRoot != null) {\n        aSource = util.relative(this.sourceRoot, aSource);\n      }\n\n      if (this._sources.has(aSource)) {\n        return this.sourcesContent[this._sources.indexOf(aSource)];\n      }\n\n      var url;\n      if (this.sourceRoot != null\n          && (url = util.urlParse(this.sourceRoot))) {\n        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n        // many users. We can help them out when they expect file:// URIs to\n        // behave like it would if they were running a local HTTP server. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n        if (url.scheme == \"file\"\n            && this._sources.has(fileUriAbsPath)) {\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n        }\n\n        if ((!url.path || url.path == \"/\")\n            && this._sources.has(\"/\" + aSource)) {\n          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n        }\n      }\n\n      // This function is used recursively from\n      // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n      // don't want to throw if we can't find the source - we just want to\n      // return null, so we provide a flag to exit gracefully.\n      if (nullOnMissing) {\n        return null;\n      }\n      else {\n        throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n      }\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  BasicSourceMapConsumer.prototype.generatedPositionFor =\n    function SourceMapConsumer_generatedPositionFor(aArgs) {\n      var source = util.getArg(aArgs, 'source');\n      if (this.sourceRoot != null) {\n        source = util.relative(this.sourceRoot, source);\n      }\n      if (!this._sources.has(source)) {\n        return {\n          line: null,\n          column: null,\n          lastColumn: null\n        };\n      }\n      source = this._sources.indexOf(source);\n\n      var needle = {\n        source: source,\n        originalLine: util.getArg(aArgs, 'line'),\n        originalColumn: util.getArg(aArgs, 'column')\n      };\n\n      var index = this._findMapping(\n        needle,\n        this._originalMappings,\n        \"originalLine\",\n        \"originalColumn\",\n        util.compareByOriginalPositions,\n        util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n      );\n\n      if (index >= 0) {\n        var mapping = this._originalMappings[index];\n\n        if (mapping.source === needle.source) {\n          return {\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          };\n        }\n      }\n\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    };\n\n  exports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n  /**\n   * An IndexedSourceMapConsumer instance represents a parsed source map which\n   * we can query for information. It differs from BasicSourceMapConsumer in\n   * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n   * input.\n   *\n   * The only parameter is a raw source map (either as a JSON string, or already\n   * parsed to an object). According to the spec for indexed source maps, they\n   * have the following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - file: Optional. The generated file this source map is associated with.\n   *   - sections: A list of section definitions.\n   *\n   * Each value under the \"sections\" field has two fields:\n   *   - offset: The offset into the original specified at which this section\n   *       begins to apply, defined as an object with a \"line\" and \"column\"\n   *       field.\n   *   - map: A source map definition. This source map could also be indexed,\n   *       but doesn't have to be.\n   *\n   * Instead of the \"map\" field, it's also possible to have a \"url\" field\n   * specifying a URL to retrieve a source map from, but that's currently\n   * unsupported.\n   *\n   * Here's an example source map, taken from the source map spec[0], but\n   * modified to omit a section which uses the \"url\" field.\n   *\n   *  {\n   *    version : 3,\n   *    file: \"app.js\",\n   *    sections: [{\n   *      offset: {line:100, column:10},\n   *      map: {\n   *        version : 3,\n   *        file: \"section.js\",\n   *        sources: [\"foo.js\", \"bar.js\"],\n   *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *        mappings: \"AAAA,E;;ABCDE;\"\n   *      }\n   *    }],\n   *  }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n   */\n  function IndexedSourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sections = util.getArg(sourceMap, 'sections');\n\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n\n    var lastOffset = {\n      line: -1,\n      column: 0\n    };\n    this._sections = sections.map(function (s) {\n      if (s.url) {\n        // The url field will require support for asynchronicity.\n        // See https://github.com/mozilla/source-map/issues/16\n        throw new Error('Support for url field in sections not implemented.');\n      }\n      var offset = util.getArg(s, 'offset');\n      var offsetLine = util.getArg(offset, 'line');\n      var offsetColumn = util.getArg(offset, 'column');\n\n      if (offsetLine < lastOffset.line ||\n          (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n        throw new Error('Section offsets must be ordered and non-overlapping.');\n      }\n      lastOffset = offset;\n\n      return {\n        generatedOffset: {\n          // The offset fields are 0-based, but we use 1-based indices when\n          // encoding/decoding from VLQ.\n          generatedLine: offsetLine + 1,\n          generatedColumn: offsetColumn + 1\n        },\n        consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n      }\n    });\n  }\n\n  IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n  IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  IndexedSourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      var sources = [];\n      for (var i = 0; i < this._sections.length; i++) {\n        for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n          sources.push(this._sections[i].consumer.sources[j]);\n        }\n      }\n      return sources;\n    }\n  });\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  IndexedSourceMapConsumer.prototype.originalPositionFor =\n    function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      // Find the section containing the generated position we're trying to map\n      // to an original position.\n      var sectionIndex = binarySearch.search(needle, this._sections,\n        function(needle, section) {\n          var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n          if (cmp) {\n            return cmp;\n          }\n\n          return (needle.generatedColumn -\n                  section.generatedOffset.generatedColumn);\n        });\n      var section = this._sections[sectionIndex];\n\n      if (!section) {\n        return {\n          source: null,\n          line: null,\n          column: null,\n          name: null\n        };\n      }\n\n      return section.consumer.originalPositionFor({\n        line: needle.generatedLine -\n          (section.generatedOffset.generatedLine - 1),\n        column: needle.generatedColumn -\n          (section.generatedOffset.generatedLine === needle.generatedLine\n           ? section.generatedOffset.generatedColumn - 1\n           : 0),\n        bias: aArgs.bias\n      });\n    };\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n    function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n      return this._sections.every(function (s) {\n        return s.consumer.hasContentsOfAllSources();\n      });\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  IndexedSourceMapConsumer.prototype.sourceContentFor =\n    function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n      for (var i = 0; i < this._sections.length; i++) {\n        var section = this._sections[i];\n\n        var content = section.consumer.sourceContentFor(aSource, true);\n        if (content) {\n          return content;\n        }\n      }\n      if (nullOnMissing) {\n        return null;\n      }\n      else {\n        throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n      }\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  IndexedSourceMapConsumer.prototype.generatedPositionFor =\n    function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n      for (var i = 0; i < this._sections.length; i++) {\n        var section = this._sections[i];\n\n        // Only consider this section if the requested source is in the list of\n        // sources of the consumer.\n        if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n          continue;\n        }\n        var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n        if (generatedPosition) {\n          var ret = {\n            line: generatedPosition.line +\n              (section.generatedOffset.generatedLine - 1),\n            column: generatedPosition.column +\n              (section.generatedOffset.generatedLine === generatedPosition.line\n               ? section.generatedOffset.generatedColumn - 1\n               : 0)\n          };\n          return ret;\n        }\n      }\n\n      return {\n        line: null,\n        column: null\n      };\n    };\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  IndexedSourceMapConsumer.prototype._parseMappings =\n    function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      this.__generatedMappings = [];\n      this.__originalMappings = [];\n      for (var i = 0; i < this._sections.length; i++) {\n        var section = this._sections[i];\n        var sectionMappings = section.consumer._generatedMappings;\n        for (var j = 0; j < sectionMappings.length; j++) {\n          var mapping = sectionMappings[j];\n\n          var source = section.consumer._sources.at(mapping.source);\n          if (section.consumer.sourceRoot !== null) {\n            source = util.join(section.consumer.sourceRoot, source);\n          }\n          this._sources.add(source);\n          source = this._sources.indexOf(source);\n\n          var name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n\n          // The mappings coming from the consumer for the section have\n          // generated positions relative to the start of the section, so we\n          // need to offset them to be relative to the start of the concatenated\n          // generated file.\n          var adjustedMapping = {\n            source: source,\n            generatedLine: mapping.generatedLine +\n              (section.generatedOffset.generatedLine - 1),\n            generatedColumn: mapping.generatedColumn +\n              (section.generatedOffset.generatedLine === mapping.generatedLine\n              ? section.generatedOffset.generatedColumn - 1\n              : 0),\n            originalLine: mapping.originalLine,\n            originalColumn: mapping.originalColumn,\n            name: name\n          };\n\n          this.__generatedMappings.push(adjustedMapping);\n          if (typeof adjustedMapping.originalLine === 'number') {\n            this.__originalMappings.push(adjustedMapping);\n          }\n        }\n      }\n\n      quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n      quickSort(this.__originalMappings, util.compareByOriginalPositions);\n    };\n\n  exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n}\n"]}