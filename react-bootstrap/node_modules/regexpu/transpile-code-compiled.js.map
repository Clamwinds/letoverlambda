{"version":3,"sources":["transpile-code.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,SAAS,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAE/C,MAAM,CAAC,OAAO,GAAG,UAAS,KAAK,EAAE,OAAO,EAAE;AACzC,QAAO,KAAK,OAAO,GAAG,EAAE,CAAA,AAAC,CAAC;AAC1B,KAAI,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,EAAE,CAAC;AAClD,KAAI,aAAa,GAAG,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC;AAChD,KAAI,eAAe,GAAG,cAAc,IAAI,aAAa,CAAC;AACtD,KAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE;AAC9B,WAAS,EAAE,OAAO;AAClB,kBAAgB,EAAE,cAAc;EAChC,CAAC,CAAC;AACH,KAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACvB,KAAI,eAAe,EAAE;;;AAGpB,SAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE;AACzB,kBAAe,EAAE,aAAa;GAC9B,CAAC,CAAC;EACH;;AAAA,AAED,QAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;CAC/B,CAAC","file":"transpile-code-compiled.js","sourcesContent":["var esprima = require('esprima');\nvar recast = require('recast');\nvar transform = require('./transform-tree.js');\n\nmodule.exports = function(input, options) {\n\toptions || (options = {});\n\tvar sourceFileName = options.sourceFileName || '';\n\tvar sourceMapName = options.sourceMapName || '';\n\tvar createSourceMap = sourceFileName && sourceMapName;\n\tvar tree = recast.parse(input, {\n\t\t'esprima': esprima,\n\t\t'sourceFileName': sourceFileName\n\t});\n\ttree = transform(tree);\n\tif (createSourceMap) {\n\t\t// If a source map was requested, return an object with `code` and `map`\n\t\t// properties.\n\t\treturn recast.print(tree, {\n\t\t\t'sourceMapName': sourceMapName\n\t\t});\n\t}\n\t// If no source map was requested, return the transpiled code directly.\n\treturn recast.print(tree).code;\n};\n"]}