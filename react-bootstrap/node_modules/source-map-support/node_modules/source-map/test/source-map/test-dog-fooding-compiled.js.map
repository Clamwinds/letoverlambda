{"version":3,"sources":["test-dog-fooding.js"],"names":[],"mappings":"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","file":"test-dog-fooding-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n\n  exports['test eating our own dog food'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      file: 'testing.js',\n      sourceRoot: '/wu/tang'\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 1, column: 0 },\n      generated: { line: 2, column: 2 }\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 2, column: 0 },\n      generated: { line: 3, column: 2 }\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 3, column: 0 },\n      generated: { line: 4, column: 2 }\n    });\n\n    smg.addMapping({\n      source: 'gza.coffee',\n      original: { line: 4, column: 0 },\n      generated: { line: 5, column: 2 }\n    });\n\n    var smc = new SourceMapConsumer(smg.toString());\n\n    // Exact\n    util.assertMapping(2, 2, '/wu/tang/gza.coffee', 1, 0, null, smc, assert);\n    util.assertMapping(3, 2, '/wu/tang/gza.coffee', 2, 0, null, smc, assert);\n    util.assertMapping(4, 2, '/wu/tang/gza.coffee', 3, 0, null, smc, assert);\n    util.assertMapping(5, 2, '/wu/tang/gza.coffee', 4, 0, null, smc, assert);\n\n    // Fuzzy\n\n    // Original to generated\n    util.assertMapping(2, 0, null, null, null, null, smc, assert, true);\n    util.assertMapping(2, 9, '/wu/tang/gza.coffee', 1, 0, null, smc, assert, true);\n    util.assertMapping(3, 0, '/wu/tang/gza.coffee', 1, 0, null, smc, assert, true);\n    util.assertMapping(3, 9, '/wu/tang/gza.coffee', 2, 0, null, smc, assert, true);\n    util.assertMapping(4, 0, '/wu/tang/gza.coffee', 2, 0, null, smc, assert, true);\n    util.assertMapping(4, 9, '/wu/tang/gza.coffee', 3, 0, null, smc, assert, true);\n    util.assertMapping(5, 0, '/wu/tang/gza.coffee', 3, 0, null, smc, assert, true);\n    util.assertMapping(5, 9, '/wu/tang/gza.coffee', 4, 0, null, smc, assert, true);\n\n    // Generated to original\n    util.assertMapping(2, 2, '/wu/tang/gza.coffee', 1, 1, null, smc, assert, null, true);\n    util.assertMapping(3, 2, '/wu/tang/gza.coffee', 2, 3, null, smc, assert, null, true);\n    util.assertMapping(4, 2, '/wu/tang/gza.coffee', 3, 6, null, smc, assert, null, true);\n    util.assertMapping(5, 2, '/wu/tang/gza.coffee', 4, 9, null, smc, assert, null, true);\n  };\n\n});\n"]}